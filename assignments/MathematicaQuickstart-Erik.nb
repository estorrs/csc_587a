(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    214375,       5216]
NotebookOptionsPosition[    179984,       4651]
NotebookOutlinePosition[    180844,       4681]
CellTagsIndexPosition[    180757,       4676]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.7129969101987333`*^9},ExpressionUUID->"f4e321e7-8a3f-4112-8a72-\
e114f44ce6fb"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Quickstart Guide"
}], "Title",
 CellChangeTimes->{{3.583164813062953*^9, 
  3.583164820794673*^9}},ExpressionUUID->"211e0997-10db-4dba-a9ac-\
db9007c81901"],

Cell[CellGroupData[{

Cell["Instructions for this assignment", "Section",
 CellChangeTimes->{{3.774198531108274*^9, 
  3.774198535683736*^9}},ExpressionUUID->"e951116b-52c3-4fb9-8836-\
08d22bccf70b"],

Cell["\<\
As you read, evaluate all input cells and make sure you understand why the \
output is what it is. When you turn in this notebook, all input cells must \
have corresponding output cells showing that you evaluated them. In addition, \
you must have typed something for each exercise, regardless of whether you \
were able to get it correct. \
\>", "Text",
 CellChangeTimes->{{3.774198679607559*^9, 
  3.7741986953427877`*^9}},ExpressionUUID->"f2fc3daa-9c0d-4025-b38c-\
2c89ecc4b2d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notebooks and cells", "Section",
 CellChangeTimes->{{3.583164854286798*^9, 
  3.583164857372426*^9}},ExpressionUUID->"49f11fa7-3dbe-4560-97fc-\
c9b239e1bd76"],

Cell[CellGroupData[{

Cell["Videos", "Subsection",
 CellChangeTimes->{{3.6476165037963667`*^9, 
  3.647616505862584*^9}},ExpressionUUID->"f5620567-e392-44cc-9763-\
2fd139e83424"],

Cell["\<\
Please make sure you do the entire notebook below. If you like video \
instruction, feel free to also watch any of the videos found at 
http://www.wolfram.com/broadcast/screencasts/handsonstart/ 

\[OpenCurlyDoubleQuote]Notebooks\[CloseCurlyDoubleQuote] overlaps with the \
information provided in this section, \[OpenCurlyDoubleQuote]Notebooks and \
cells\[CloseCurlyDoubleQuote]. Some of the other videos overlap significantly \
with information provided below or in other assigned notebooks.\
\>", "Text",
 CellChangeTimes->{{3.6476165093103237`*^9, 3.647616589847036*^9}, {
  3.647616828740087*^9, 3.6476168327800913`*^9}, {3.647616933770933*^9, 
  3.647617018368287*^9}, {3.647617083352179*^9, 
  3.647617134690634*^9}},ExpressionUUID->"3d07da31-e372-49dc-ad10-\
eae3ef3376d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Interacting with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " through the notebook interface"
}], "Subsection",
 CellChangeTimes->{{3.6476165037963667`*^9, 3.647616505862584*^9}, {
  3.647617071990423*^9, 3.6476170762854443`*^9}, {3.6476174716886044`*^9, 
  3.647617480835166*^9}},ExpressionUUID->"a47ab05f-f86b-4f8e-bbd9-\
825f8ddce9cf"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox[" is split into two parts: the front-end and the ",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["kernel",
  FontWeight->"Bold",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox[".  You interact with ",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["Mathematica",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox[" through the front end with a document called a ",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["notebook",
  FontWeight->"Bold",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox[".   A notebook consists of a series of ",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["cells",
  FontWeight->"Bold",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox[". Textual cells contain static text, whether it be a document \
title, section title, or the text you are reading right now. This is the word \
processor part. You can use it for creating documents like this one, but you \
can also use it just for documenting your calculations or keeping notes to \
yourself as you do exploratory data analysis. Input cells contain stuff that \
you want to send to the ",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["Mathematica",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox[" kernel, which does the computations. Once the contents of an \
input cell is sent to the kernel (i.e. evaluated), the output of the \
computation (if any) is displayed in an output cell. For example, here is an \
input cell and the corresponding output cell.",
  FontColor->RGBColor[0., 0., 0.]]
}], "Text",
 CellChangeTimes->{{3.583164924598127*^9, 3.583165293091897*^9}, {
   3.583165364072296*^9, 3.583165430028685*^9}, {3.5841267463099813`*^9, 
   3.584126754083334*^9}, {3.584126941785578*^9, 3.5841270557498493`*^9}, {
   3.584127086096953*^9, 3.58412709793601*^9}, {3.584127134417687*^9, 
   3.584127148799851*^9}, {3.5844474424331493`*^9, 3.5844474555138483`*^9}, {
   3.5844477811035223`*^9, 3.584447784806389*^9}, {3.584449857313232*^9, 
   3.584449942802973*^9}, 3.5844500619754457`*^9, {3.584450986849249*^9, 
   3.584451127304884*^9}, {3.584451267602113*^9, 3.584451272846917*^9}, 
   3.584465979527135*^9, 3.5844660446637373`*^9, 3.6177418065391293`*^9, {
   3.647617185086385*^9, 
   3.647617193983656*^9}},ExpressionUUID->"d73dea62-a679-4216-b56e-\
6a0573061183"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"x", "+", "2"}], ")"}], 
  RowBox[{"(", 
   RowBox[{"x", "+", "1"}], ")"}]}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"50a84a43-4f2c-408f-aa08-b8710ecbb95b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "x"}], ")"}]}]], "Output",
 CellChangeTimes->{3.6177945395475273`*^9, 3.775817892527137*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"3b079450-b54e-446a-a647-dfb35dde8b22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", "x"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "19.5`"}], ",", "16.5`"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[2]:=",ExpressionUUID->"4d35e9fc-03e1-4660-8a34-8aa2bef854bd"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw1mPc/1X/cxs8xsiI7M3tlHbMln1dURCQrUQkllJJzSOFIQ8qorwpJkozK
aAqJ95vq2I4VDZWdvfe8ux/34/7p+gOu63E9rucl537O9iQLiUQSJJNI/6u3
ruZMrYXpYZLq7p61HTSwNrp3RCNUDx9nKtmkG9BAaCb4i9MlPbzf5mXxPm0a
JHtaJrym6WH8u+i/BHkavNw3uN3DWw/La+VuI7ho0LJB9QrDVg9/jl9/sbSV
CjLJT/ljlPRw1O28/BB/Krx7l6QpUaOLRWTClOdz/KEwK1NoZZ0uDqItsPvy
nQeBdvrS7wM6WOZT0aVHW89BQogx1SmZgi/Oysu8unIGxkq2aBm81cYuK1o5
kfne4MwedbHATAt3D7gdytx2CoIbxKVrSjQw2aaKayrnBExTL3Tw7lDHE4M9
NeSD7rAxyTfLukkNc0ZYHYgzPg7jpo8ZspaqOM5yqDZ+7xGg+nkPjP9SxiHN
+RXyD53AOoBFY/yCEjZ1eB7gussB/qy0Mi5PKWB9A1vv4N6DIMG1++SGm/JY
QlptSInHGngSh120SXLYw6+lPOO4OTxbrehZXt6EE3t5z1p6mEJs01+xBE0p
vCd8+XRnqDF05NJX7OTEsb7vjr4zjw3BvU6zc1JEHPNVlk8aXzOE3uH2z/9x
i2P3hkktOW9DGFTfEc2cEsO+A/sNRfUMYeb5nIQlQwyL7By4XF5hANyZfltN
TovhHJ9ydsVpfdBLcadS8jfiud+zddyH9SAidu/A+n2iWEjDy+mUHQWUbxUc
KjQSxYbf9m86tJ0CjOuqDA+KKL6kcaL3sBwFOEK5n37YKIrrkhxGKX+0IfJ0
/RGvPhH8X6e27ZS4Ntwyd2z4dFUE+wZ3RyfGa0Isi2fBpVJhTO/YW38iZzNo
rbYqKb8RxivwIZMtbDPUL5jda8wQxmgiLrz64GbYMKF2XjVGGHPvphlXzqnB
nT8jm1tdhPHb7NmWqD1qEPcxIEVnQQg731ik6fWrQELg9ev9ekKYzW/1MpuF
Eiz2T5+pUxHCHcaPnsvJK8ExlxP2bySF8N6ViACPRUVQBFOFEFYhnGG+Y84+
WxFecZHLNjQL4k/iKmljfIpQmRyybOgviMMyeOJZf8nDfDmVev2VAJ5355zN
uCcLLgbdzj7pArhZnj3y0HlZKM2yNTmQKIC3NO0v0bSWhWvROgLilwVw/NpH
AXNOWeB3HMvLOSCAvdV2ffZa3gSqAz6DzaP8uNtmYFdbpxQc3uDuJq/Jj9uH
UjWfd4tB057RrW1y/Li5m8/b9oUYWIRc4o8W5cdRuiY+O86LQUCTUtjQ2gZs
3zJfUru2EbZG3NgRl7EBG6llvhiW2QglIxbv/ozz4WNi5AdyZ0Sg8mNjxqUb
vHicp7DKVV8QitQG7Xv8eDGjvaGEzCoIL+JZ2KydebE728sL3Y0CEOWn5y6n
yYvHDhUbefoJgLXi/U2VTevxcX7h9d6v+KE5yilBZNN6rBQTFVYRxAe/nf9E
vnrHjaPu2M86c3IB9+VgK71kbnxpg5nbozxOMMzYKPj+KjdeXrP9EODACbFj
Bx4W23JjbFBg2J/OAcbXcC5jnAsT06+cWizWQUruk6Z2DS4sXeK9q+oNK1Q3
7UxwFebCjg5TMT7urDA7992la4kTK7jGVz4RZAVrE8Hev9WcOKRClbOJxgKr
rVfmJr04sdIQ/dU2IIMr6YQUVwYHzl/usLTsWyGilUidUdEcuMxV/pml0wpR
aJGcwUfjwOMZ8R0XapYJ/vstWsKmHLj258Y+u/wlAqvt2SXTuQ77j4SYSiQs
ELJ2yp4G0usw/VmjWUfcDNGR0f/S7T4bll+yGElrHSYM7Urtr9HZcP269oGT
QsNEDOneQuYpNmzSQX+tZztEbHchTIe3seGjywtPxr4OEPf541sDf7Pi29+/
cAzM9BEWwaYrUSqsuEjlXV9nQifxRFU8LY+fFR/d4H7v4EwHMf91dG/jAgtG
n+V4a+07iAxK0h3RWhZ8XicXlev9Jkh94wpP/FiwVY26sOTF70S+TYrF+yIy
jlNu7W6raCDWr1LHvqWR8WmXNhO5SCbhnr3v3lIUGSem7hssiawj+NfN/IJj
ZLyhgbU0KK2K8Cm2PF/DQsZp5fVB01vKiTIvOdHRIRJmROo5ovOYEBOd+8D/
lYRreBDyOVVCfPFLY3PMImEuC4nxPanvCVnlhYQOSxKOal8a5c95SgQ21xux
GpBwwrOhH6Y6D4m6y+mdSptIeClVl0ZPiCVm3j92bO1YQ8GdQVfnhunohZxV
6JDaGppzWF969chz5BQyz6AsryI6PdswxicPsbc95Q+sX0UPekXXprNfo+PR
i09J1FV0uH/ko7XXeyQyl1Ut8nEFWTJGBWalEKrXsJqH2ytoZ1C0XWYURhHu
k0pn3FfQg929n+cul6HZOqPwcs4VtIG1S5LX/hPKY+3KG/m5jNRmrpMbdT6j
U9tutIu9XEahKSO8xRxf0Lf0xi3nHJZRvyjnQ3IyA935EXgySXUZrfV+kDzm
XIH28Uvd/bK0hGzO6Hzq4K9EH4I9RyXTltD7FO8IJ88q5P+aR8osYAlVWain
WbFXI/W/r/b5my8h8bxXPV7J1SjZdim9cnQRXUxa91vgbQ2yj0xtmipbRDcV
2u491q1FvKV7SDL3F1Grx2l/uxe1iDE1qGnhtYg8XD4FakrUIbraHZeAHYtI
h/vPE80rdcjQ1eBmKt8iMvYrnbLrqkOj9368r+lcQFExbmdSt9ejzOqwntl3
C2ijeyWPUFQ9ciUpCcpHLqCOkcnG7OZ6JGZYTVi5LKABSmepjzATNZw+5xuk
tYB01e82HbBiosgnwg+fkhdQcTsnrwudiaCtqLK+ZR5d2WNyNjqLiebXu84u
ZM2jmyeJ2e5KJnptwqaoFDyPmEakDLcuJvIJen7Qxnoe2ddcu8Q+zUTyedZh
wXLzSEygLpC5wkQ/uqdyMqfnkBTf9wdojYnuij/40Vgxh1zLn3V/XWCi/QeM
OVeS5lCXppG94DATsV3vNlA9O4ee2twdorUy0ccPkR52u+ZQ+ua85yuFTEQb
1/yPLjyHeoqjY3PuMpGGcnPp87+zyINNOynck4l6XYKGWz7MInm2+7UhOkyU
8p+0BCl2FskVlyqlTNcjx4pyM3W3WXRMLSej92U94ls5FeCoP4t+WB/db+dR
jxi6vE/DOWbRffUm8b989Yju9aYh58cMuo24+Z68qUNbUg6ttuXOoBpuDrVw
6zr0jCvtsJb9DFplWDS/PVuLjhNmNw6rzKCZLXHu66ZqkHjA8Ltri9NI+/gj
sbBzNehWhyH/z9RpdKR1db7LphqZiLbvXEebRjaKDgr1+VVo0TL8tI7ZNLqq
do72R7AKnS6oYdwYmULZh0dv0fIrkOKI3/QbPIVSr9nZzC8yULu8qPzvu1Oo
wTPEKG0rA+2PPR6qv30KjdqI3/RK/oy0Ts7odUZMos0fw6ZK2cvQUZ60aGPH
SbRo1BzeMYJQ9Gvr3odKkyhGLMimsqQEDa5kxTt+nkCBwgY3VZSLUFa880IN
eQI1Gs83mOvmoVYjDlu1xnHUafja1I35DLF3v30RkTqOqo6s33TN7Cny0OY9
sosYR7GV6crpCrcRcScs1HdhFE0uXzFtGEslUtq/aakmjiK++MK7Jy5lEcuq
uh1dhqPIjbw/ZFQtjygs6zFxoo0gUNkbNbGUT1Cm9nGajg2hzFftP5vtygl5
R+G7Yr39aFeXc3zE0Ubicprv7uar/Sh/m/TBz0FNxO9RxkyMfD86ZzlUmprY
TDy8cdGJ9fhflPvoxVuDvq+EcNFv6dEfvchnJZ/cUPiDYJd6/uxTQxcaaFnb
2P2oizjhxeJMP9eFqppKYy7YdBPl71x4tvF1obpc1qMu7D0E3YrvbJ5lJ9q5
tIlTILCXGF7p89SN+YOKpx7e0af2E8xPwSG/gr4jNZeXPkfaR4mOR4sdBz99
Q3sH7476ZowRkxcu7mHwfkPeFs8Md20dJ4Q1LvC9TGtFspueazqvmyCc7/mn
Xq5tRoY+xcuP8iaJmqqmSDOoRSz35WV8tWeJ0dCGg5Sv1Uii8GsBb/oswa9b
LyHuU4WG+6frXorPEY5JVTmDdxmokHrBf55jnujywQ0xfzFa0oxJfji+QHRo
F7rb7MhEMgZLNLXJFeI06WXEVGwq+qR3rqczcJUYeWLpoPnlPpKBA40Pl1cJ
HKLg8inSiiCXPRe4xU4ChuV/ofEqWcRWB0N7Hgky/HwdeOixfBkxy/B7qOPC
Cm0FdR5cg83Ee6aPLq8xJwxK6tjV5rUQro49Jn4JnLAads/kNvUrMdbuF+sz
wQnK5i5yIiutRMFAeatiFhcEfuv/Lcv/g5ghW2q8EueBW8tkTSnJDkJWc2hQ
TpIP1KSln+nt6iOUCgx+FpoJgi6zXub+0z4iPyhN+HeoIBiFX06YZf9LbPuQ
OGT9ThBsersjiqr/EiIlcv5C8kIQlPviJGE/QCiUZ3SqkIWhcudWBctTw0Ri
VYAFvU4E9F6qHXi9d4IYrDMw7UwRB41cTpXlwAnCJfydmc0vcVDO/ru6N2uC
6PjlrckpJQESWRl57RyTxKa4oGTbJAlgeSzHx1k1Sfj+VeKyTZKEpljxumOW
04T9Hiy1lCUNfme5LNfbzBHyfy+KLi3LQo7mwN5Th1eIo9zZ82YflcBG0uGY
f8QKIa25ONLdqQQznGUBoW//7R71nvjHHMpg3JOYfpd3lYj4GMkaaKcMjUnm
LLhslTijIWz+eFgZllhbjq0XIUHAHn16t6IqyJ7XkzgZSgavIw9SdHM3g4/l
5B1RazaYiF1qC+CjAPmWIsdVTzYouN22TUWFAomVjqFjdDbwCG4hhoh/PLGn
2LvyJRv4CulszT5PAXm4ZnJJgB1M9gb84G6lwHd90elfLeyw+F6t1zxNB8w3
bT+U4cIBjz+bCGFzPVCZCJfW9+YGfMegKanOEGQYbXUafPwwxD/3mUPFGP6V
oJXbd0EYq65Kb1U3Bc95Wylqpwg8PqmanLnZHC5zKvZE5ouBNDntiqeTFWgL
0JeCGZKwf//Z0xs/HYRbwlk81KebgE929OeVAXtI0hMfZS+ShVWh1Lwqwgm2
HVZYxcbyYEz0Fb9SOgJay/e46S8UYENJbvYC+3E4K1lT+lxfCSZU3fY5mLmD
g7uuXWaBMoxUvf8p8PQExCmTe9JlVaEy6WfMljlPkDh1T0rwmRoMcG/3i3vi
DXOKtw+Gi6hDHM+b4eNwBkK4iz3LgjUgm8XNNmPiLFieyVbwI2lB0u6YDCrp
PPhZsv6SPa0Nmz0qjCLo/nAsTeMw7bw2/PnqW2p/3R+sFhy+VlzQBr5Mo8uK
0f6wOetZ3dlr2tB2zO5zxQN/6GGxLv34SBsEdE9aS+f7w+EPiY+dGrRB3VXC
h23YH54Ib9SplKDAUnM1KnemghhWH5uQpkD1TMjeIjcq3DkNuZL/uFA44BDv
ay8q0Mu91c79850v+rpLeiAVjvh9lBPVp8BrScbCgzgqiNa6CZ6w+peLsm87
y6qpEHMhsCHGhgLTH/grahqpwKYQFVvwj0OrBM7faftGhamL77h5nCnwp+1F
92QfFRpUOFjfeFLgzReW6K2sNDBrliz76U2Bry9CRa24aVBKp4Sx+1LAb0S2
012ABrlfDy85USkgFNVhGCdDA8Xws0VXAikg1rdclq1Mg2SNqxdyLlLgQcqu
GIYmDYS+JRi0hlDgzru8xC59GvzfH0KB//9D/gfZj3jF
       "]]},
     Annotation[#, "Charting`Private`Tag$5309#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-19.5, 16.5}, {-0.2499923230371771, 323.74997355102096`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.775817900710952*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"44352505-bd0e-4b9d-941a-c6f5b711a7d6"]
}, Open  ]],

Cell[TextData[{
 "First, notice that the input and output cells are identified by cell labels \
at the left. Second, notice that the kernel didn\[CloseCurlyQuote]t have much \
to say about this input, besides that it prefers to have the terms of \
polynomials ordered from lowest degree to highest. That\[CloseCurlyQuote]s \
because there isn\[CloseCurlyQuote]t any obviously better or simpler form for \
this expression than the form we provided it in. We can specifically ask ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " t",
 StyleBox["o expand this out using the built-in function ",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["Expand",
  FontFamily->"Courier",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox[":",
  FontColor->RGBColor[0., 0., 0.]]
}], "Text",
 CellChangeTimes->{{3.583165485260301*^9, 3.5831658032038393`*^9}, {
   3.583235011789505*^9, 3.583235013921494*^9}, {3.583235052895368*^9, 
   3.5832350549933567`*^9}, 3.583236747525358*^9, {3.584128650434618*^9, 
   3.584128650799868*^9}, 3.584133046697221*^9, {3.584447488585433*^9, 
   3.584447532519273*^9}, {3.584447787847417*^9, 3.5844477883346167`*^9}, {
   3.5844483686197023`*^9, 
   3.5844483758819237`*^9}},ExpressionUUID->"ed2a9c1d-76c5-409e-b769-\
6d1eab95b646"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "+", "2"}], ")"}], 
   RowBox[{"(", 
    RowBox[{"x", "+", "1"}], ")"}]}], "]"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"10e403b7-f49f-4808-8e5b-8950145136a3"],

Cell[BoxData[
 RowBox[{"2", "+", 
  RowBox[{"3", " ", "x"}], "+", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.617794560181785*^9, 3.775817967213188*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"1acf2e01-9cc5-4bb9-b1f2-41c963ab9188"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"2", "+", 
   RowBox[{"3", " ", "x"}], "+", 
   SuperscriptBox["x", "2"]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[4]:=",ExpressionUUID->"f264a156-b090-4ec7-811e-e9b66c445421"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "x"}], ")"}]}]], "Output",
 CellChangeTimes->{3.7758179813122168`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"fd6dabe4-e9c5-4467-84d1-46c32e377e68"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Practice: Creating and evaluating cells\[AliasDelimiter]", \
"Subsubsubsection",
 CellChangeTimes->{
  3.583241205964045*^9, {3.5833462197848043`*^9, 3.583346222370586*^9}, 
   3.5841278128341293`*^9, {3.58412786836483*^9, 3.5841278873743134`*^9}, 
   3.584127920504959*^9, {3.5844475594094057`*^9, 3.584447562079818*^9}, {
   3.58444779096729*^9, 3.5844477933339977`*^9}, 
   3.5844495200038347`*^9},ExpressionUUID->"c384d41d-25d6-4b91-a177-\
e6d35bd71d72"],

Cell[TextData[{
 "Now you try it. Create a new cell directly below this one, either by using \
the down arrow key to move below the current cell or by clicking the mouse \
between this cell and the next. In your new cell, type the function ",
 StyleBox["Factor",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " followed by matching open and close square brackets, then between the \
square brackets type the result of the ",
 StyleBox["Expand",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " above, ",
 Cell[BoxData[
  RowBox[{"2", "+", 
   RowBox[{"3", " ", "x"}], "+", 
   RowBox[{"x", "^", "2"}]}]],
  CellChangeTimes->{3.58316583117238*^9},
  FontColor->GrayLevel[0],ExpressionUUID->
  "e50f8e32-39b9-419a-80fd-37d7808f4199"],
 StyleBox[". Since you are typing in an input cell (the default) your typing \
should come out in ",
  FontColor->GrayLevel[0]],
 StyleBox["Courier",
  FontFamily->"Courier",
  FontColor->GrayLevel[0]],
 StyleBox[" font, like the input cells shown above. To send it to the ",
  FontColor->GrayLevel[0]],
 StyleBox["Mathematica",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox[" kernel for evaluation, make sure your cursor is somewhere in the \
cell you want to evaluate, hold down the shift key, and press return. You \
should instantly get ",
  FontColor->GrayLevel[0]],
 StyleBox["(1+x)(2+x)",
  FontFamily->"Courier",
  FontColor->GrayLevel[0]],
 StyleBox[", i.e., a fac",
  FontColor->GrayLevel[0]],
 "tored form of ",
 Cell[BoxData[
  RowBox[{"2", "+", 
   RowBox[{"3", " ", "x"}], "+", 
   SuperscriptBox["x", "2"]}]],
  CellChangeTimes->{3.58316583117238*^9},ExpressionUUID->
  "0318ffbf-c6cd-4498-8ed5-30f2c0b9e43c"],
 " in an output cell. Below that, make a new cell by using the down arrow and \
convert it to a text cell by the menu sequence Format -> Style -> Text. (A \
faster way to do this is to hold down the Alt or Command key and press 7). \
Now when you type, you should get a sans serif font like the one this text is \
in. Please enter a comment on how the result from ",
 StyleBox["Factor",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " compares to the input we originally gave to ",
 StyleBox["Expand",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.583165870732098*^9, 3.583166121099568*^9}, {
   3.5831756447422857`*^9, 3.583175717748807*^9}, {3.583175829117854*^9, 
   3.583175862380364*^9}, {3.583175893380278*^9, 3.583176103468589*^9}, {
   3.583176135468492*^9, 3.583176282710209*^9}, {3.583236818277836*^9, 
   3.583236822497311*^9}, {3.583236855109214*^9, 3.583236876610025*^9}, {
   3.5833462784716663`*^9, 3.5833463457061243`*^9}, {3.583425934746427*^9, 
   3.583425946378171*^9}, {3.584127547833528*^9, 3.584127550096912*^9}, {
   3.584127654475884*^9, 3.584127661197666*^9}, 3.584128169048728*^9, {
   3.584447426577335*^9, 3.58444742864212*^9}, {3.5844476144929953`*^9, 
   3.5844476251875467`*^9}, {3.584447795531479*^9, 3.584447800390973*^9}, 
   3.584448128849823*^9, {3.617741940801456*^9, 3.617741942056499*^9}, {
   3.64761732856791*^9, 
   3.647617329480071*^9}},ExpressionUUID->"917da560-9ef5-4b25-be40-\
0ac8945c73c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{"2", " ", "+", " ", 
   RowBox[{"3", "x"}], " ", "+", " ", 
   RowBox[{"x", "^", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.775818005082823*^9, 3.775818061893319*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"fef238ce-88a5-4a17-a651-10829faac1eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "+", "x"}], ")"}]}]], "Output",
 CellChangeTimes->{3.775818065236579*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"e2bd6e60-57d3-4b3e-b949-17355946c2a7"]
}, Open  ]],

Cell["\<\
They are the same, except for the ordering of the polynomials is different\
\>", "Text",
 CellChangeTimes->{{3.775818234699006*^9, 3.77581824412289*^9}, {
  3.7758182818775387`*^9, 
  3.775818286484283*^9}},ExpressionUUID->"f654b36c-f761-4a97-af18-\
477c113db8e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Practice: Creating, using, and saving a new notebook ", \
"Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
   3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
   3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, 
   3.584127826015929*^9, {3.5841279253004704`*^9, 3.584127950559352*^9}, 
   3.5841285647554817`*^9, 
   3.584449399115344*^9},ExpressionUUID->"f099f445-e0bd-4332-9e92-\
e9eccc81a9c8"],

Cell[TextData[{
 "Whenever you start something new, you\[CloseCurlyQuote]ll want to create a \
new notebook. You can do that when you first open ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " from the top left of the welcome screen, or if you\[CloseCurlyQuote]re in \
the middle of a session, by the menu sequence File -> New -> Notebook. Create \
a new notebook, then do the following"
}], "Text",
 CellChangeTimes->{{3.5832372570807*^9, 3.583237368865171*^9}, {
  3.5832374228254557`*^9, 3.5832374302256737`*^9}, {3.583241539467763*^9, 
  3.583241548632917*^9}, {3.5832415930256147`*^9, 3.583241622320819*^9}, {
  3.58324501032955*^9, 3.5832450136407557`*^9}, {3.5833463858602743`*^9, 
  3.58334638847545*^9}, {3.584128019184778*^9, 
  3.5841280211592827`*^9}},ExpressionUUID->"7c1c35fd-9053-4f22-879b-\
953648025da9"],

Cell[CellGroupData[{

Cell["\<\
Go to the Palettes menu and select \[OpenCurlyDoubleQuote]Writing Assistant\
\[CloseCurlyDoubleQuote]. This palette serves more-or-less as a word \
processing menu that allows you to do the usual things, like choosing font \
sizes and colors, paragraph style, etc. One of the main differences with an \
ordinary word processor is that the document is organized in cells so there \
are ways to change cell properties, such as the background shading, as well \
as cell styles, which are collections of properties. Another difference is \
that formatting of mathematical expressions is very convenient via the \
\[OpenCurlyDoubleQuote]Typesetting\[CloseCurlyDoubleQuote] section of the \
palette.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.583245018372472*^9, 3.583245082809845*^9}, {
   3.5832451148251657`*^9, 3.583245159683543*^9}, {3.583346405325222*^9, 
   3.583346525490797*^9}, {3.5833465835750313`*^9, 3.58334668295181*^9}, {
   3.584447803166031*^9, 3.584447805198084*^9}, 
   3.584466206590352*^9},ExpressionUUID->"01ffee48-3d7e-4598-ad40-\
7489fdd17d1b"],

Cell[TextData[{
 "In your new notebook, use the Format -> Style to apply the Title style to \
the first cell and type into it to give your notebook a title, such as \
\[OpenCurlyDoubleQuote]Michael\[CloseCurlyQuote]s First ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Notebook\[CloseCurlyDoubleQuote]. "
}], "ItemNumbered",
 CellChangeTimes->{{3.583245018372472*^9, 3.583245082809845*^9}, {
  3.5832451148251657`*^9, 3.583245159683543*^9}, {3.583346405325222*^9, 
  3.583346525490797*^9}, {3.5833465835750313`*^9, 3.5833468204259853`*^9}, {
  3.584994014089047*^9, 3.584994072845471*^9}, {3.681060458942458*^9, 
  3.681060459403037*^9}},ExpressionUUID->"ada033ab-8a09-4707-8821-\
f3a36e9c9e07"],

Cell[TextData[{
 "In your new notebook, create a new cell and compute the factorial of 101 by \
evaluating the expression ",
 StyleBox["101!",
  FontFamily->"Courier"],
 ". Then do the same for ",
 StyleBox["100!",
  FontFamily->"Courier"],
 ". Now divide the first result by the second. You can reference the previous \
results using the labels, such Out[1] or Out[2]. "
}], "ItemNumbered",
 CellChangeTimes->{{3.583245018372472*^9, 3.583245082809845*^9}, 
   3.5832451148251657`*^9, {3.583346537678335*^9, 3.583346548515272*^9}, {
   3.583346827950342*^9, 3.583346836619183*^9}, {3.583346922524437*^9, 
   3.583346931010233*^9}, {3.583346979372509*^9, 3.5833470978272057`*^9}, {
   3.583349915062324*^9, 3.583349935819065*^9}, {3.583350064117671*^9, 
   3.5833500654456053`*^9}, 3.583350157965242*^9, {3.584993725806117*^9, 
   3.584993732151127*^9}},ExpressionUUID->"8dee411b-0917-41b3-8d6a-\
ff1cdf105704"],

Cell[TextData[{
 "Use the menu sequence File -> Save and save your notebook as a file called \
FirstNotebook-Name where \[OpenCurlyDoubleQuote]Name\[CloseCurlyDoubleQuote] \
is your name. Now ",
 StyleBox["double-",
  FontColor->RGBColor[0., 0., 0.]],
 "clicking on this file should open it up in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". "
}], "ItemNumbered",
 CellChangeTimes->{{3.583245018372472*^9, 3.5832450827931128`*^9}, {
   3.583350275298986*^9, 3.583350432794273*^9}, {3.583425967027441*^9, 
   3.58342596703082*^9}, 3.5841283009990463`*^9, 
   3.5841283564725227`*^9},ExpressionUUID->"7b36a254-e13a-4013-8293-\
8eb2f65c2b19"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["How to think about Notebooks", "Subsection",
 CellChangeTimes->{{3.583350467683083*^9, 
  3.583350488058688*^9}},ExpressionUUID->"4cf870a1-2da9-4a26-bf14-\
57d363afb5ee"],

Cell[TextData[{
 "Most people think about programming in terms of writing code in one file, \
then either compiling the file into something you can run from a command line \
or loading it into an interactive interpreter, where you can call each of the \
individual functions you\[CloseCurlyQuote]ve defined and see the result. One \
of the possible uses of a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook is as an interpreter for ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " expressions. To stick most closely to the normal model, you would write \
your code in a separate file, which typically has the extension \
\[OpenCurlyDoubleQuote].m\[CloseCurlyDoubleQuote] and is referred to in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " documentation as a e",
 StyleBox["ither a ",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["script file",
  FontWeight->"Bold",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox[" or a ",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["package file",
  FontWeight->"Bold",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox[" (the difference is not important for now). Recently, they have \
rebranded the ",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["Mathematica",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox[" programming language as the Wolfram Language so you may see that \
terminology, too. Y",
  FontColor->RGBColor[0., 0., 0.]],
 "ou can edit the file using a text editor such as ",
 StyleBox["Emacs",
  FontFamily->"Courier"],
 " or ",
 StyleBox["Vi",
  FontFamily->"Courier"],
 ", or you can use Wolfram Workbench, an IDE (Integrated Development \
Environment) based on the open-source Eclipse. In this class, we strongly \
encourage development in Workbench. \n\nYou can develop code in Workbench and \
use a notebook as the interpreter. If you use a new notebook cell for each \
interaction and save your notebook at the end, all the interactions are saved \
for later reference. Often most of them are not worth saving because you\
\[CloseCurlyQuote]re just trying to figure out how to get something to work \
and once it does the failed attempts are no longer useful. Thus, it is often \
worthwhile to reuse the same input cell, editing and reevaluting it until you \
get a result you want to save. The output from each evaluation of a cell will \
overwrite the output of the previous evaluation. It\[CloseCurlyQuote]s also \
worth deleting some of the less interesting cells you\[CloseCurlyQuote]ve \
created at the end of the session. "
}], "Text",
 CellChangeTimes->{{3.5833505020273438`*^9, 3.583350721483019*^9}, {
   3.5833508489190807`*^9, 3.583350906402923*^9}, {3.583425115125099*^9, 
   3.583425290931264*^9}, {3.5834254234269743`*^9, 3.5834254700104647`*^9}, {
   3.583425531778398*^9, 3.583425532866619*^9}, {3.583425566563981*^9, 
   3.583425920274268*^9}, {3.583426001339323*^9, 3.583426021062698*^9}, {
   3.583498895250642*^9, 3.5834989141294413`*^9}, {3.5841285113923683`*^9, 
   3.5841285291028023`*^9}, 3.584447767087306*^9, {3.584447814559413*^9, 
   3.5844478243743677`*^9}, {3.584448130523559*^9, 3.5844481364759703`*^9}, 
   3.5844662940220747`*^9, {3.584466426509294*^9, 3.5844667080498238`*^9}, {
   3.5846407870566673`*^9, 3.5846408636387672`*^9}, {3.584640898434252*^9, 
   3.584640905366434*^9}, 3.584993801677109*^9, {3.58548897226451*^9, 
   3.585489085363*^9}, {3.647617540972906*^9, 
   3.647617571004573*^9}},ExpressionUUID->"611c0c51-096d-4ba4-b207-\
4933afae9811"],

Cell[CellGroupData[{

Cell["Practice: Reusing a notebook cell", "Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
  3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
  3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, {
  3.58342604161637*^9, 
  3.58342604629023*^9}},ExpressionUUID->"6e00bed1-c212-4385-bb2d-\
d19c05756d06"],

Cell[TextData[{
 StyleBox["The following computation creates a list, or table, of the exact \
values of ",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["x Log2[x]",
  FontFamily->"Courier",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox[" for several values of x. Place your cursor in the cell below and \
use shift-return to evaluate it.",
  FontColor->RGBColor[0., 0., 0.]]
}], "Text",
 CellChangeTimes->{{3.5841286853046713`*^9, 3.584128700095504*^9}, {
  3.584128810813657*^9, 3.5841288661501083`*^9}, {3.584128919970653*^9, 
  3.584128937362607*^9}, {3.584129161785049*^9, 3.584129167893005*^9}, {
  3.617746329904718*^9, 
  3.6177463664912453`*^9}},ExpressionUUID->"8ed6bdbe-b12b-40d3-8e59-\
730a870c4846"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"x", " ", 
     RowBox[{"Log2", "[", "x", "]"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.583426067539361*^9, 3.58342613857296*^9}, {
  3.583426497035657*^9, 3.583426503619988*^9}, {3.583426537757368*^9, 
  3.583426543420322*^9}, {3.7758187821139393`*^9, 3.775818784951919*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"e2c11ca2-3514-4216-97be-95f11988c487"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "2.`", ",", "4.754887502163468`", ",", "8.`", ",", 
   "11.609640474436812`", ",", "15.509775004326935`", ",", 
   "19.651484454403228`", ",", "24.`", ",", "28.529325012980813`", ",", 
   "33.21928094887363`"}], "}"}]], "Output",
 CellChangeTimes->{3.77581866230729*^9, 3.775818785859326*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"d5dd4fb6-2fa1-4f7e-912c-d7debda84fc5"]
}, Open  ]],

Cell[TextData[StyleBox["The second argument specifies the range of values \
that we want the expression to be evaluated for",
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{{3.775819011999754*^9, 3.77581907993545*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"be488032-8e24-404a-83dd-4b163d848125"],

Cell[TextData[{
 "S",
 StyleBox["uppose you wanted the numbers expressed as floating point \
approximations, rather than ratios of natural logarithms. To do so, you need \
to wrap the function ",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["N",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox[" around the ",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["x ",
  FontFamily->"Courier",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["Log2",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["[x]",
  FontFamily->"Courier",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox[". Edit the contents of the input cell above so that you will get \
floating point approximatio",
  FontColor->RGBColor[0., 0., 0.]],
 "ns and use shift-return to evaluate it. Note how the new output overwrites \
the old. Now create a new text cell between the output and this paragraph and \
write a comment in red (you can change the font color using the Writ",
 StyleBox["ing Assistant pal",
  FontColor->GrayLevel[0]],
 "ette) regarding the effect of the second argument we gave to ",
 StyleBox["Table",
  FontFamily->"Courier"],
 ", namely, ",
 StyleBox["{x, 1, 10}",
  FontFamily->"Courier"],
 ". If you\[CloseCurlyQuote]re not sure, you can either experiment or you can \
look up  the documentation on ",
 StyleBox["Table",
  FontFamily->"Courier"],
 " by using the menu sequence Help -> Wolfram Documentation and typing ",
 StyleBox["Table",
  FontFamily->"Courier"],
 " into the search bar. \[FilledSquare]"
}], "Text",
 CellChangeTimes->{{3.583426184693366*^9, 3.583426339971405*^9}, {
  3.5834264158130627`*^9, 3.583426445690782*^9}, {3.5834264776145144`*^9, 
  3.5834264929469147`*^9}, {3.5834265557410107`*^9, 3.583426663794897*^9}, {
  3.583426708555833*^9, 3.583426767882607*^9}, {3.58342685475268*^9, 
  3.5834269609407787`*^9}, {3.583499286870441*^9, 3.583499305489765*^9}, {
  3.584128970435548*^9, 3.58412902648272*^9}, {3.584129094396899*^9, 
  3.584129096268752*^9}, {3.584466798695335*^9, 3.584466810428084*^9}, {
  3.5849938779400387`*^9, 3.584993891369049*^9}, {3.617746408020062*^9, 
  3.617746428593288*^9}},ExpressionUUID->"36bbd998-1d9e-45bb-862b-\
b8f7c18d235a"],

Cell["\<\
To delete a cell, or change anything about its formatting, you must select \
the cell by selecting the innermost bracket to the right of the cell. Cells \
are organized into a hierarchical structure which is indicated by the \
bracketing at right, so if you want you can select higher level cells such as \
the one for an entire section or subsection of a notebook.\
\>", "Text",
 CellChangeTimes->{
  3.585489093252442*^9},ExpressionUUID->"6ba3a706-aa1e-4827-b010-\
89a3d7da1b32"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Practice: Selecting cells", "Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
  3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
  3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, {
  3.58342604161637*^9, 3.58342604629023*^9}, {3.5854898764212112`*^9, 
  3.585489879731243*^9}},ExpressionUUID->"14aad8f5-d57c-4146-b497-\
db6e199674db"],

Cell[BoxData[
 RowBox[{"Select", " ", "this", " ", "cell", " ", "and", " ", "then", " ", 
  "use", " ", "the", " ", "\"\<Format\>\"", " ", "dropdown", " ", "menu", " ",
   "to", " ", "format", " ", "it", " ", "as", " ", "an", " ", "input", " ", 
  RowBox[{"cell", "."}]}]], "Input",
 CellChangeTimes->{{3.5854899883960457`*^9, 3.585490055068061*^9}, {
  3.775819161318439*^9, 
  3.7758191613220873`*^9}},ExpressionUUID->"1ff1ec24-2d97-4842-8c0a-\
841cb03e477b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " documentation"
}], "Section",
 CellChangeTimes->{{3.583498969278222*^9, 3.5834989897771177`*^9}, {
  3.58349909157749*^9, 3.583499099401623*^9}, {3.5834991543301697`*^9, 
  3.583499185841704*^9}, {3.5844478338392878`*^9, 
  3.5844478343669567`*^9}},ExpressionUUID->"b14fc5f4-560e-456c-9262-\
1f5557a16aac"],

Cell[TextData[{
 StyleBox["Your ",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["Mathematica",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox[" installation comes with vast amounts of documentation. To access \
it, use the menu sequence Help -> Wolfram Documentation. The most important \
thing in the Wolfram Documentation is the search bar at the top. You can \
think of this as a web browser. Type in whatever it is you want to know \
about, look over the list of pages that comes back, and start reading the \
ones that look promising. You will do this many times and spend a lot of time \
reading the documentation. This can be a frustrating process because you will \
often get a lot of reference information but not the introduction to the big \
concepts needed to understand the system. All I can say is, \
\[OpenCurlyDoubleQuote]I\[CloseCurlyQuote]m sorry\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]Get used to it\[CloseCurlyDoubleQuote]. I will try to \
fill in the big concepts whenever I can, but you should expect to spend a \
fair amount of time being confused and a fair amount of time browsing from \
one help page to another trying to get a foothold. \n",
  FontColor->RGBColor[0., 0., 0.]],
 "\nThere are several categories of documentation pages, including"
}], "Text",
 CellChangeTimes->{{3.583499220337791*^9, 3.5834992658978987`*^9}, {
  3.583499319121522*^9, 3.5834995099774446`*^9}, {3.5834995569935427`*^9, 
  3.5834996335938377`*^9}, {3.583499666310273*^9, 3.583499742578568*^9}, {
  3.584129198880324*^9, 3.584129240973604*^9}, {3.584129309205097*^9, 
  3.584129310252326*^9}, {3.584447839453771*^9, 3.584447839662661*^9}, {
  3.584447890494486*^9, 3.58444790072674*^9}, {3.5844521362846327`*^9, 
  3.584452137097991*^9}, {3.584466895775999*^9, 3.584466908479267*^9}, {
  3.584994206548884*^9, 
  3.584994220262559*^9}},ExpressionUUID->"33d39dfb-32d4-4e76-874b-\
1c0d9771f893"],

Cell[CellGroupData[{

Cell[TextData[{
 "Tutorials. These are ve",
 StyleBox["ry useful and",
  FontColor->GrayLevel[0]],
 " include some of the basic concepts you will need. I suggest reading a \
tutorial first whenever you can find a relevant one.  You can see an example \
by going to the doc center, typing or pasting ",
 StyleBox["tutorial/InterruptingCalculations",
  FontFamily->"Courier"],
 " into the search bar, and pushing return."
}], "Item",
 CellChangeTimes->{{3.583499744786683*^9, 3.583499796701165*^9}, {
  3.583500289423687*^9, 3.583500342077166*^9}, {3.5841293555192137`*^9, 
  3.584129355669614*^9}, {3.712996920901553*^9, 
  3.7129969209019814`*^9}},ExpressionUUID->"0915695c-e601-44cb-87b2-\
0158d3af9d67"],

Cell[TextData[{
 "How Tos. You can see an example by going to the doc center, typing or \
pasting ",
 StyleBox["howto/StopAComputation",
  FontFamily->"Courier"],
 " into the search bar, and pushing return. Unfortunately, simply typing in \
\[OpenCurlyDoubleQuote]How to stop a computation\[CloseCurlyDoubleQuote] \
draws a blank."
}], "Item",
 CellChangeTimes->{{3.583499744786683*^9, 3.583499801077017*^9}, {
  3.583499862105481*^9, 3.583499866289667*^9}, {3.583500022258106*^9, 
  3.583500025057375*^9}, {3.583500090219466*^9, 
  3.583500193945484*^9}},ExpressionUUID->"2934ba54-4a6a-4e76-bdda-\
1e8fe1c5108b"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " guides."
}], "Item",
 CellChangeTimes->{{3.583499744786683*^9, 3.583499801073547*^9}, {
   3.583499867801257*^9, 3.5834998747398853`*^9}, {3.584129625142061*^9, 
   3.5841296418187513`*^9}, 3.58444814607749*^9, {3.5844522045208483`*^9, 
   3.584452204705892*^9}},ExpressionUUID->"9aa6fdf6-1c02-4ebd-aff5-\
80c71e26ba4d"],

Cell[TextData[{
 "Reference material, especially on built-in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " functions and symbols. The reference pages for built-in functions (e.g. ",
 StyleBox["Table",
  FontFamily->"Courier"],
 ") have a fixed structure. In the search bar at the top of the doc center or \
any other documentation page, search ",
 StyleBox["Table",
  FontFamily->"Courier"],
 " now -- the reference page should display right away."
}], "Item",
 CellChangeTimes->{{3.583499744786683*^9, 3.583499801073547*^9}, {
   3.583499867801257*^9, 3.5834999287538757`*^9}, {3.5834999684104567`*^9, 
   3.583499992074588*^9}, {3.583500649906506*^9, 3.583500654378336*^9}, {
   3.583500692564271*^9, 3.583500926121484*^9}, {3.5835010387953663`*^9, 
   3.583501045921648*^9}, {3.583501096007538*^9, 3.583501187146337*^9}, {
   3.5835012571617393`*^9, 3.5835014416334763`*^9}, {3.5835015669703503`*^9, 
   3.5835016694256783`*^9}, {3.584130141084016*^9, 3.584130142762987*^9}, {
   3.584447947631198*^9, 3.584447947829571*^9}, {3.584467013382531*^9, 
   3.5844670138042*^9}, {3.584467087201333*^9, 3.584467094604373*^9}, 
   3.584994289862949*^9, 
   3.5849943438016148`*^9},ExpressionUUID->"f437c261-c00c-4d1c-aba3-\
6816afdf01ff"],

Cell[CellGroupData[{

Cell["\<\
In large, black type you\[CloseCurlyQuote]ll see the title of the page, which \
is the name of the function.\
\>", "Subitem",
 CellChangeTimes->{
  3.584994358023192*^9},ExpressionUUID->"d520828f-bcb9-4cc7-9e2e-\
71e8ffce098e"],

Cell["\<\
Above that, and to the right, are drop-down menus for accessing related \
documentation by type -- in this case, there is a menu listing several \
related tutorials, another one listing guides, and a \
\[OpenCurlyDoubleQuote]See Also\[CloseCurlyDoubleQuote] which lists related \
reference pages. Quite often, it will be worth your while to look at the \
guides and tutorials before reading reference pages, although sometimes the \
reference pages will give you what you want faster. You\[CloseCurlyQuote]ll \
have to develop your own personal documentation reading style over time. \
\>", "Subitem",
 CellChangeTimes->{{3.5849944057941628`*^9, 
  3.584994416022517*^9}},ExpressionUUID->"5f433ade-ff44-446d-a21f-\
d8ed23ec1749"],

Cell["\<\
Below the title you\[CloseCurlyQuote]ll see one or more cells with yellow \
backgrounds, each showing a template for how you can call the function with \
various argument types and a very brief description of what each one does. \
This is useful mainly if you already know one way to use the function and you\
\[CloseCurlyQuote]re looking for variants. \
\>", "Subitem",
 CellChangeTimes->{{3.5849944057941628`*^9, 
  3.584994436339147*^9}},ExpressionUUID->"d700b297-136f-4bff-9595-\
cb36d48a79f2"],

Cell["\<\
Below the yellow boxes is a section called Details which is closed by \
default. More often than not, you\[CloseCurlyQuote]ll want to leave that \
closed until you\[CloseCurlyQuote]ve looked at part of the next section, \
titled Examples.\
\>", "Subitem",
 CellChangeTimes->{{3.5849944057941628`*^9, 
  3.5849944522343693`*^9}},ExpressionUUID->"e4a5077b-1b36-4e61-8902-\
9c8675ad6a2c"],

Cell["\<\
The Examples section shows examples of what you can do with the function. In \
some cases you will be able to use these as templates for building your \
expressions. It is often useful to read through at least the subsection \
titled Basic Examples. I find that I am tempted to keep reading examples, but \
there are often a lot of them and it is not always as useful to read them all \
as to glance over the Details section and then look for related tutorials. \
However, if you know this is the function you want to use and you\
\[CloseCurlyQuote]re trying to do something complicated with it, reading all \
the examples can be helpful.\
\>", "Subitem",
 CellChangeTimes->{{3.5849944057941628`*^9, 
  3.5849944790117693`*^9}},ExpressionUUID->"93008e14-2abf-4f8f-9aa4-\
308dc1ac904b"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox["You can also look up a function\[CloseCurlyQuote]s usage directly \
in a notebook by typing ",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["?FunctionName",
  FontFamily->"Courier",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox[", where FunctionName is the name of the function.  For example, ",
  FontColor->RGBColor[0., 0., 0.]]
}], "Text",
 CellChangeTimes->{{3.584130176322619*^9, 3.584130203407522*^9}, {
  3.584130248386215*^9, 3.584130311403799*^9}, {3.584130423341981*^9, 
  3.58413044904421*^9}},ExpressionUUID->"47d5e4a1-50ee-4469-a3b0-\
c99af8c7a44e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Table"}]], "Input",
 CellChangeTimes->{{3.584130337430429*^9, 3.58413033866642*^9}},
 CellLabel->
  "(K2) In[4]:=",ExpressionUUID->"fdde3c59-6cf3-4eb4-962d-5971348efd91"],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates a list of \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\) copies of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \\n\
\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a list of the values of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) when \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) runs from 1 to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\
\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives a nested list. The list \
associated with \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) is \
outermost.\"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Table"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.617794617779923*^9},
 CellTags->
  "Info3617776617-3499402",ExpressionUUID->"a43925ff-8dc3-4f77-b056-\
14068c1d2298"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Another resource for finding information on functions is with the \
Help->Function Navigator.  The Function Navigator lists a hierarchical view \
of ",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["Mathematica",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["\[CloseCurlyQuote]s functions.",
  FontColor->RGBColor[0., 0., 0.]]
}], "Text",
 CellChangeTimes->{{3.5844523112009087`*^9, 3.584452425800301*^9}, {
   3.58445245649606*^9, 3.584452481848098*^9}, 
   3.584453575664426*^9},ExpressionUUID->"b583bd0d-c263-48ab-8d2f-\
6387459608dc"],

Cell[CellGroupData[{

Cell["Practice: Reading documentation 1", "Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
  3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
  3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, {
  3.58342604161637*^9, 3.58342604629023*^9}, {3.583498856500457*^9, 
  3.5834988629059267`*^9}, {3.583501688676094*^9, 3.583501695051704*^9}, {
  3.583502971350781*^9, 
  3.583502972452298*^9}},ExpressionUUID->"00795f31-aad2-4152-a778-\
9961f2b15c45"],

Cell[TextData[{
 "Go to the reference page for ",
 StyleBox["Table",
  FontFamily->"Courier"],
 ". "
}], "Text",
 CellChangeTimes->{{3.583501950809888*^9, 3.583502008969513*^9}, {
   3.583502046666016*^9, 3.583502119217896*^9}, 
   3.58350221565024*^9},ExpressionUUID->"4347baea-71fd-474c-b5eb-\
b0016d3e0d23"],

Cell[TextData[{
 "In a new text cell below this one, write the names of all the tutorials \
that are in the list of tutorials at the top of the page. You\
\[CloseCurlyQuote]ll have to change the style of your cell to \
\[OpenCurlyDoubleQuote]text\[CloseCurlyDoubleQuote] so it doesn\
\[CloseCurlyQuote]t ",
 StyleBox["get interpreted as an input cell.",
  FontColor->RGBColor[0., 0., 0.]]
}], "ItemNumbered",
 CellChangeTimes->{
  3.583502141516714*^9, {3.5835022022757874`*^9, 3.583502241313575*^9}, {
   3.584129904402978*^9, 3.584129937759644*^9}, {3.584130013679502*^9, 
   3.584130023561453*^9}, {3.584467486653377*^9, 
   3.584467487108156*^9}},ExpressionUUID->"74ced674-779d-4463-bec9-\
ac506e364bc1"],

Cell["\<\
Repetitive Operations, Making a List of Values, Evaluation in iteration \
functions, Vectors and Matrices, Tensors\
\>", "Text",
 CellChangeTimes->{{3.7758194302952433`*^9, 
  3.7758194842568398`*^9}},ExpressionUUID->"1f9aa772-a84d-490d-bb81-\
ee14cda0391b"],

Cell[TextData[{
 "Read the basic examples on the ",
 StyleBox["Table",
  FontFamily->"Courier"],
 " reference page. In a new input cell below this one, write an expression \
using ",
 StyleBox["Table",
  FontFamily->"Courier"],
 " that, when evaluated, outputs a list of the cubes of all the integers \
between 1 and 12, inclusive. (You can use the notation ",
 StyleBox["x^3",
  FontFamily->"Courier"],
 " for ",
 StyleBox["x",
  FontFamily->"Courier"],
 " cubed.) In another new input cell, write an expression that uses ",
 StyleBox["Table",
  FontFamily->"Courier"],
 " to list the cubes of the numbers 0.2, 0.3, ..., 0.7."
}], "ItemNumbered",
 CellChangeTimes->{
  3.583502141516714*^9, {3.5835022022757874`*^9, 3.583502220017521*^9}, {
   3.583502251985673*^9, 3.583502397075473*^9}, {3.5835025114893227`*^9, 
   3.583502533833376*^9}, {3.583504501577125*^9, 3.583504520712249*^9}, {
   3.58500423894077*^9, 
   3.585004276638291*^9}},ExpressionUUID->"46243fd1-de38-4f10-8f7a-\
ff410fcf757e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"x", "^", "3"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "1", ",", " ", "12"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.775819495498744*^9, 3.775819518047256*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"ab2dcdcb-df42-47fb-a48a-fcf0f5b8312f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "8", ",", "27", ",", "64", ",", "125", ",", "216", ",", "343", 
   ",", "512", ",", "729", ",", "1000", ",", "1331", ",", "1728"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.775819526089238*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"0bdac4d2-cdc6-4d16-a8c7-99e75797b366"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"x", "^", "3"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", ".2", ",", " ", ".7", ",", " ", ".1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.775819545183229*^9, 3.7758195567076397`*^9}, {
  3.7758195882779083`*^9, 3.7758195984526443`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"46d97f7b-3f9d-4d20-aad2-4c461cb90c41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.008000000000000002`", ",", "0.02700000000000001`", ",", 
   "0.06400000000000002`", ",", "0.125`", ",", "0.21600000000000008`", ",", 
   "0.3429999999999999`"}], "}"}]], "Output",
 CellChangeTimes->{3.7758195993481817`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"e59fd0f2-eca2-4482-8b4f-95386be23b68"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Incorporated reading", "Subsection",
 CellChangeTimes->{{3.5835042889056587`*^9, 
  3.583504292690262*^9}},ExpressionUUID->"eab71766-9229-4b15-9081-\
710339ac5389"],

Cell[TextData[{
 "There\[CloseCurlyQuote]s no point to my trying to rewrite tutorials and \
documentation on all the stuff that\[CloseCurlyQuote]s already included in \
the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " documentation. Instead, I will do some introducing, sequencing, and \
provision of relevant Practices and Exercises. In between these, I\
\[CloseCurlyQuote]ll ask you to read particular documentation pages as though \
they were incorporated into this document. That means as soon as you see a \
section titled \[OpenCurlyDoubleQuote]Incorporated reading,\
\[CloseCurlyDoubleQuote] you should go off and read whatever pages are \
referenced there, then come back and continue working with this document. \
Right now, please read  "
}], "Text",
 CellChangeTimes->{{3.583504310930181*^9, 3.5835044958021383`*^9}, 
   3.5850055601292667`*^9, 
   3.585005614623197*^9},ExpressionUUID->"fe32ca13-afb2-4482-9b93-\
980250bf3a60"],

Cell[TextData[{
 "howto/CreateLists. You can also get an html version of this page from a web \
browser at http://reference.wolfram.com/mathematica/howto/CreateLists.html. \
This site, which contains all the documentation with the obvious mapping to \
the URL, might occasionally be useful if you don\[CloseCurlyQuote]t have ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " open or can\[CloseCurlyQuote]t open it for some reason."
}], "Item",
 CellChangeTimes->{{3.5835048546481113`*^9, 3.583504965298663*^9}, 
   3.5844506323481617`*^9},ExpressionUUID->"937e2571-dab2-436f-9dbd-\
39b83bd0d0e8"],

Cell[CellGroupData[{

Cell["Practice: Making lists and vectors", "Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
  3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
  3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, {
  3.58342604161637*^9, 3.58342604629023*^9}, {3.583498856500457*^9, 
  3.5834988629059267`*^9}, {3.583505142291054*^9, 
  3.5835051472415533`*^9}},ExpressionUUID->"7f671825-feb8-44c0-91a6-\
c1882a429ab9"],

Cell[TextData[{
 StyleBox["From now on, do all assignments that are in ",
  FontSlant->"Plain"],
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 StyleBox[" notebooks by creating new cells immediately below the assignment, \
unless it is specified that they should be done in a new notebook. Save your \
modified copy of the notebook containing the assignments by appending a dash \
followed by your name to the end of the original filename, before the \
\[OpenCurlyDoubleQuote].nb\[CloseCurlyDoubleQuote] suffix. By affixing your \
name, you affirm that you typed any modifications to the original file \
yourself. Copying modified assignment files or portions thereof, or \
distributing them to others, or placing them in a location where others can \
easily grab them, is considered cheating. You can get help and advice, but \
you must do all the typing yourself.",
  FontSlant->"Plain"]
}], "Text",
 CellChangeTimes->{{3.583505589580686*^9, 3.583505751777648*^9}, {
  3.5835059370388203`*^9, 3.583505956274063*^9}, {3.583506110576619*^9, 
  3.5835062466814547`*^9}},
 FontSlant->"Italic",ExpressionUUID->"20d72488-3904-4027-ba52-a5a33074c2c2"],

Cell[TextData[{
 "Make the same two lists of cubes you did with ",
 StyleBox["Table",
  FontFamily->"Courier"],
 ", but now do it  with ",
 StyleBox["Range",
  FontFamily->"Courier"],
 ". As demonstrated in the \[OpenCurlyDoubleQuote]howto\
\[CloseCurlyDoubleQuote] for creating lists, use ",
 StyleBox["Range",
  FontFamily->"Courier"],
 " to create a list of numbers and then apply the cubing operation to the \
entire list."
}], "ItemNumbered",
 CellChangeTimes->{{3.583505152049571*^9, 3.583505152186013*^9}, {
  3.5835052216601667`*^9, 3.5835052824336643`*^9}, {3.5835053500348253`*^9, 
  3.583505395777787*^9}, {3.583505453420312*^9, 3.5835054612018013`*^9}, {
  3.5835055020678368`*^9, 
  3.583505520582569*^9}},ExpressionUUID->"4138b638-e9e8-4fbf-b8cc-\
25800c8ccc67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Range", "[", "5", "]"}], "^", "3"}]], "Input",
 CellChangeTimes->{{3.775820170767778*^9, 3.7758201910673313`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"4a8fb21b-918b-480f-b76b-cfee02ff180c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "8", ",", "27", ",", "64", ",", "125"}], "}"}]], "Output",\

 CellChangeTimes->{3.775820191631812*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"af734a70-f946-4864-8185-1d7d7eac7004"]
}, Open  ]],

Cell["\<\
Create a \[OpenCurlyDoubleQuote]matrix\[CloseCurlyDoubleQuote] (i.e. list of \
lists) with 7 rows and 3 columns containing random integers between 17 and \
23. First display it as a list of lists, and then in matrix form.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.583505152049571*^9, 3.583505152186013*^9}, {
  3.5835052216601667`*^9, 3.5835052824336643`*^9}, {3.5835053500348253`*^9, 
  3.583505395777787*^9}, {3.583505453420312*^9, 3.5835054612018013`*^9}, {
  3.5835055020678368`*^9, 3.5835055818654757`*^9}, {3.58350600830997*^9, 
  3.583506017305415*^9}, {3.58350770687451*^9, 
  3.58350770778542*^9}},ExpressionUUID->"63293e7a-c57e-4cea-876b-\
77687ab725c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", " ", "=", " ", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"17", ",", " ", "23"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"7", ",", " ", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.775820233995517*^9, 3.775820296246203*^9}, {
  3.775820345578711*^9, 3.7758203465107393`*^9}, {3.775820424642726*^9, 
  3.775820464028734*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"85d048e7-4f80-41aa-a866-1eebd0c47bf4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"17", ",", "20", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "19", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "22", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "20", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "17", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "20", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "18", ",", "23"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.775820471533865*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"97617109-6a3b-475b-8cbc-38121e92e266"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "m", "]"}]], "Input",
 CellChangeTimes->{{3.775820487341074*^9, 3.7758204917083817`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"c08d116a-568d-4438-943e-f09e0b3625be"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"17", "20", "19"},
     {"21", "19", "20"},
     {"22", "22", "21"},
     {"19", "20", "20"},
     {"22", "17", "21"},
     {"19", "20", "18"},
     {"17", "18", "23"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.775820492654522*^9},
 CellLabel->
  "Out[25]//MatrixForm=",ExpressionUUID->"bfc9cb68-9fec-4b38-bd2c-\
70278ee27a93"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate all input cells", "Subsection",
 CellChangeTimes->{{3.583507948945867*^9, 3.583507957089349*^9}, {
  3.583508228873707*^9, 3.583508230665696*^9}, {3.617748393457794*^9, 
  3.617748435601356*^9}},ExpressionUUID->"bbc507b0-be6f-4f49-9d5e-\
2c380b42a088"],

Cell["\<\
From now on, wherever you see an input cell that does not have a \
corresponding output cell in a notebook I have distributed, you should \
evaluate it and look at the output. Make sure you understand why that input \
gave that output. If you forget to evaluate an input cell then future cells \
may not evaluate the way they are supposed to, so please check carefully for \
input cells and make sure to evaluate them.\
\>", "Text",
 CellChangeTimes->{{3.617748445395969*^9, 3.617748531286536*^9}, {
   3.617748808209343*^9, 3.617748864869157*^9}, 3.647618105546777*^9, 
   3.681061923427919*^9},ExpressionUUID->"aa2810f6-9a07-4930-8cdc-\
93002ef71688"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Programming in Mathematica", "Section",
 CellChangeTimes->{{3.5835078847461367`*^9, 
  3.583507893009742*^9}},ExpressionUUID->"f8d0b1d0-a789-4a34-b9a7-\
cf5f412f41a1"],

Cell[CellGroupData[{

Cell["Videos", "Subsection",
 CellChangeTimes->{{3.6476165037963667`*^9, 
  3.647616505862584*^9}},ExpressionUUID->"f05410dc-cdbb-4fd0-874a-\
bb340770a3dc"],

Cell["\<\
Please make sure you do the entire notebook below. If you like video \
instruction, feel free to also watch the video \[OpenCurlyDoubleQuote]Basic \
Calculations\[CloseCurlyDoubleQuote], which can be found at 
http://www.wolfram.com/broadcast/screencasts/handsonstart/ .\
\>", "Text",
 CellChangeTimes->{{3.6476165093103237`*^9, 3.647616589847036*^9}, {
  3.647616828740087*^9, 3.6476168327800913`*^9}, {3.647616933770933*^9, 
  3.647617018368287*^9}, {3.647617083352179*^9, 3.647617134690634*^9}, {
  3.647618159856917*^9, 
  3.647618196351369*^9}},ExpressionUUID->"d899599b-54d9-4cd8-9e58-\
dfa5d27902c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Defining variables and functions", "Subsection",
 CellChangeTimes->{{3.583507948945867*^9, 3.583507957089349*^9}, {
  3.583508228873707*^9, 
  3.583508230665696*^9}},ExpressionUUID->"c2ab6080-dad7-4524-8c78-\
80b8201a161b"],

Cell["\<\
In order to understand variables and functions, we need to touch briefly on \
how the kernel works. If you are used to interpreters in other languages, it \
works pretty much the same way. Apply built-in mathematical operations to \
numbers and you will get numbers back.\
\>", "Text",
 CellChangeTimes->{{3.5835082334192467`*^9, 
  3.583508347953382*^9}},ExpressionUUID->"18bd1706-9cda-4be2-8ac0-\
0e690eba8a2a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "^", "5"}]], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"de4b8606-710d-4864-a969-33aec65e6244"],

Cell[BoxData["32"], "Output",
 CellChangeTimes->{3.775820540294971*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"46f9b9f2-89c7-467a-8897-2f6fc36635d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log2", "[", "32", "]"}]], "Input",
 CellLabel->"In[27]:=",ExpressionUUID->"a4daa8f7-d33e-46e3-8f00-14126ed1f367"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.7758205447969027`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"16a74ce5-d22c-4f04-8f0f-609f4e515080"]
}, Open  ]],

Cell["\<\
If you define variables, they will evaluate to the value you assigned them.\
\>", "Text",
 CellChangeTimes->{{3.5835083888285217`*^9, 3.58350843528144*^9}, {
  3.583590383999617*^9, 
  3.583590384561213*^9}},ExpressionUUID->"a6cdc6d5-ace7-44a5-b2e4-\
e3ebbfa28a72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", "6"}]], "Input",
 CellChangeTimes->{{3.583508438580459*^9, 3.583508440219294*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"5773eee0-c78b-4197-8ff4-6fae5661206c"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.775820549787838*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"2f6dd5ed-78a8-4a0c-9fc4-f9c1052262b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "^", "x"}]], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"82b1bce5-562a-429b-a41f-f896dcc9e58c"],

Cell[BoxData["64"], "Output",
 CellChangeTimes->{3.775820553175404*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"d2ed1617-780e-4718-b0c7-77b2c8ee60d4"]
}, Open  ]],

Cell[TextData[{
 "However, one difference between the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " kernel and many other interpreters is that it doesn\[CloseCurlyQuote]t \
complain about undefined variables. It simply treats them as variables, like \
in math. When you evaluate the following expressions, you will see that x \
evaluates to 6 but y is just the variable y."
}], "Text",
 CellChangeTimes->{{3.583508468959424*^9, 3.5835085354417953`*^9}, {
  3.5844480018375072`*^9, 3.5844480019581327`*^9}, {3.617748702875928*^9, 
  3.61774874956106*^9}, {3.681062037976863*^9, 
  3.681062039733163*^9}},ExpressionUUID->"218c4047-c6d5-48c2-a78e-\
fce934fa1563"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "^", "y"}]], "Input",
 CellLabel->"In[30]:=",ExpressionUUID->"7cea6d63-4b0c-48b5-a635-e6906c1435cf"],

Cell[BoxData[
 SuperscriptBox["6", "y"]], "Output",
 CellChangeTimes->{3.775820572654203*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"ed5d4c28-5706-4d3f-8a7c-0b32b10c8a6d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"y", "+", "x"}], ")"}], "^", "2"}], "]"}]], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"7b0eef62-7177-4437-8a29-26e806c375f3"],

Cell[BoxData[
 RowBox[{"36", "+", 
  RowBox[{"12", " ", "y"}], "+", 
  SuperscriptBox["y", "2"]}]], "Output",
 CellChangeTimes->{3.77582058421317*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"01678cc2-f9c5-4d21-a26a-742994b057de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"36", "+", 
     RowBox[{"12", " ", "y"}], "+", 
     SuperscriptBox["y", "2"]}], ")"}], " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"y", "+", "x"}], ")"}]}], "]"}]], "Input",
 CellLabel->"In[32]:=",ExpressionUUID->"76ec4e5f-ed89-42f4-a4f1-bfcdad6d455f"],

Cell[BoxData[
 RowBox[{"6", "+", "y"}]], "Output",
 CellChangeTimes->{3.775820591659725*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"9b1e2be0-396f-42db-a281-6dff4667cfc4"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " doesn\[CloseCurlyQuote]t mind mixing defined and undefined variables. If \
they are defined they\[CloseCurlyQuote]re replaced by the assigned value and \
if not they\[CloseCurlyQuote]re not. This approach to undefined symbols hints \
at a deep conceptual difference between the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " kernel and many familiar interpreters -- it is often better to think of \
Mathematica as a simplifier than an evaluator. It has certain rules for what \
it considers a simpler form of an expression, and by defining a variable as a \
number you make it aware of a new way to simplify expressions -- by \
substituting a particular number for that variable.\n\nAnother odd thing is \
that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " doesn\[CloseCurlyQuote]t make as much of a deal about the difference \
between variables and functions as some languages do. You can define the \
value of a function on a particular input explicitly, as in: "
}], "Text",
 CellChangeTimes->{{3.5835088126746683`*^9, 3.583509199058846*^9}, {
  3.5844480139276543`*^9, 3.58444802830021*^9}, {3.584468419069387*^9, 
  3.584468423154972*^9}, {3.584468543054433*^9, 3.58446861001886*^9}, {
  3.681062092895645*^9, 
  3.681062116836618*^9}},ExpressionUUID->"e275c3b3-3885-42e2-b793-\
6ba80d65398f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"myFunction", "[", "17", "]"}], "=", "23"}]], "Input",
 CellLabel->"In[33]:=",ExpressionUUID->"ab5812d3-f8e1-4a44-b1c2-41f5cf48e9f8"],

Cell[BoxData["23"], "Output",
 CellChangeTimes->{3.617795057259838*^9, 3.775820635803813*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"52b45f0f-2b5b-4458-9e61-2946590ffcc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"myFunction", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "15", ",", " ", "19"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[34]:=",ExpressionUUID->"9527246c-d979-4b21-b8ac-332ff1e13786"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"myFunction", "[", "15", "]"}], ",", 
   RowBox[{"myFunction", "[", "16", "]"}], ",", "23", ",", 
   RowBox[{"myFunction", "[", "18", "]"}], ",", 
   RowBox[{"myFunction", "[", "19", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.775820643830196*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"c4fd7b97-8d9b-475a-a98c-1970a9a00ba8"]
}, Open  ]],

Cell[TextData[{
 "Notice how ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " used the rule you gave it to simplify the expression ",
 StyleBox["myFunction[17]",
  FontFamily->"Courier"],
 ", but that didn\[CloseCurlyQuote]t affect its take on ",
 StyleBox["myFunction[16]",
  FontFamily->"Courier"],
 ", which is not defined as anything other than itself. You could also \
define"
}], "Text",
 CellChangeTimes->{{3.583509260130624*^9, 3.583509319514641*^9}, {
   3.58350941738881*^9, 3.583509459809867*^9}, {3.583509533082829*^9, 
   3.583509540689211*^9}, 
   3.6177488990947857`*^9},ExpressionUUID->"1ec5eadd-f966-4af0-a130-\
961807f1408c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"myFunction", "[", "y", "]"}], "=", "79.4"}]], "Input",
 CellLabel->"In[35]:=",ExpressionUUID->"160be160-dfbb-4dab-a100-e8ffe3189e51"],

Cell[BoxData["79.4`"], "Output",
 CellChangeTimes->{3.7758206652744226`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"03cd7994-d375-421a-9806-57b9d038f9e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"myFunction", "[", "x", "]"}], ",", " ", 
   RowBox[{"myFunction", "[", "y", "]"}], ",", " ", 
   RowBox[{"myFunction", "[", "z", "]"}]}], "}"}]], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"0fc0d2d0-3b0f-4346-a2ac-c069f5c4471d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"myFunction", "[", "6", "]"}], ",", "79.4`", ",", 
   RowBox[{"myFunction", "[", "z", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.77582066992834*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"8b2ae676-919b-4ae7-8033-d46682f87cd0"]
}, Open  ]],

Cell[TextData[{
 "We defined x to be 6, then we defined myFunction[y] to be 79.4, but we did \
not define myFunction[6] or myFunction[z]. OK, that was cute, but how do I \
define a ",
 StyleBox["real",
  FontSlant->"Italic"],
 " function, like in Java? Funny you should ask....I was just getting to \
that. There are two things you need to do differently. First, when you \
specify the formal parameters (i.e. arguments) to the function, you have to \
put an underscore after each one. "
}], "Text",
 CellChangeTimes->{
  3.58350953536401*^9, {3.583509723909738*^9, 3.5835097500901327`*^9}, {
   3.583509796217868*^9, 3.5835098575216017`*^9}, {3.617748925441184*^9, 
   3.617748989153574*^9}, {3.617749043492557*^9, 
   3.6177490571758947`*^9}},ExpressionUUID->"a8bed37a-2aaf-48e4-8c54-\
f024136fe022"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"myOtherFunction", "[", "x_", "]"}], "=", 
  RowBox[{"x", "^", "2"}]}]], "Input",
 CellLabel->"In[37]:=",ExpressionUUID->"59831b60-7254-492a-b5cb-7602aea4b19b"],

Cell[BoxData["36"], "Output",
 CellChangeTimes->{3.775820703406044*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"cbda8c3d-77ac-498e-b93d-f511efb8ec0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myOtherFunction", "[", "9", "]"}]], "Input",
 CellLabel->"In[38]:=",ExpressionUUID->"d9ed44d1-0e4a-4023-8879-e8cf58c72aae"],

Cell[BoxData["36"], "Output",
 CellChangeTimes->{3.775820710373171*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"8ae71f63-1846-49e1-9e46-0b8cd4307058"]
}, Open  ]],

Cell[TextData[{
 "That didn\[CloseCurlyQuote]t seem to work. We wanted the ",
 StyleBox["x",
  FontFamily->"Courier"],
 " to the right of the equals to be replaced by whatever argument is provided \
when the function is called. Instead, this just evaluated x^2 immediately \
when the function was defined, which yields 36 (we defined x to be 6 \
earlier). Thus, we defined a function of one argument that returns 36 \
regardless of the argument we supply when we call the function.  We don\
\[CloseCurlyQuote]t want the ",
 "kernel",
 " to evaluate the right hand when we define the function, we want it to do \
so after the parameter ",
 StyleBox["x_ ",
  FontFamily->"Courier"],
 "has been bound to whatever value we supply when we call the function. To \
get that behavior, we have to use ",
 StyleBox[":=",
  FontFamily->"Courier"],
 " instead of ",
 StyleBox["=",
  FontFamily->"Courier"],
 ", telling the kernel to delay evaluation of the right hand side until the \
parameters are bound.",
 StyleBox[" ",
  FontFamily->"Courier"]
}], "Text",
 CellChangeTimes->{{3.583509962683702*^9, 3.5835102162013903`*^9}, {
   3.583510265379957*^9, 3.583510344193399*^9}, {3.583510845439282*^9, 
   3.583510850029949*^9}, {3.5844481853982687`*^9, 3.5844481980706997`*^9}, {
   3.584468790846661*^9, 3.5844689700978622`*^9}, {3.584640138410571*^9, 
   3.584640205894719*^9}, 
   3.584993384473658*^9},ExpressionUUID->"fb66ea62-8ab9-446f-b2b1-\
e6df5f9a9f48"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myOtherFunction", "[", "x_", "]"}], ":=", 
  RowBox[{"x", "^", "2"}]}]], "Input",
 CellChangeTimes->{{3.775820765754047*^9, 3.775820766806006*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"fd4d4430-3192-4036-a411-f01942496e6f"],

Cell[TextData[{
 StyleBox["Notice two differences from when we tried defining it with ",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["=",
  FontFamily->"Courier",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox[". First, the ",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["x",
  FontFamily->"Courier",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox[" on the right hand side is now colored green, indicating a formal \
parameter. Second, no value is returned when we define a function this way \
because evaluation is delayed until the function is called.",
  FontColor->RGBColor[0., 0., 0.]]
}], "Text",
 CellChangeTimes->{{3.583510567553496*^9, 3.583510573457621*^9}, {
   3.583510650578022*^9, 3.583510764625504*^9}, {3.5835108149425*^9, 
   3.58351082859461*^9}, {3.583590562376876*^9, 3.583590564618589*^9}, {
   3.584131298122114*^9, 3.5841313197674522`*^9}, 3.584131410378069*^9, {
   3.584131465886734*^9, 3.584131502377898*^9}, {3.584131546894009*^9, 
   3.5841315502273827`*^9}, {3.584131615536457*^9, 3.584131643311674*^9}, {
   3.5841316740526943`*^9, 3.584131691111546*^9}, {3.584131723406474*^9, 
   3.584131730007091*^9}, 3.584448203837764*^9, {3.5844687013527946`*^9, 
   3.58446870459618*^9}, {3.584469038637806*^9, 3.5844690397720613`*^9}, {
   3.617795309437952*^9, 
   3.6177953383046637`*^9}},ExpressionUUID->"3f4c5683-29b8-43d3-a4fa-\
4e8fb5825e0e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myOtherFunction", "[", "9", "]"}]], "Input",
 CellLabel->"In[41]:=",ExpressionUUID->"e1e49ac8-fc2f-4c24-9727-ca8648a8b67d"],

Cell[BoxData["81"], "Output",
 CellChangeTimes->{3.775820792052321*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"3b6d9d29-3c41-4d62-85fb-c3d97eddd2cd"]
}, Open  ]],

Cell["\<\
This is what we wanted. Most of the time you will want to use formal \
parameters and delayed evaluation. There are a couple of circumstances in \
which you may want to define an expression directly using =. For example, \
mapping small integers to their spellings.\
\>", "Text",
 CellChangeTimes->{{3.5835104896269827`*^9, 3.583510545465939*^9}, {
   3.583510872438327*^9, 3.5835109644295692`*^9}, {3.583511001982275*^9, 
   3.5835110622974997`*^9}, 3.584202692918491*^9, {3.584202725644682*^9, 
   3.584202937971849*^9}, 3.584448214517316*^9, {3.584453612487609*^9, 
   3.584453612654776*^9}, {3.5844690748757687`*^9, 3.58446909914001*^9}, {
   3.617795382912922*^9, 3.617795406123108*^9}, 3.61781118897219*^9, {
   3.6178112588299093`*^9, 3.617811275677533*^9}, {3.775820802808691*^9, 
   3.775820804040387*^9}},ExpressionUUID->"aeb2a3ea-215b-4be2-8aeb-\
1cae79f9831e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"numberSpelling", "[", "8", "]"}], "=", "\"\<eight\>\""}]], "Input",\

 CellLabel->"In[42]:=",ExpressionUUID->"8e1ac973-a038-4c3d-80bc-c57fd2a5dfae"],

Cell[BoxData["\<\"eight\"\>"], "Output",
 CellChangeTimes->{3.7758208081328573`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"283149a2-57f4-411e-bf74-776a8be90452"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"numberSpelling", "[", "8", "]"}]], "Input",
 CellChangeTimes->{{3.6178112880880747`*^9, 3.617811294983016*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"629766e9-e86b-412e-86dc-8aa65828826e"],

Cell[BoxData["\<\"eight\"\>"], "Output",
 CellChangeTimes->{3.775820812976317*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"2048e086-0d7a-493e-a7ba-71b62edec775"]
}, Open  ]],

Cell["\<\
Do not confuse this expression with a reference to a part of an array or \
list. I could define a list like this:\
\>", "Text",
 CellChangeTimes->{{3.583511827828168*^9, 3.583511898169674*^9}, {
  3.583512671702874*^9, 
  3.583512671799314*^9}},ExpressionUUID->"26445aea-c95a-43bd-aeb5-\
6f0bb401b716"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"numberSpellingList", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<one\>\"", ",", " ", "\"\<two\>\"", ",", " ", "\"\<three\>\""}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.5835119000252943`*^9, 3.583511921588409*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"da1ec615-e824-4546-84a0-ed49b8747982"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"one\"\>", ",", "\<\"two\"\>", ",", "\<\"three\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7758208324953547`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"b4aaec3f-300c-460c-80ca-6e82f9e3500b"]
}, Open  ]],

Cell["\<\
but to reference the parts of that list I would use double square brackets, \
as in:\
\>", "Text",
 CellChangeTimes->{{3.583511927611332*^9, 
  3.583511940449725*^9}},ExpressionUUID->"cc7edd13-fa17-415b-9f99-\
41854c8bd552"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"numberSpellingList", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.583511967953659*^9, 3.583511987807415*^9}, {
  3.775820870500127*^9, 3.775820881921994*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"648bf620-ea3e-4d1c-850b-ab389b759dc4"],

Cell[BoxData["\<\"two\"\>"], "Output",
 CellChangeTimes->{{3.775820849221108*^9, 3.775820882710335*^9}},
 CellLabel->"Out[48]=",ExpressionUUID->"47e83b1b-96b7-4305-9a18-f0de5ca74ef5"]
}, Open  ]],

Cell[TextData[{
 StyleBox["(Note: ",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["Mathematica",
  FontSlant->"Italic",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox[" list indexing starts at 1, not 0.)",
  FontColor->RGBColor[0., 0., 0.]],
 StyleBox["\n",
  FontColor->RGBColor[1., 0.2527656977187762, 1.]],
 "\nThings go all haywire if you try to use the single-brackets where you \
should use double or vice-versa:"
}], "Text",
 CellChangeTimes->{{3.5835120074120092`*^9, 3.583512063426181*^9}, {
   3.583512698058135*^9, 3.583512727802094*^9}, 3.583590722503429*^9, {
   3.584131904779606*^9, 3.584131916479569*^9}, {3.584131965032222*^9, 
   3.584132017584138*^9}, 
   3.584448217788957*^9},ExpressionUUID->"91f67c05-4094-49e5-933f-\
e963d1a804dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"numberSpellingList", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.5835120826836452`*^9, 3.583512083747211*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"7cbd443b-cda1-4dbd-9593-0ed04a5269b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\<\"one\"\>", ",", "\<\"two\"\>", ",", "\<\"three\"\>"}], "}"}], 
  "[", "2", "]"}]], "Output",
 CellChangeTimes->{3.7758208937007017`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"bcbbf62d-cfc8-4fe1-a044-efe451dbab78"]
}, Open  ]],

Cell[TextData[{
 "Here, the kernel has substituted the definition of ",
 Cell[BoxData["numberSpellingList"], "Input",
  CellChangeTimes->{{3.5835120826836452`*^9, 3.583512083747211*^9}},
  ExpressionUUID->"9c822fbc-8b99-4d3d-80b9-ed934c40e700"],
 " because that is the only way to simplify the input expression -- \
interpreting it as a call to an undefined function would not be useful. \
Likewise, we cannot use the double brackets for arguments to a function:"
}], "Text",
 CellChangeTimes->{{3.583512108275145*^9, 3.58351213052148*^9}, {
   3.583512167639935*^9, 3.583512244729785*^9}, {3.583512765037084*^9, 
   3.583512767362131*^9}, 
   3.584448218933291*^9},ExpressionUUID->"356f4bba-8246-4cae-a858-\
1b67238402bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"numberSpelling", "[", 
   RowBox[{"[", "8", "]"}], "]"}], " "}]], "Input",
 Evaluatable->True,
 CellChangeTimes->{{3.583512250020151*^9, 3.583512256337138*^9}, {
  3.584132916424819*^9, 3.584132917696209*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"ff98a193-51c7-45a5-b38d-d4d88b780388"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"numberSpelling\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"8\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,50,4,32239500842119901609,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7758209402896013`*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"a079aebc-9b6d-44d7-957c-f381cd2eff0e"],

Cell[BoxData[
 RowBox[{"numberSpelling", "\[LeftDoubleBracket]", "8", 
  "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{3.775820940297944*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"4d7d2f4a-76e4-436c-984a-6aa73970f02c"]
}, Open  ]],

Cell[TextData[{
 StyleBox["This evaluates to itself, since ",
  FontColor->RGBColor[0., 0., 0.]],
 Cell[BoxData[
  RowBox[{
   StyleBox["numberSpelling",
    FontFamily->"Courier",
    FontSize->13], 
   StyleBox[" ",
    FontSize->14], 
   StyleBox["is",
    FontSize->14], 
   StyleBox[" ",
    FontSize->14], 
   StyleBox["not",
    FontSize->14], 
   StyleBox[" ",
    FontSize->14], 
   StyleBox["a",
    FontSize->14], 
   StyleBox[" ",
    FontSize->14], 
   StyleBox["list",
    FontSize->14], 
   StyleBox[" ",
    FontSize->14], 
   StyleBox["and",
    FontSize->14], 
   StyleBox[" ",
    FontSize->14], 
   StyleBox["does",
    FontSize->14], 
   StyleBox[" ",
    FontSize->14], 
   StyleBox["not",
    FontSize->14], 
   StyleBox[" ",
    FontSize->14], 
   StyleBox["have",
    FontSize->14], 
   StyleBox[" ",
    FontSize->14], 
   StyleBox["an",
    FontSize->14], 
   StyleBox[" ",
    FontSize->14], 
   StyleBox["eighth",
    FontSize->14], 
   StyleBox[" ",
    FontSize->14], 
   StyleBox[
    RowBox[{"part", "."}],
    FontSize->14]}]], "Input",
  CellChangeTimes->{{3.583512250020151*^9, 3.583512256337138*^9}},
  FontFamily->"Arial",
  FontWeight->"Plain",ExpressionUUID->
  "3345935e-30a7-40c7-a55e-72fc957b0660"],
 " Since the kernel couldn\[CloseCurlyQuote]t simplify the input, it just \
returned the input itself. Note that the output format looks slightly \
different than the input format, but that\[CloseCurlyQuote]s eye candy \
created by the notebook front end. This kind of eye candy is ignored by the \
kernel -- it will treat either form as a representation of the same \
expression."
}], "Text",
 CellChangeTimes->{{3.58351226002746*^9, 3.583512354850328*^9}, {
   3.5835127825071583`*^9, 3.583512902977577*^9}, {3.583513409377893*^9, 
   3.58351342773029*^9}, {3.5835907586338997`*^9, 3.58359075863402*^9}, 
   3.584132054439049*^9, {3.584132506978669*^9, 3.5841325577442617`*^9}, 
   3.584448220373301*^9, 3.584449560875083*^9, {3.584449645881546*^9, 
   3.58444964620308*^9}, {3.584453359434044*^9, 3.584453486192256*^9}, {
   3.5844693484607286`*^9, 3.584469351252852*^9}, {3.5846405329271097`*^9, 
   3.584640537302821*^9}, {3.6178113760247726`*^9, 3.617811376851139*^9}, {
   3.681064874750577*^9, 3.681064876434978*^9}, {3.712585861052689*^9, 
   3.712585863337393*^9}},ExpressionUUID->"e13b3d94-f4ed-4bc1-9517-\
8e393f835271"],

Cell[CellGroupData[{

Cell["Function names", "Subsubsubsection",
 CellChangeTimes->{{3.584449599331242*^9, 
  3.584449602074819*^9}},ExpressionUUID->"f0ad952f-8b2e-4634-82ef-\
6ce286769c4a"],

Cell[TextData[{
 StyleBox["Function names must begin with a letter and can only contain \
letters and numbers.  Since all ",
  FontColor->GrayLevel[0]],
 StyleBox["Mathematica",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox[" built-in functions start with a capital letter, it is universal \
practice to start user-defined function and variable names with a lowercase \
letter. This is required in all Mathematica assignments to get full credit. \
The style in ",
  FontColor->GrayLevel[0]],
 StyleBox["Mathematica",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox[" is to use full length English names for functions and variables \
because the result is more readable, even though it requires more typing, and \
we expect you to follow this convention. All words after the first should \
begin with a capital letter to indicate the beginning of a new word. When \
programming assignments are graded, there will be some points for style and \
legibility.",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.584132597653451*^9, 3.5841326054163733`*^9}, {
  3.5841326459891567`*^9, 3.584132693420079*^9}, {3.584132819938685*^9, 
  3.5841329501168327`*^9}, {3.5844695120944643`*^9, 3.584469610516405*^9}, {
  3.585046560344132*^9, 3.5850465683731127`*^9}, {3.617811435258728*^9, 
  3.617811482216416*^9}, {3.681064922396386*^9, 3.681064956536272*^9}, {
  3.681065151334351*^9, 
  3.681065179450066*^9}},ExpressionUUID->"6ca61cf1-537e-47fe-857a-\
71dee19c2751"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clearing definitions from variables", "Subsubsubsection",
 CellChangeTimes->{{3.584449599331242*^9, 3.584449602074819*^9}, {
  3.584469745126934*^9, 
  3.584469750291287*^9}},ExpressionUUID->"ff120b48-d607-4529-974a-\
a6ff02d5552a"],

Cell[TextData[{
 "To clear the definition of a specific variable, use ",
 StyleBox["Clear",
  FontFamily->"Courier"],
 ":"
}], "Text",
 CellChangeTimes->{{3.584451578045514*^9, 3.584451580502894*^9}, {
  3.584451612381757*^9, 3.584451640509193*^9}, {3.584451729171104*^9, 
  3.584451730740394*^9}, {3.584451852715582*^9, 3.58445188877181*^9}, {
  3.584469648141492*^9, 3.584469650683958*^9}},
 FontColor->GrayLevel[
  0],ExpressionUUID->"1106cda2-5f2a-4b41-8c06-53d98611fd1e"],

Cell[BoxData[
 RowBox[{"Clear", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.584451645614085*^9, 3.584451649038361*^9}, {
  3.584451689016548*^9, 3.584451689661124*^9}},
 FontColor->GrayLevel[0],
 CellLabel->"In[51]:=",ExpressionUUID->"f399e7ff-cd73-4a25-a651-0d00e2aa2fd8"],

Cell[TextData[{
 StyleBox["x",
  FontFamily->"Courier"],
 " is now undefined. You can clear function definitions the same way.  To \
clear all variables, type:"
}], "Text",
 CellChangeTimes->{{3.58445171515657*^9, 3.5844517436513643`*^9}, {
  3.584451801868353*^9, 3.5844518321093187`*^9}, {3.584451910739167*^9, 
  3.584451977817911*^9}, {3.5844696540442963`*^9, 3.584469657924156*^9}},
 FontColor->GrayLevel[
  0],ExpressionUUID->"ca03e0c8-b435-4ea7-a997-54de388dd1c7"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.584451807214631*^9, 3.58445182186653*^9}},
 FontColor->GrayLevel[0],
 CellLabel->"In[52]:=",ExpressionUUID->"cd7394e4-51f4-4512-b02e-eb3399b5f9b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Incorporated reading", "Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
  3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
  3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, {
  3.58342604161637*^9, 3.58342604629023*^9}, {3.583498856500457*^9, 
  3.5834988629059267`*^9}, {3.583505142291054*^9, 3.5835051472415533`*^9}, {
  3.583512441172587*^9, 3.5835124550655746`*^9}, {3.58351378178043*^9, 
  3.583513789745801*^9}},ExpressionUUID->"4a868d39-558e-435e-a961-\
5f07fe248261"],

Cell["Read the documentation page tutorial/DefiningFunctions. ", "Text",
 CellChangeTimes->{{3.583516895083177*^9, 3.583516912010635*^9}, {
  3.5841322790941763`*^9, 3.584132281197949*^9}, {3.585046610176527*^9, 
  3.585046612036508*^9}},
 FontColor->GrayLevel[
  0],ExpressionUUID->"a605d789-2d0e-46e1-ba7d-f0388579e7fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Practice: Defining functions with formal parameters and delayed evaluation\
\>", "Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
  3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
  3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, {
  3.58342604161637*^9, 3.58342604629023*^9}, {3.583498856500457*^9, 
  3.5834988629059267`*^9}, {3.583505142291054*^9, 3.5835051472415533`*^9}, {
  3.583512441172587*^9, 
  3.5835124550655746`*^9}},ExpressionUUID->"6a17e8d1-d96d-45d0-8750-\
f264802aa63c"],

Cell[TextData[{
 "Define a function that takes in a single argument ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "1cc97fc3-0913-40a6-bff7-69edbdbb32cd"],
 " and returns an ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "\[Cross]", "n"}], TraditionalForm]],ExpressionUUID->
  "f1f16ff6-e3fb-4c3d-a9a8-9e4725c359cc"],
 " square matrix containing random integers between 1 and ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "192064bd-bbc5-4b54-b6da-d349bc17ecf5"],
 ". Demonstrate that it works by calling it on 5."
}], "ItemNumbered",
 CellChangeTimes->{{3.583512463914525*^9, 3.583512590145523*^9}, {
  3.583512932509253*^9, 3.5835130247213907`*^9}, {3.585046689992331*^9, 
  3.585046690588716*^9}},ExpressionUUID->"c19f7089-180f-4663-a6bc-\
0e8c340bbd15"],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomSquareMatrix", "[", "n_", "]"}], ":=", " ", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"n", ",", " ", 
    RowBox[{"{", 
     RowBox[{"n", ",", " ", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7758212063436337`*^9, 3.775821258961857*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"64a20e62-6007-4f2d-8965-30ed7a278ad9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomSquareMatrix", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.775821267472034*^9, 3.775821273821033*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"397f3e2d-6065-4e50-afa0-230351713e68"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "4", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "0", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "4", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "3", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0", ",", "5", ",", "1", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.775821274794788*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"92327e29-aadc-44c2-a89e-ac15330f4d16"]
}, Open  ]],

Cell["\<\
Define a function that takes in two arguments and returns a list consisting \
of their difference, product, and ratio, in that order. You can construct a \
list explicitly by just putting curly brackets around some expressions in \
your code. Demonstrate that it works by calling it on 5 and 10.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.583512463914525*^9, 3.583512590145523*^9}, {
  3.583512932509253*^9, 3.5835130628895617`*^9}, {3.583513112769485*^9, 
  3.583513170969942*^9}, {3.583590840919817*^9, 
  3.583590963314618*^9}},ExpressionUUID->"42fd68e4-8595-4d9b-8d8b-\
ae91675c2c36"],

Cell[BoxData[
 RowBox[{
  RowBox[{"differenceProductRatio", "[", 
   RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", " ", "-", " ", "b"}], ",", " ", 
    RowBox[{"a", " ", "*", " ", "b"}], ",", " ", 
    RowBox[{"a", " ", "/", " ", "b"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.775826399155972*^9, 3.775826480791465*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"0cc4f8a7-c74a-4d2b-a78d-b0bcc9a938a6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"differenceProductRatio", "[", 
  RowBox[{"5", ",", " ", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.7758264604455547`*^9, 3.775826482469386*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"b44486ec-b6e9-4416-9ee8-4c367cc4b752"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5"}], ",", "50", ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.775826469506155*^9, 3.775826489310031*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"808c587c-5696-49d5-8df5-0fff81eab39a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notebooks and kernels", "Subsection",
 CellChangeTimes->{{3.584640965842999*^9, 3.5846409716782827`*^9}, 
   3.584993390458672*^9},ExpressionUUID->"7c50595e-9375-434a-b82c-\
33ebeb3554fd"],

Cell["\<\
You can have more than one notebook open at once. By default, each notebook \
interacts with the same kernel. Since the kernel keeps track of values \
assigned to variables and expressions, definitions made in any notebook \
appear as though they were made in all notebooks. If you define x=1 in one \
notebook, then define x=2 in a second notebook, then go back to the first \
notebook, you\[CloseCurlyQuote]ll find that the value of x is now 2. 

The default is that all notebooks are connected to the same kernel, but you \
can also run more than one kernel (typically up to 4). The menu sequence \
Evaluation -> kernel Configuration Options will pop up a window that allows \
you to add new kernel configurations with names. Once you\[CloseCurlyQuote]ve \
configured a second kernel it will show up as a choice when you use the menu \
sequence Evaluation -> Notebook\[CloseCurlyQuote]s Kernel. This is useful \
mainly if you have a long running computation in one kernel and you want to \
simultaneously do some interactive, lightweight computation in another. Each \
kernel will only evaluate one input at a time.\
\>", "Text",
 CellChangeTimes->{{3.5846409795267057`*^9, 3.584641038286228*^9}, {
  3.5846411161829033`*^9, 3.584641225222479*^9}, {3.58464126124467*^9, 
  3.584641315262252*^9}, {3.5846416817630177`*^9, 3.5846417611496696`*^9}, {
  3.5846418632564087`*^9, 3.584641959678213*^9}, {3.584993392157309*^9, 
  3.584993407697976*^9}, {3.585047118929764*^9, 
  3.585047202868911*^9}},ExpressionUUID->"b1d7c9ab-4f18-4df3-af75-\
5720840ccbf5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comments", "Subsection",
 CellChangeTimes->{{3.584450087344184*^9, 
  3.5844500884226227`*^9}},ExpressionUUID->"8bd2df6b-2f9a-4e05-823b-\
ddd3ee283ccc"],

Cell["\<\
You can add comments to notebooks in text cells or input cells.  To add a \
comment in an input cell, enclose the comment in (* and *).  The comment can \
be inserted anywhere in the expression.  For example\
\>", "Text",
 CellChangeTimes->{{3.584450161231085*^9, 3.584450425612118*^9}, {
  3.647618658333581*^9, 
  3.647618658586446*^9}},ExpressionUUID->"d7c522d5-3b0d-4e87-83a8-\
99606a7e3b49"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"a", ">", "b"}], ",", " ", 
   RowBox[{"(*", " ", "then", " ", "*)"}], " ", "p", ",", " ", 
   RowBox[{"(*", " ", "else", " ", "*)"}], " ", "q"}], "]"}]], "Input",
 CellChangeTimes->{{3.584450432643641*^9, 3.5844504924388847`*^9}, {
  3.5844505371842747`*^9, 3.584450558669944*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"a7fb8ea0-7808-4d3f-a343-8e11967286a5"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"a", ">", "b"}], ",", "p", ",", "q"}], "]"}]], "Output",
 CellChangeTimes->{3.775826568010809*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"129c19be-3a6e-47ea-8e1f-bfcfe29bca1b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Printing to the notebook", "Subsection",
 CellChangeTimes->{{3.583508007226316*^9, 3.583508008965015*^9}, {
  3.583513275229184*^9, 
  3.583513288921771*^9}},ExpressionUUID->"e02aa7d4-6300-41c7-87be-\
e7ab1c6fd499"],

Cell[TextData[{
 StyleBox["There are many ways to print and to create formatted output. The \
most basic is the built-in function ",
  FontColor->GrayLevel[0]],
 StyleBox["Print",
  FontFamily->"Courier",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.583513325210005*^9, 3.5835133416151237`*^9}, {
   3.583513376257972*^9, 3.583513382754396*^9}, {3.5835141393163157`*^9, 
   3.5835141849955053`*^9}, 
   3.583590981278207*^9},ExpressionUUID->"a561b3fd-8535-4314-8543-\
35ed026205b6"],

Cell[CellGroupData[{

Cell["Incorporated reading", "Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
  3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
  3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, {
  3.58342604161637*^9, 3.58342604629023*^9}, {3.583498856500457*^9, 
  3.5834988629059267`*^9}, {3.583505142291054*^9, 3.5835051472415533`*^9}, {
  3.583512441172587*^9, 3.5835124550655746`*^9}, {3.58351378178043*^9, 
  3.583513789745801*^9}},ExpressionUUID->"efbf3343-495c-4388-ac76-\
2656f0bd9f89"],

Cell[TextData[{
 "Read the reference documentation page on ",
 StyleBox["Print",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ". This is a relatively brief and simple page with just 13 examples. Read \
all of them. At the end, you\[CloseCurlyQuote]ll find that you have learned \
about some new kinds of things ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can do, such as create graphics from expressions, even though you won\
\[CloseCurlyQuote]t actually know how to do or use these things yourself yet. \
It\[CloseCurlyQuote]s important to develop a set of terms and concepts that \
you don\[CloseCurlyQuote]t fully understand. That way, \
you\[CloseCurlyQuote]ll know what to look up when you\[CloseCurlyQuote]re \
searching for a way to do something. For example, you\[CloseCurlyQuote]ll \
know that there\[CloseCurlyQuote]s a powerful built-in function called ",
 StyleBox["Graphics",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " that you can look up if you want to write code that generates vector \
graphics and that there\[CloseCurlyQuote]s a function called ",
 StyleBox["Column",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " that prints things in columns. "
}], "Text",
 CellChangeTimes->{{3.583513794570169*^9, 3.583513795964725*^9}, {
  3.583514188785845*^9, 3.583514441946226*^9}, {3.583591022447954*^9, 
  3.5835910283336983`*^9}, {3.584469978373869*^9, 
  3.584469988452393*^9}},ExpressionUUID->"66552d51-7198-4232-b242-\
a40ef9bb106b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Practice: Printing", "Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
  3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
  3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, {
  3.58342604161637*^9, 3.58342604629023*^9}, {3.583498856500457*^9, 
  3.5834988629059267`*^9}, {3.583505142291054*^9, 3.5835051472415533`*^9}, {
  3.583512441172587*^9, 3.5835124550655746`*^9}, {3.583514468298832*^9, 
  3.583514469463975*^9}},ExpressionUUID->"5982435e-ba58-4e7e-ab60-\
315454d188d7"],

Cell[TextData[{
 "Yes, it had to come sometime. You knew you couldn\[CloseCurlyQuote]t \
escape. So here it is. Write a function called ",
 StyleBox["hello",
  FontFamily->"Courier",
  FontSize->14,
  FontWeight->"Bold"],
 " that takes no arguments and, when called, prints \
\[OpenCurlyDoubleQuote]Hello, World.\[CloseCurlyDoubleQuote] Demonstrate that \
it works. "
}], "ItemNumbered",
 CellChangeTimes->{{3.583514476426425*^9, 3.583514749314197*^9}, {
  3.583514798729973*^9, 3.5835148328018427`*^9}, {3.5835148917642803`*^9, 
  3.5835148917693033`*^9}},ExpressionUUID->"a45d2811-a84b-432a-9f41-\
23801666d729"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hello", "[", "]"}], ":=", 
  RowBox[{"Print", "[", "\"\<Hello, World.\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7758266464541807`*^9, 3.775826697983582*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"c8323863-235d-410c-9586-278707d5fcfc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hello", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7758267040045*^9, 3.7758267079592943`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"5d18622f-73cf-41d8-91a5-7a9e32f280a8"],

Cell[BoxData["\<\"Hello, World.\"\>"], "Print",
 CellChangeTimes->{3.775826708599646*^9},
 CellLabel->
  "During evaluation of \
In[61]:=",ExpressionUUID->"12fbd965-4502-4a6d-b179-e97007f58be4"]
}, Open  ]],

Cell[TextData[{
 "Now write a function called ",
 StyleBox["helloWorld",
  FontFamily->"Courier",
  FontSize->14,
  FontWeight->"Bold"],
 " that takes in one argument and behaves as shown in the next three cells. I \
made these cells non-evaluatable because they are meant to show you what \
should happen after define ",
 StyleBox["helloWorld",
  FontFamily->"Courier",
  FontSize->14,
  FontWeight->"Bold"],
 ", which is currently undefined."
}], "ItemNumbered",
 CellChangeTimes->{{3.583514476426425*^9, 3.583514749314197*^9}, {
  3.583514798729973*^9, 3.5835148328018427`*^9}, {3.5835148917642803`*^9, 
  3.5835149224577503`*^9}, {3.585047307232275*^9, 3.585047307420548*^9}, {
  3.712585549398888*^9, 3.712585601173873*^9}, {3.7125857002673063`*^9, 
  3.7125857177590933`*^9}, {3.712585932690318*^9, 
  3.7125859841065903`*^9}},ExpressionUUID->"92eba4aa-df2c-4c78-ad8e-\
f5870a5deb31"],

Cell[BoxData[
 RowBox[{
  RowBox[{"helloWorld", "[", "x_", "]"}], ":=", 
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Hello, World \>\"", ",", " ", "x", ",", " ", "\"\<.\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.775826733513361*^9, 3.775826743990069*^9}, {
  3.775826777861747*^9, 3.775826803565394*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"62df056f-f40f-4e10-b96f-d5a280bf1444"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"helloWorld", "[", "7", "]"}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.583514981384881*^9, 3.583514993450548*^9}, {
   3.584471791807515*^9, 3.584471797166753*^9}, {3.58447185255445*^9, 
   3.5844718532964277`*^9}, 3.712585511903698*^9, {3.712585614776537*^9, 
   3.712585624646484*^9}, {3.712585927621648*^9, 3.712585928372439*^9}, {
   3.775826811309023*^9, 3.7758268147908077`*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"56dcbf60-d0e8-464e-ae5f-c0b9d77d359e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Hello, World \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["Hello, World ", 7, "."],
  Editable->False]], "Print",
 Deployed->True,
 CellChangeTimes->{3.584471650014612*^9},
 CellLabel->
  "During evaluation of \
In[186]:=",ExpressionUUID->"4b4bc904-81cc-49d0-8f54-b3e0c820914c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"helloWorld", "[", "9", "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"do", " ", "not", " ", "evaluate"}], " ", "*)"}]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.5835150288763123`*^9, 3.5835150292353153`*^9}, 
   3.712585517060568*^9, 3.712585634223176*^9},
 CellLabel->
  "In[184]:=",ExpressionUUID->"4b05e2f4-4335-4c0a-8389-128ae066c9ce"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Hello, World \"\>", "\[InvisibleSpace]", "9", 
   "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["Hello, World ", 9, "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.5844715662134943`*^9},
 CellLabel->
  "During evaluation of \
In[184]:=",ExpressionUUID->"1f64db46-5caf-44b6-8bac-d19691e8c08f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"helloWorld", "[", "\"\<Nine\>\"", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"do", " ", "not", " ", "evaluate"}], " ", "*)"}]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.58351503714743*^9, 3.5835150402907543`*^9}, 
   3.71258552038859*^9, {3.712585637726371*^9, 3.712585638278509*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"319631b9-0a5f-4eac-a30c-277c51c36907"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Hello, World \"\>", "\[InvisibleSpace]", "\<\"Nine\"\>", 
   "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["Hello, World ", "Nine", "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.584471568311818*^9},
 CellLabel->
  "During evaluation of \
In[185]:=",ExpressionUUID->"1f8aa6c5-16b4-4a0d-81f8-6cff448778c4"]
}, Open  ]],

Cell["\<\
It should behave this way for any numeric or string argument. Pay attention \
to getting all the details of spacing and punctuation right. \[FilledSquare]\
\>", "Text",
 CellChangeTimes->{{3.583515052243328*^9, 3.5835150800980663`*^9}, {
  3.5835180226909637`*^9, 
  3.583518027220049*^9}},ExpressionUUID->"736a8c5f-24dc-47fe-83b2-\
ff9da6dfbc60"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Repeating operations (a.k.a. looping, iterating)", "Subsection",
 CellChangeTimes->{{3.583508056911644*^9, 
  3.583508078785828*^9}},ExpressionUUID->"f6f8cd80-ab6b-4c93-aed1-\
227c718525c2"],

Cell[TextData[{
 "You already learned one way to do the same thing multiple times using ",
 StyleBox["Table",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ". However, you don\[CloseCurlyQuote]t always want the result of each \
iteration returned in a list. Sometimes you just want to compute temporary \
intermediate values and decide whether to return them in a list, print them \
out, or do something else, depending on what they are. For this you can use \
any of a variety of iteration constructs similar to those used in other \
programming languages, including ",
 StyleBox["Do",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ", ",
 StyleBox["While",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ", and, ",
 StyleBox["For",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.583515204714781*^9, 3.583515368962274*^9}, {
  3.583591110990778*^9, 
  3.583591112074485*^9}},ExpressionUUID->"ddd50e62-b474-4abc-ad98-\
1d3316cd461c"],

Cell[CellGroupData[{

Cell["Incorporated reading", "Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
  3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
  3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, {
  3.58342604161637*^9, 3.58342604629023*^9}, {3.583498856500457*^9, 
  3.5834988629059267`*^9}, {3.583505142291054*^9, 3.5835051472415533`*^9}, {
  3.583512441172587*^9, 3.5835124550655746`*^9}, {3.58351378178043*^9, 
  3.583513789745801*^9}},ExpressionUUID->"277d5c05-71b4-456d-b4f5-\
1b32b8432ca8"],

Cell[CellGroupData[{

Cell["Read the documentation page tutorial/RepetitiveOperations.", \
"ItemNumbered",
 CellChangeTimes->{{3.583516987105856*^9, 3.583516991677878*^9}, {
   3.5835174087365437`*^9, 3.583517422290324*^9}, {3.58351759611478*^9, 
   3.583517597810013*^9}, {3.584133557959552*^9, 3.584133559557939*^9}, 
   3.617812911505995*^9, {3.6178129496389437`*^9, 
   3.6178129775902767`*^9}},ExpressionUUID->"803a3306-9f48-4a13-990e-\
cc30b5741cff"],

Cell[TextData[{
 "Then read the reference page on ",
 StyleBox["For",
  FontFamily->"Courier",
  FontSize->14,
  FontWeight->"Bold"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.583516987105856*^9, 3.583516991677878*^9}, {
   3.5835174087365437`*^9, 3.583517422290324*^9}, {3.58351759611478*^9, 
   3.583517597810013*^9}, {3.584133557959552*^9, 3.584133559557939*^9}, 
   3.617812911505995*^9},ExpressionUUID->"09951a62-2149-435a-b1e6-\
a95750721e01"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Practice: Looping constructs", "Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
  3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
  3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, {
  3.58342604161637*^9, 3.58342604629023*^9}, {3.583498856500457*^9, 
  3.5834988629059267`*^9}, {3.583505142291054*^9, 3.5835051472415533`*^9}, {
  3.583512441172587*^9, 3.5835124550655746`*^9}, {3.583514468298832*^9, 
  3.583514469463975*^9}, {3.583517624331842*^9, 
  3.583517631065776*^9}},ExpressionUUID->"49022a07-69aa-43aa-a9bc-\
349caec00fde"],

Cell[TextData[{
 "Write a function ",
 StyleBox["helloTimes[n_]",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " that prints \[OpenCurlyDoubleQuote]Hello, World.\[CloseCurlyDoubleQuote] \
",
 StyleBox["n",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " times. Demonstrate that it works by calling it on 9."
}], "Text",
 CellChangeTimes->{{3.583517679589593*^9, 3.583517796721043*^9}, {
  3.583519453604433*^9, 3.583519458657486*^9}, {3.584134177790297*^9, 
  3.5841342252613373`*^9}, {3.617812891957692*^9, 
  3.6178128924489937`*^9}},ExpressionUUID->"cd147c10-bfa8-49cc-9353-\
c257249e7ac6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"helloTimes", "[", "n_", "]"}], ":=", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<Hello, World\>\"", "]"}], ",", " ", "n"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7758270180907516`*^9, 3.775827073578047*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"a46b639e-567a-490f-b617-bd888cce3a72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"helloTimes", "[", "9", "]"}]], "Input",
 CellChangeTimes->{{3.7758270823644257`*^9, 3.775827085769108*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"2769602f-457a-4773-af96-3bb5ac475621"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Hello, World\"\>"], "Print",
 CellChangeTimes->{3.775827086655571*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"0f12be27-2840-4e42-a2e6-d46ecd69b19e"],

Cell[BoxData["\<\"Hello, World\"\>"], "Print",
 CellChangeTimes->{3.775827086657538*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"9c44dadb-39f9-4f20-97c0-a0b3e3380949"],

Cell[BoxData["\<\"Hello, World\"\>"], "Print",
 CellChangeTimes->{3.77582708666008*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"b44952c1-b684-442d-88e2-eb365a10d138"],

Cell[BoxData["\<\"Hello, World\"\>"], "Print",
 CellChangeTimes->{3.775827086662966*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"5be8b748-a6de-4ed0-8d1a-12760bc7efee"],

Cell[BoxData["\<\"Hello, World\"\>"], "Print",
 CellChangeTimes->{3.775827086664895*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"e6c90dd7-daf1-4e69-8a4f-34ab66750bd2"],

Cell[BoxData["\<\"Hello, World\"\>"], "Print",
 CellChangeTimes->{3.77582708666636*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"df19717c-de60-456c-9bd3-a47b41528e8f"],

Cell[BoxData["\<\"Hello, World\"\>"], "Print",
 CellChangeTimes->{3.775827086667767*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"10623fa5-32f2-4006-b83e-d7495acf8227"],

Cell[BoxData["\<\"Hello, World\"\>"], "Print",
 CellChangeTimes->{3.7758270866692753`*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"8c0b0305-4945-407b-bb9a-464438cbd29e"],

Cell[BoxData["\<\"Hello, World\"\>"], "Print",
 CellChangeTimes->{3.775827086670746*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"91c50c5e-f064-4be1-b110-cda5dcf31303"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Local constants and variables", "Subsection",
 CellChangeTimes->{{3.583508056911644*^9, 3.583508078785828*^9}, {
  3.583519318090605*^9, 3.583519326145769*^9}, {3.6178138647145987`*^9, 
  3.6178138695735893`*^9}},ExpressionUUID->"fe6427cb-692c-4bd1-ab88-\
06fb140f8108"],

Cell["\<\
By default, all symbols used within the body of a function are global, \
meaning their value inside the function is the same as their value outside.\
\>", "Text",
 CellChangeTimes->{{3.585047905191188*^9, 3.58504795943727*^9}, {
  3.585047991285988*^9, 3.5850480165814533`*^9}, {3.585048050068652*^9, 
  3.5850481057094603`*^9}, {3.617813880861801*^9, 
  3.617813942408988*^9}},ExpressionUUID->"30d6803d-c6b2-4312-98de-\
59e8acb5c626"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fun", "[", "]"}], ":=", " ", 
  RowBox[{"(", 
   RowBox[{"var", "=", "5"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.617813946084444*^9, 3.617813985336203*^9}, {
   3.617814046852227*^9, 3.617814051811384*^9}, 3.617814147430016*^9, {
   3.6178141885498857`*^9, 3.617814220154319*^9}, {3.7125860334378757`*^9, 
   3.712586038939913*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"a2d2b84f-2b53-4f00-bc40-bbaebdf59bbf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var", "=", "2"}]], "Input",
 CellChangeTimes->{{3.617813991055848*^9, 3.617813993533111*^9}, {
  3.6178141302486763`*^9, 3.6178141582825413`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"9ba4ff73-5488-4c16-b760-3472492cc54c"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.775827134533016*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"f8b28c8f-8f35-45f0-8fbd-3b94b4651345"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fun", "[", "]"}]], "Input",
 CellChangeTimes->{{3.61781412225099*^9, 3.6178141372893963`*^9}, 
   3.617814167491681*^9},
 CellLabel->"In[70]:=",ExpressionUUID->"80f52e11-9e00-40f1-b2c1-8afdb7dfdf30"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.775827146252225*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"a7471222-a180-41a2-a812-239295766d5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["var"], "Input",
 CellChangeTimes->{{3.617814170270504*^9, 3.6178141705916*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"e62ff185-da2b-49c5-a3f6-f8d8fbd8dfff"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.775827153980955*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"3198a586-8e74-449b-93fc-5d50464cfcc0"]
}, Open  ]],

Cell[TextData[{
 "Setting the value of ",
 StyleBox["var",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " inside the function also changed its value outside the function. With very \
few exceptions, ",
 StyleBox["do not use global variables.",
  FontWeight->"Bold"],
 " Those poorly trained individuals who use global variables force the rest \
of us to read the entire code base to figure out where the variables get \
their current value and what effect changing their value may have elsewhere. \
Plus, ",
 StyleBox["we will subtract points from code that uses global variables",
  FontWeight->"Bold"],
 ", with one exception: variables that are used to control the behavior of an \
entire program, are set only once, at the top of a file, and begin with a \
dollars sign, as in ",
 StyleBox["$RecurisionLimit",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ". If you try to set the value of a global variable from within a function, \
you will lose points and make enemies among those who read your code."
}], "Text",
 CellChangeTimes->{{3.617814254468433*^9, 
  3.617814553298538*^9}},ExpressionUUID->"eeb5f76c-c31f-4245-9887-\
36b362320324"],

Cell[TextData[{
 "There are several ways of defining local variables. In the simplest and \
most common case, you want to define a variable to be the result of some \
computation and then keep that value fixed throughout the execution of the \
function. You do this using the built-in construct ",
 StyleBox["With",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ", as in, "
}], "Text",
 CellChangeTimes->{{3.6178145647860737`*^9, 
  3.617814744197715*^9}},ExpressionUUID->"bf3bb5bc-5b98-4e2c-80cb-\
17496b3db6e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"functionsOfAFactorial", "[", "n_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nFact", "=", 
      RowBox[{"n", "!"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nFact", "^", "2"}], ",", " ", 
      RowBox[{"nFact", "^", "3"}], ",", " ", 
      RowBox[{"N", "[", 
       RowBox[{"Log", "[", "nFact", "]"}], "]"}], ",", 
      RowBox[{"N", "[", 
       RowBox[{"Power", "[", 
        RowBox[{"nFact", ",", 
         RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.617814773404429*^9, 3.6178149163555098`*^9}, {
  3.617814985801324*^9, 3.617814996508684*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"15959a22-43ba-4a6c-b46b-cfab694fb1b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"functionsOfAFactorial", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.617814965319982*^9, 3.617814971553808*^9}, {
  3.617815016420002*^9, 3.6178150297024*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"04ca98da-0e3a-4ec5-91fd-3cb1846ed9a3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "14400", ",", "1728000", ",", "4.787491742782046`", ",", 
   "2.6051710846973517`"}], "}"}]], "Output",
 CellChangeTimes->{3.775827261909422*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"321c8f1a-f7a2-4f1d-acb0-ee3cab6472fb"]
}, Open  ]],

Cell[TextData[{
 StyleBox["With",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " simply substitutes the expression on the right-hand-side of the = sign for \
the symbol on the left throughout the enclosed expression. This is a textual \
substitution, so the result is by definition identical to writing"
}], "Text",
 CellChangeTimes->{{3.617815056670413*^9, 3.617815153668129*^9}, {
  3.647618943712634*^9, 
  3.647618945181795*^9}},ExpressionUUID->"f5ed3fde-9780-4e3e-99ab-\
cc2f5708c38b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"functionsOfAFactorial", "[", "n_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"n", "!"}], "^", "2"}], ",", " ", 
    RowBox[{
     RowBox[{"n", "!"}], "^", "3"}], ",", " ", 
    RowBox[{"N", "[", 
     RowBox[{"Log", "[", 
      RowBox[{"n", "!"}], "]"}], "]"}], ",", 
    RowBox[{"N", "[", 
     RowBox[{"Power", "[", 
      RowBox[{
       RowBox[{"n", "!"}], ",", 
       RowBox[{"1", "/", "n"}]}], "]"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.617814773404429*^9, 3.6178149163555098`*^9}, {
  3.617814985801324*^9, 3.617814996508684*^9}, {3.617815168324822*^9, 
  3.617815199539178*^9}, {3.6178156267558317`*^9, 3.617815633045809*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"ca1635af-05cd-411c-bcb6-1ede79f1a1fc"],

Cell[TextData[{
 "The first argument to ",
 StyleBox["With",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " is a list of substitutions to make -- in this case, just a single \
substitution. However, the substitutions are not applied to each other, so"
}], "Text",
 CellChangeTimes->{{3.61781520270221*^9, 3.617815257879258*^9}, {
  3.617815333181119*^9, 
  3.6178153531882963`*^9}},ExpressionUUID->"e24057e4-927d-435a-b3df-\
db1c5fc8c1f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"foo", "[", "n_", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"square", "=", 
       RowBox[{"n", "^", "2"}]}], ",", " ", 
      RowBox[{"cube", "=", 
       RowBox[{"n", "*", "square"}]}]}], "}"}], ",", "cube"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.617815355276231*^9, 3.617815425779142*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"30e0c729-968a-4131-bd90-9bd1fd42cbbd"],

Cell["does not work as intended.", "Text",
 CellChangeTimes->{{3.617815428771834*^9, 
  3.617815441306134*^9}},ExpressionUUID->"0ffa9866-fbb2-4c85-9598-\
f373ecbd80dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"foo", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.6178154427421217`*^9, 3.6178154498127337`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"276e56db-f8f0-47e1-9472-5afb640b5ab6"],

Cell[BoxData[
 RowBox[{"3", " ", "square"}]], "Output",
 CellChangeTimes->{3.7758273505441837`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"d79cd933-d63e-4b13-979d-9c8321d86c5a"]
}, Open  ]],

Cell[TextData[{
 "The problem is that the ",
 StyleBox["square",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " on the right-hand-side of the substitution for ",
 StyleBox["cube",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " is undefined. To make this work, you have to nest two ",
 StyleBox["With",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " expressions:"
}], "Text",
 CellChangeTimes->{{3.6178154615452023`*^9, 
  3.6178155536712008`*^9}},ExpressionUUID->"e90044ed-fab0-4122-8341-\
642efc5ce2ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"foo", "[", "n_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"square", "=", 
      RowBox[{"n", "^", "2"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cube", "=", 
        RowBox[{"n", "*", "square"}]}], "}"}], ",", "\[IndentingNewLine]", 
      "cube"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.617815355276231*^9, 3.617815425779142*^9}, 
   3.617815533728703*^9, {3.617815566704836*^9, 3.617815602144663*^9}, 
   3.617815665660452*^9},
 CellLabel->"In[77]:=",ExpressionUUID->"e55d6c2b-b2f2-4f76-aade-3fcce909cb61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"foo", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.617815669551456*^9, 3.617815674726883*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"bfe005bb-5eff-4792-a9e6-ce04518f9c42"],

Cell[BoxData["27"], "Output",
 CellChangeTimes->{3.775827385936348*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"49c239b3-b393-491a-8a03-3f213917fbfa"]
}, Open  ]],

Cell[TextData[{
 "If you want to create a local variable whose value you can change multiple \
times during the execution of a function, use ",
 StyleBox["Module",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ". The syntax is the same:"
}], "Text",
 CellChangeTimes->{{3.6178160299720707`*^9, 
  3.617816094032148*^9}},ExpressionUUID->"8ccd8717-246c-4b52-9b64-\
07d947e6946f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fib", "[", "n_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "is", " ", "ugly", " ", "code", " ", "of", " ", "the", " ", 
    "type", " ", "I", " ", 
    RowBox[{"don", "'"}], "t", " ", "like", " ", "to", " ", 
    RowBox[{"get", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1", "=", "1"}], ",", 
      RowBox[{"x2", "=", "1"}], ",", 
      RowBox[{"x3", "=", "2"}], ",", "k"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "<=", 
        RowBox[{"n", "-", "2"}]}], ",", 
       RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"x3", "=", 
         RowBox[{"x1", "+", "x2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"x1", "=", "x2"}], ";", "\[IndentingNewLine]", 
        RowBox[{"x2", "=", "x3"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", ">", "2"}], ",", "x3", ",", "1"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.617816099276289*^9, 3.617816223845367*^9}, {
  3.6178162562944717`*^9, 3.617816292891802*^9}, {3.61781638078545*^9, 
  3.617816517046691*^9}, {3.61781655331769*^9, 3.617816578483618*^9}, {
  3.617816739947444*^9, 3.6178167608916817`*^9}, {3.617816861645234*^9, 
  3.617816890785234*^9}, {3.6178169330514717`*^9, 3.617816946850268*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"969f7740-603d-4016-9b1c-054e69a48560"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fib", "[", "6", "]"}]], "Input",
 CellChangeTimes->{{3.617816474960911*^9, 3.617816498576063*^9}, {
  3.617816585024851*^9, 3.61781659262654*^9}, {3.6178168437872667`*^9, 
  3.617816880778634*^9}, {3.617816911509778*^9, 3.617816912281822*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"f0d3ddde-3e51-409a-885d-7d3ef4cfd478"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.77582748976923*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"0867024b-935d-4aa8-987e-f513394460c8"]
}, Open  ]],

Cell[TextData[{
 "Whereas ",
 StyleBox["With",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " works by substituting the value for the variable, ",
 StyleBox["Module",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " works by generating a brand new symbol (variable name), replacing all \
instances of the old variable in the body with the new symbol, and setting \
the new symbol to the the right-hand side of the initial assignment. Note \
that variables made local by ",
 StyleBox["Module",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " are not required to have an initial value, although it is often good style \
to assign one. ",
 StyleBox["With",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " is a lot faster than ",
 StyleBox["Module",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ", so use ",
 StyleBox["With",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " unless you plan on making multiple assignments to the variable. And if you \
do plan on making multiple assignments to the variable, ask yourself if there\
\[CloseCurlyQuote]s a better way to write the code (see \
functionalProgramming.nb). "
}], "Text",
 CellChangeTimes->{{3.617818192615155*^9, 3.6178183250664988`*^9}, {
  3.617818446464737*^9, 3.617818641457382*^9}, {3.6476192680452023`*^9, 
  3.64761929823672*^9}},ExpressionUUID->"57fae955-08ad-48e3-abe1-\
2ad4b8f7711f"],

Cell[TextData[{
 "As a general rule, nearly all function definitions that are more than one \
line long should start with either a ",
 StyleBox["With",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " or a ",
 StyleBox["Module",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.6178187073350163`*^9, 
  3.617818747094042*^9}},ExpressionUUID->"e8f6839f-9a4b-43df-b4d8-\
9f9503bb65b4"],

Cell[CellGroupData[{

Cell["Incorporated reading", "Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
  3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
  3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, {
  3.58342604161637*^9, 3.58342604629023*^9}, {3.583498856500457*^9, 
  3.5834988629059267`*^9}, {3.583505142291054*^9, 3.5835051472415533`*^9}, {
  3.583512441172587*^9, 3.5835124550655746`*^9}, {3.58351378178043*^9, 
  3.583513789745801*^9}},ExpressionUUID->"27de67a4-31a5-4316-8c00-\
4735ba58838c"],

Cell["\<\
Read the documentation page tutorial/ModulesAndLocalVariables through the \
section \[OpenCurlyDoubleQuote]Assigning initial values to local variables\
\[CloseCurlyDoubleQuote]. You can skip the last section, \
\[OpenCurlyDoubleQuote]Using local variables in definitions with conditions\
\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.583519365860116*^9, 3.5835193868511057`*^9}, {
  3.584134260939145*^9, 3.584134262364126*^9}, {3.584470420420929*^9, 
  3.584470421316113*^9}, {3.585047804119833*^9, 
  3.585047859485379*^9}},ExpressionUUID->"a498e512-4338-459b-b073-\
5db5568c345f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sequencing expressions", "Subsubsection",
 CellChangeTimes->{{3.5835964583747797`*^9, 
  3.5835964622584467`*^9}},ExpressionUUID->"bd3b7422-1fc6-4aad-89aa-\
6d1683bc9435"],

Cell["\<\
When an expression is followed by a semicolon, it is evaluated, its return \
value is ignored, and the next expression is evaluated.\
\>", "Text",
 CellChangeTimes->{{3.5835964661959333`*^9, 3.58359650769718*^9}, 
   3.584450892250449*^9},ExpressionUUID->"440bdec1-166c-4527-bf85-\
0fa554d92591"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"30", "!"}]], "Input",
 CellChangeTimes->{{3.583596510799624*^9, 3.583596521899374*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"5a280448-264c-4402-b056-9ae06b107090"],

Cell[BoxData["265252859812191058636308480000000"], "Output",
 CellChangeTimes->{3.7758277311556587`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"40ee01dc-7560-45cd-8e4d-8839ad3a6875"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"300", "!"}], ";", " ", 
  RowBox[{
  "Print", "[", "\"\<That was too long to print!\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.583596525885705*^9, 3.583596542749804*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"951cc97f-5702-4037-a66f-ff945b5c42b5"],

Cell[BoxData["\<\"That was too long to print!\"\>"], "Print",
 CellChangeTimes->{3.775827733996279*^9},
 CellLabel->
  "During evaluation of \
In[82]:=",ExpressionUUID->"09a23bdd-0809-4164-b8d0-e5e4ee09ed23"]
}, Open  ]],

Cell["\<\
Suppressing output is particularly useful when writing procedural style \
programs, where you want to take a sequence of steps with side effects, such \
as modifying the values of local variables, printing, etc., before finally \
returning a value.\
\>", "Text",
 CellChangeTimes->{{3.583596565715884*^9, 3.583596636074266*^9}, {
   3.584135197967331*^9, 3.584135223169643*^9}, 
   3.584470463628044*^9},ExpressionUUID->"a5762c1d-d4a7-4292-996d-\
fce57956cc65"],

Cell[BoxData[
 RowBox[{
  RowBox[{"factorial", "[", "n_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "=", "1"}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"x", "=", 
        RowBox[{"x", "*", "i"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "2", ",", "n"}], "}"}]}], "]"}], ";", " ", "x"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5835966460466967`*^9, 3.5835966518772984`*^9}, {
  3.5835967983185463`*^9, 3.58359699142069*^9}, {3.5835971301905727`*^9, 
  3.5835971405180264`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"8a0fb8b1-1411-4b85-bd44-8dd816d179b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"factorial", "[", "4", "]"}]], "Input",
 CellChangeTimes->{{3.583596916291975*^9, 3.5835969205800657`*^9}, {
  3.583597067788701*^9, 3.583597088698106*^9}, {3.583597160296145*^9, 
  3.5835971653791647`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"daad5854-3244-4c10-90a6-b7e40390c1c8"],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{3.775827765141926*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"f5800a60-bf2f-4f88-b6ce-5e7ceff66a13"]
}, Open  ]],

Cell[TextData[{
 "Note the semicolon after the ",
 StyleBox["Do",
  FontFamily->"Courier"],
 " expression -- we don\[CloseCurlyQuote]t care what\[CloseCurlyQuote]s \
returned by ",
 StyleBox["Do",
  FontFamily->"Courier"],
 ", but after it\[CloseCurlyQuote]s done modifying ",
 StyleBox["x",
  FontFamily->"Courier"],
 ", we want to return the value of ",
 StyleBox["x",
  FontFamily->"Courier"],
 "."
}], "Text",
 CellChangeTimes->{{3.583597184700677*^9, 
  3.583597239658106*^9}},ExpressionUUID->"874e8585-bce7-45c4-b97f-\
8a7b39dfcfea"],

Cell[CellGroupData[{

Cell["Practice: Local variables and sequencing expressions", \
"Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
  3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
  3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, {
  3.58342604161637*^9, 3.58342604629023*^9}, {3.583498856500457*^9, 
  3.5834988629059267`*^9}, {3.583505142291054*^9, 3.5835051472415533`*^9}, {
  3.583512441172587*^9, 3.5835124550655746`*^9}, {3.583514468298832*^9, 
  3.583514469463975*^9}, {3.583517624331842*^9, 3.583517631065776*^9}, {
  3.583519420630145*^9, 3.583519422650053*^9}, {3.583596780716548*^9, 
  3.5835967844023867`*^9}},ExpressionUUID->"48589d04-5ad5-4d5f-8b7f-\
7f26a6b83a37"],

Cell[TextData[{
 "Write a function ",
 StyleBox["randomDNA[n_]",
  FontFamily->"Courier"],
 " that prints out a string of length ",
 StyleBox["n",
  FontFamily->"Courier"],
 " consisting of a random sequence of \[OpenCurlyDoubleQuote]A\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]C\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]G\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]T\
\[CloseCurlyDoubleQuote]. On the right hand side of your function definition, \
start with a ",
 StyleBox["With",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " that defines a local constant ",
 StyleBox["nucleotides",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " whose value is the 4-element list of strings ",
 StyleBox["{\[OpenCurlyDoubleQuote]A\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]C\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]G\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]T\[CloseCurlyDoubleQuote]}",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ". Inside the ",
 StyleBox["With",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ", use ",
 StyleBox["Module",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " to define a local variable ",
 StyleBox["output",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " where you collect the string to output in the end. Use ",
 StyleBox["Do",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " to make a loop that iterates ",
 StyleBox["n",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " times and on each iteration picks a random integer between 1 and 4 (using ",
 StyleBox["RandomInteger",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 "), uses it to access the corresponding element of the nucleotide list \
(remember double square brackets for accessing a list), and adds that element \
on to the end of the output string (look up the reference documentation for \
",
 StyleBox["StringJoin",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " and optionally read tutorial/OperationsOnStrings). Once you create the new \
string with the new nucleotide at the end, you\[CloseCurlyQuote]ll have to \
set ",
 StyleBox["output",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " to that new string to save it for the next iteration."
}], "Text",
 CellChangeTimes->{{3.583517679589593*^9, 3.5835177967167387`*^9}, {
  3.583517855353656*^9, 3.583518007882264*^9}, {3.583519558730073*^9, 
  3.583519649225787*^9}, {3.58358993213759*^9, 3.583590077850716*^9}, {
  3.583590121585725*^9, 3.583590192898291*^9}, {3.583590300107471*^9, 
  3.5835903324441433`*^9}, {3.5850044910540257`*^9, 3.585004493420622*^9}, {
  3.617818844405232*^9, 3.617818858380362*^9}, {3.6181349323753633`*^9, 
  3.618134985559901*^9}, {3.618136043952024*^9, 
  3.618136075941599*^9}},ExpressionUUID->"c5760eb0-49b0-4da3-9321-\
30b56faad8e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomDNA", "[", "n_", "]"}], ":=", 
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nucleotides", "=", 
      RowBox[{"{", 
       RowBox[{
       "\"\<A\>\"", ",", " ", "\"\<C\>\"", ",", " ", "\"\<G\>\"", ",", " ", 
        "\"\<T\>\""}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"output", "=", "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"output", " ", "=", " ", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"output", ",", " ", 
            RowBox[{"nucleotides", "[", 
             RowBox[{"[", 
              RowBox[{"RandomInteger", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", " ", "4"}], "}"}], "]"}], "]"}], "]"}]}], 
           "]"}]}], ",", " ", "n"}], "]"}], ";", "\[IndentingNewLine]", "  ", 
       "output"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQfUVw1tuLim8cnf46MF4C0p8FfdlBdGYiIz+Ibo1X
1gbRgnMidED0ccZtViC6QfC8DYheknTGDUSrPFntDqJ/XNnrD+Z7mAWB6Cta
oeEgms1bPwJEr1O0SQDRNSvfZoLobaHTS0F0tfd3MJ2yYV8l2JxKpioQ/Su8
pxFESxlad4No86NO/SD6kmo5mD6RfWMR2J3Zk5eC6D+8GntB9Lzz246B6L7J
ORdA9D/tR89A9L7ArtcgeuPrRd9A9KGH1SKXgfSyuZ2yINpQot4QRItUFlqB
6G+htfYgehpbmQuIBgALQpq2
  "],
 CellLabel->
  "In[218]:=",ExpressionUUID->"3a8be9e3-8319-4175-a46d-05aae0327ff4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomDNA", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.7758287038394337`*^9, 3.7758287090103207`*^9}, {
  3.775829136585637*^9, 3.7758291379380817`*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"b1b70c97-223b-4c2a-919d-63de1ad9f219"],

Cell[BoxData["\<\"CGACT\"\>"], "Output",
 CellChangeTimes->{
  3.7758295169124002`*^9, 3.775829726483407*^9, {3.7758298737523317`*^9, 
   3.775829881940467*^9}, {3.775829919615114*^9, 3.775829955975259*^9}, {
   3.775830187056381*^9, 3.7758302089942408`*^9}, {3.775830245680191*^9, 
   3.775830264334305*^9}, {3.7758304299626713`*^9, 3.7758304859243793`*^9}, 
   3.775830541439611*^9, 3.775830581893174*^9},
 CellLabel->
  "Out[219]=",ExpressionUUID->"f4e1440c-8b93-40e7-b5ab-bfa6eb0436ff"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Branching", "Subsection",
 CellChangeTimes->{{3.583508115068471*^9, 3.583508127537744*^9}, 
   3.5835132732886868`*^9, {3.5835133065487547`*^9, 
   3.583513313419819*^9}},ExpressionUUID->"db8c9005-a6af-413a-b632-\
2d814bdf7010"],

Cell[TextData[{
 "The only branching construct you are likely to need is ",
 StyleBox["If",
  FontFamily->"Courier"],
 ":"
}], "Text",
 CellChangeTimes->{{3.583591857036968*^9, 
  3.5835918854740553`*^9}},ExpressionUUID->"f5fee483-cde0-4441-9116-\
817f90db1946"],

Cell[BoxData[
 RowBox[{
  RowBox[{"takeoff", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", ">", "1"}], ",", 
    RowBox[{"x", "^", "3"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5835918928594418`*^9, 3.5835919488025837`*^9}, {
  3.58359200967343*^9, 3.5835920379009237`*^9}, {3.583592092351173*^9, 
  3.5835920926686277`*^9}, {3.617876706026178*^9, 3.617876706523731*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"284d21bb-0cfd-43a2-a02e-34a61dba932b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"takeoff", "[", "0.5", "]"}]], "Input",
 CellChangeTimes->{{3.5835919564897337`*^9, 3.583591972386897*^9}, {
  3.5835920525237226`*^9, 3.583592053950227*^9}, {3.583592103667612*^9, 
  3.58359210465126*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"3b9a5ea5-5c13-478d-b657-5819d1c233fc"],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{3.775830645586893*^9},
 CellLabel->
  "Out[221]=",ExpressionUUID->"d093523f-9b71-4267-87dd-e77acac3711a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"takeoff", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.583591975384322*^9, 3.58359198248238*^9}, {
  3.583592061149267*^9, 3.583592064380733*^9}, {3.583592109789077*^9, 
  3.583592110058578*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"9bf8d3e3-a1e5-4683-ace9-4c116e01dff1"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.775830647492569*^9},
 CellLabel->
  "Out[222]=",ExpressionUUID->"5f46ce5a-6ff6-4f5d-a1f9-b07c12ad267e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"takeoff", "[", "1.5", "]"}]], "Input",
 CellChangeTimes->{{3.583591984383312*^9, 3.583591990492013*^9}, {
  3.583592072060067*^9, 3.583592078340538*^9}, {3.5835921155721693`*^9, 
  3.583592115786072*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"d3445918-37b0-410b-8e8b-5961d45f5495"],

Cell[BoxData["3.375`"], "Output",
 CellChangeTimes->{3.7758306503791656`*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"c3027dcb-d9ce-406c-bd2a-1763dbfa5c36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"takeoff", "[", "y", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", " ", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.583592119698324*^9, 3.583592181324089*^9}, {
  3.6178767377719393`*^9, 3.617876738122815*^9}},
 CellLabel->
  "In[224]:=",ExpressionUUID->"281a241c-b36a-48dd-92f6-6b41ba095dbc"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxFxVtMUgEYAGB0zBIby5LUCifGyDJNmeQlN30wGMq8kGZrhbOZZhZutbkS
y1mavGiRZbk0ErdatVVeKs8ypUBTknlDpsYQGTo8Q6Hmyqlh9eD/P3z7WGdL
xOc8KRQK/5//90lYMxsbzt7NOb94otIVXF6bQjhcuKj7Sv3ULD4W2C/o0OAW
w4W3BTX4ekpnpZ6OR8cI2I+ZS3BSr++MaocDPvz0+RPxQRK+3/JM3pBqhxvE
KXZ+8jxcdpoQKXNt8BpDz8kXW+GfTmHYpzQL/PAYu6j8uwm+RXMX5AxMwrxK
qfTmqgEej23TTSSOwtnKMjb1vA6+G6nuX5/+AssoURVpOe/gPXUvt+9kPIBf
2zxavEtaEzdP99nSRa4QcGNEY4L8nhb2D2ziL+iGYHPS9fFy6Rh8UcNYjeYa
YfV8Ps9PMA2nn2QWtu4yw9e0HiHVCxY4PHxkt8hlhd0J4/Rigw3mNkfVMmfn
YZeJM3vUZoeHNBmR7VoS9lmb8O7WO+Aqa6giewJ3D8oCnCbc9Yi1P8SBG49c
SpbTFmHVZWpFlgCPI7nLDjXePlotuz2AHyImPYNH8CD5Dd/jMziVo4sg/uAj
eXlF1fFLcOHUHTOzE5fsjWMoPuIncq2pVA3On4smyFGc/WOq/oMTt2xlCzPD
nPBkqr5Cy8WH60rfx8TjPX6D+4KEeHOw1E0W4KdiuzqqVLhYlkf+foELe2is
4jY8NvlMXaYaj6zx6tN+xUN1b9ZihnH/DM+iIDNOr3+lVMzhXsYsI3URdwe4
t11dxiVpn78dWMH/AltTWo4=
        "]], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA0VgfGusD8D98RZMvxAvwP26S0XMi
CfA/21qUA3cb8D/qMyYP3AzwP7g/fTezJvA/ZtV6qpUQ8D+e9qij9DHwP+J2
z0VPFPA/BqBNSTs98D/ZuXh8whvwPzBM2kXYU/A/yD/L6agq8D8Cl+wlUYHw
P6ZLcMR1SPA/mV5RkT/d8D/Co9mGgEzwP4u8nsTR6fA/3/tCSYtQ8D/IF6o1
avbwPxisFc6gWPA/m7Mr160P8T+KDLvXy2jwP4f/MEOAQvE/b80F6yGJ8D/m
3vcZU6nxPzhPmxHOyfA/RG8WmLt78j/LUsZeJkvxPwFzlIPuM/Q/f6229oI8
8j/HtWgDybD3P2Sw1FMpQvM/VrQP5bfm+z/YBo2uezb0P8ODVPkOIQBAEc0Q
9AMm9T/UMXF1bXkCQHw7wv7VKfY/H16MDYdDBUB1/Q0HVBz3P8QtIca6GwhA
oGeH1Bsj+D9P3i+YK3cLQJBBzIwZJfk/19yuEycND0AOb6tCwxX6Pz7JoNI9
VRFAvkS4vbYa+z80J0tPBnITQP1tXzZWDvw/c3wq5P6QFUABB9KZK/38P54q
YNtHyhdANkhywkoA/j9Mjp4gxV4aQPrcrOgV8v4/gRiowaTwHEBEbMiQTfb+
P16/ump7/BxAjfvjOIX6/j/SoN1NVQgdQCAaG4n0Av8/qCcWxBIgHUBHV4kp
0xP/P+PRoHy0Tx1AlNFlapA1/z9w/5CAk68dQC7GHuwKef8/VPZ/58JxHkB4
VTqUQn3/P6+vm6wBfh5AweRVPHqB/z+dRNi5Q4oeQFQDjYzpif8/XxV2rtGi
HkB7QPssyJr/P1DfkgwV1B5AyLrXbYW8/z++e8X+OTcfQBJK8xW9wP8/Nkqt
eq1DH0Bc2Q6+9MT/P8FEvkUkUB9A7/dFDmTN/z800h3LG2kfQBY1tK5C3v8/
dtshnzKbH0BgxM9WeuL/P3OXoaDApx9AqVPr/rHm/z/Ap870UbQfQDxyIk8h
7/8/etnyln7NH0CGAT73WPP/P/cEy+UZ2h9A0JBZn5D3/z/omBKJuOYfQBog
dUfI+/8/VRo6gVrzH0Bjr5Dv////P0IOss7//x9A6VCTDg==
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$76504#1"]& ], {}}, {{}, {}}, {{}, {}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 2}, {-0.9999999387755102, 7.999999265306146}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.775830657425907*^9},
 CellLabel->
  "Out[224]=",ExpressionUUID->"faa2d534-1730-434c-a68d-3afd49efdae2"]
}, Open  ]],

Cell[TextData[{
 "Unlike other ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " functions, the arguments to ",
 StyleBox["If",
  FontFamily->"Courier"],
 " are not all evaluated first and then passed in to ",
 StyleBox["If",
  FontFamily->"Courier"],
 ". Only the first argument is evaluated -- if it returns ",
 StyleBox["True",
  FontFamily->"Courier"],
 " the second argument is evaluated and its value is returned, but the third \
argument is never evaluated. If it returns ",
 StyleBox["False",
  FontFamily->"Courier"],
 ", the third argument is evaluated but the second is not. If the arguments \
are expressions whose evaluation has side effects, like those involving \
Print, the side effects will not occur as they would in arguments to a normal \
function:"
}], "Text",
 CellChangeTimes->{{3.5835927507863827`*^9, 
  3.5835929801457853`*^9}},ExpressionUUID->"fe2f94d5-8290-43ca-821a-\
8e7c3e4facad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"3", ">", "7"}], ",", " ", 
   RowBox[{"Print", "[", "\"\<It is!\>\"", "]"}], ",", " ", 
   RowBox[{"Print", "[", "\"\<It isn't!\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5835929836539927`*^9, 3.583593031986656*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"b3dda451-1a64-45b3-81ec-9da92f0eef29"],

Cell[BoxData["\<\"It isn't!\"\>"], "Print",
 CellChangeTimes->{3.775830684924762*^9},
 CellLabel->
  "During evaluation of \
In[225]:=",ExpressionUUID->"37d913ad-2c7b-4494-b50b-479148a2544c"]
}, Open  ]],

Cell[TextData[{
 "In peculiar ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " style, an ",
 StyleBox["If",
  FontFamily->"Courier"],
 " expression whose first argument does not evaluate to either ",
 StyleBox["True",
  FontFamily->"Courier"],
 " or ",
 StyleBox["False",
  FontFamily->"Courier"],
 " remains unevaluated:"
}], "Text",
 CellChangeTimes->{{3.583592231812726*^9, 3.583592303290517*^9}, {
  3.5835931737659187`*^9, 
  3.583593188970536*^9}},ExpressionUUID->"425aef58-5832-4dd8-be6e-\
6aa49e0d49ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"z", ">", "10"}], ",", "1", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.583592322590314*^9, 3.583592336772087*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"b2a1dca7-9202-4ad8-b8b4-26b8cc8fabc8"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"z", ">", "10"}], ",", "1", ",", "0"}], "]"}]], "Output",
 CellChangeTimes->{3.7758306936939287`*^9},
 CellLabel->
  "Out[226]=",ExpressionUUID->"8eb5d395-fc9d-435d-8f3f-1ce782c015ef"]
}, Open  ]],

Cell[TextData[{
 "Since ",
 StyleBox["z",
  FontFamily->"Courier"],
 " is not defined the whole expression remains unevaluated. If you provide If \
with a fourth argument, it will evaluate that in case the first argument \
doesn\[CloseCurlyQuote]t yield a Boolean:"
}], "Text",
 CellChangeTimes->{{3.58359234196377*^9, 3.583592451065941*^9}, {
  3.583592501334112*^9, 3.583592506857657*^9}, {3.584470669331595*^9, 
  3.584470669899815*^9}},ExpressionUUID->"e803fa59-5295-4002-8b58-\
4cfafa13698e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"z", ">", "10"}], ",", "1", ",", "0", ",", " ", 
   RowBox[{"Print", "[", "\"\<Error! z is not defined.\>\"", "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.583592322590314*^9, 3.583592336772087*^9}, {
  3.5835924552619457`*^9, 3.583592488420425*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"2307993f-fb52-4d39-b4b4-fa35cb9970ca"],

Cell[BoxData["\<\"Error! z is not defined.\"\>"], "Print",
 CellChangeTimes->{3.775830707064591*^9},
 CellLabel->
  "During evaluation of \
In[227]:=",ExpressionUUID->"3aad0393-3bfb-4d4d-aaaf-3e4c594fbded"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Practice: Using ",
 StyleBox["If",
  FontFamily->"Courier",
  FontWeight->"Plain"]
}], "Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
  3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
  3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, {
  3.58342604161637*^9, 3.58342604629023*^9}, {3.583498856500457*^9, 
  3.5834988629059267`*^9}, {3.583505142291054*^9, 3.5835051472415533`*^9}, {
  3.583512441172587*^9, 3.5835124550655746`*^9}, {3.583514468298832*^9, 
  3.583514469463975*^9}, {3.583517624331842*^9, 3.583517631065776*^9}, {
  3.583519420630145*^9, 3.583519422650053*^9}, {3.583593252177696*^9, 
  3.5835932568982153`*^9}},ExpressionUUID->"8858ca86-db85-45f7-8d67-\
2d8bb17a6545"],

Cell[TextData[{
 "Write a function called ",
 StyleBox["reverseString",
  FontFamily->"Courier"],
 " that takes a single argument, tests whether it is a string (see ",
 StyleBox["StringQ",
  FontFamily->"Courier"],
 "), if so returns its reverse (see ",
 StyleBox["StringReverse",
  FontFamily->"Courier"],
 "), and if not prints an error message. Demonstrate your function on both a \
multi-character string and a non-string. ",
 "\[FilledSquare]"
}], "Text",
 CellChangeTimes->{{3.583593249427387*^9, 3.583593249705818*^9}, {
  3.583593687876289*^9, 
  3.583593808631219*^9}},ExpressionUUID->"b22d2cd1-71c9-4472-86ee-\
d084d168476d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "StringQ"}]], "Input",
 CellChangeTimes->{{3.77583078733744*^9, 3.775830791408526*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"ce6c9128-7045-45ca-a811-0e1960858ec8"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/StringQ",
              ButtonNote->"paclet:ref/StringQ"],
             "\"paclet:ref/StringQ\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StringQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a string, and False \
otherwise.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/StringQ", 
                    "paclet:ref/StringQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/StringQ.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/StringQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`StringQ\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{16., {5., 11.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{16., {5., 11.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/StringQ",
              ButtonNote->"paclet:ref/StringQ"],
             "\"paclet:ref/StringQ\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StringQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a string, and False \
otherwise.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{13., {3., 10.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{13., {3., 10.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"StringQ\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\) \
gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a string, and False \
otherwise.", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/StringQ", "Web" -> 
      "http://reference.wolfram.com/language/ref/StringQ.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "System`StringQ"], False]]], "Output",
 CellChangeTimes->{3.7758307920052137`*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"1a76d069-865f-45e9-8dcd-2e8ac139f468"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"reverseString", "[", "possibleString_", "]"}], ":=", " ", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StringQ", "[", "possibleString", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"StringReverse", "[", "possibleString", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "\"\<Error, not a string\>\"", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.77583072148273*^9, 3.775830869728526*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"8389732a-6426-4d81-ae25-6cd3178b1b98"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reverseString", "[", "\"\<hello\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.77583087650102*^9, 3.775830885479937*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"91d73ad3-e223-4b43-a356-2f6735075a0d"],

Cell[BoxData["\<\"olleh\"\>"], "Output",
 CellChangeTimes->{3.7758308860136423`*^9},
 CellLabel->
  "Out[230]=",ExpressionUUID->"d9f8d2d7-ddec-45b9-98b8-66862919e17a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reverseString", "[", "12345", "]"}]], "Input",
 CellChangeTimes->{{3.7758308906385508`*^9, 3.77583090981721*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"d219e33e-625a-4e41-8acc-51df838efc88"],

Cell[BoxData["\<\"Error, not a string\"\>"], "Print",
 CellChangeTimes->{3.775830910852037*^9},
 CellLabel->
  "During evaluation of \
In[231]:=",ExpressionUUID->"189b6d47-3f9e-43be-a93c-17683bc66d6f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reading and writing to a file", "Subsection",
 CellChangeTimes->{{3.5835081568402576`*^9, 3.583508159041904*^9}, {
  3.583594357692997*^9, 
  3.583594362514318*^9}},ExpressionUUID->"13e3693e-d9c2-4ad3-bf18-\
b933f0936634"],

Cell["\<\
At first, you\[CloseCurlyQuote]ll probably do a lot of simple code testing \
through the notebook interface, but when it comes to real data, you\
\[CloseCurlyQuote]ll need to read and write files. Let\[CloseCurlyQuote]s \
start with writing. \
\>", "Text",
 CellChangeTimes->{{3.583593838284127*^9, 
  3.583593873137949*^9}},ExpressionUUID->"776da484-f736-4748-9cb0-\
db8c286d46a2"],

Cell[CellGroupData[{

Cell["Incorporated reading", "Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
  3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
  3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, {
  3.58342604161637*^9, 3.58342604629023*^9}, {3.583498856500457*^9, 
  3.5834988629059267`*^9}, {3.583505142291054*^9, 3.5835051472415533`*^9}, {
  3.583512441172587*^9, 3.5835124550655746`*^9}, {3.58351378178043*^9, 
  3.583513789745801*^9}},ExpressionUUID->"338f101e-8687-4c12-8556-\
101b14ef854d"],

Cell[CellGroupData[{

Cell[TextData[{
 "Read the documentation page ",
 StyleBox["tutorial/ReadingAndWritingWolframSystemFiles",
  FontSlant->"Italic"],
 " up to and including the section \[OpenCurlyDoubleQuote]Saving Definitions \
of ",
 StyleBox["Wolfram Language",
  FontSlant->"Italic"],
 " Objects\[CloseCurlyDoubleQuote].  When you get to \
\[OpenCurlyDoubleQuote]Saving ",
 StyleBox["Wolfram Language",
  FontSlant->"Italic"],
 " Definitions in Encoded Form\[CloseCurlyDoubleQuote] you can abort your \
read."
}], "Item",
 CellChangeTimes->{{3.58504961516019*^9, 3.585049623311686*^9}, {
  3.681495280872357*^9, 
  3.6814953135642014`*^9}},ExpressionUUID->"21308635-4e50-411e-9a40-\
f4f135ce637a"],

Cell[TextData[{
 " Read ",
 StyleBox["tutorial/NamingAndFindingFiles",
  FontSlant->"Italic"],
 ". This is kind of long and you can read quickly through some of the latter \
parts. The important thing is to know what\[CloseCurlyQuote]s in this \
tutorial so you can come back to it later when you need to work with files \
more."
}], "Item",
 CellChangeTimes->{{3.58504961516019*^9, 
  3.585049687153483*^9}},ExpressionUUID->"e3db703f-4eb5-4a9c-a11e-\
5c61c1371736"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Practice: Reading and writing expressions", "Subsubsubsection",
 CellChangeTimes->{{3.583175578135281*^9, 3.583175585252611*^9}, {
  3.583237215724431*^9, 3.583237230152749*^9}, {3.583237385305098*^9, 
  3.583237408360573*^9}, {3.583350266707965*^9, 3.5833502680112123`*^9}, {
  3.58342604161637*^9, 3.58342604629023*^9}, {3.583498856500457*^9, 
  3.5834988629059267`*^9}, {3.583505142291054*^9, 3.5835051472415533`*^9}, {
  3.583512441172587*^9, 3.5835124550655746`*^9}, {3.583514468298832*^9, 
  3.583514469463975*^9}, {3.583517624331842*^9, 3.583517631065776*^9}, {
  3.583519420630145*^9, 3.583519422650053*^9}, {3.583593252177696*^9, 
  3.5835932568982153`*^9}, {3.583594412524489*^9, 
  3.583594418409972*^9}},ExpressionUUID->"1002f113-ad74-4dd2-b4ec-\
c8936038a73f"],

Cell[TextData[{
 "The functions ",
 StyleBox["Put",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " (equivalent to ",
 StyleBox[">>",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ") and ",
 StyleBox["Get",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " (equivalent to ",
 StyleBox["<<",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ") exchange expressions with files. Since everything in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is an expression, you can read and write anything this way. Copy the code \
you wrote for generating a random DNA sequence, paste it into a new cell \
below this one, and modify it to take a second argument which will specify a \
directory path. (If you don\[CloseCurlyQuote]t know how to specify directory \
paths as strings on your system, use the menu sequence ",
 StyleBox["Insert->File Path",
  FontSlant->"Italic"],
 " and select a file to see its pathname.) Each time you call the new \
function, it should either create the file specified in the input path and \
put the new random DNA sequence into it (this is what happens if the file \
does not yet exist) or, if there is already a file by that name, it should \
read in the file assuming that the contents is a DNA sequence represented as \
a string, generate a new sequence, append the new sequence on to the end of \
the old one, and write the new sequence back out again. Test whether the file \
specified by the path argument exists using ",
 StyleBox["FileExistsQ",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ".  If so, use ",
 StyleBox["Get",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " (which returns the value of the last expression in the file) to initialize \
your DNA string. Then generate ",
 StyleBox["n",
  FontFamily->"Courier"],
 " random DNA letters, adding them on to the end of the string you read in. \
Finally, write out the new string to the filename provided using ",
 StyleBox["Put",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 ", which will create the file if it doesn\[CloseCurlyQuote]t exist. ",
 StyleBox["Put",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " will also overwrite whatever was in the file before, which in this case is \
what you want. Demonstrate that your program works by calling it twice with \
the same filename, adding 5 letters the first time and 7 second. Note that \
the only thing you are reading and writing to files is the DNA sequence -- \
the code can sit in a new cell write below this one."
}], "Text",
 CellChangeTimes->{{3.583594432874387*^9, 3.58359446158661*^9}, {
   3.583594499729988*^9, 3.583594562969483*^9}, {3.583594668236843*^9, 
   3.583594681929487*^9}, {3.583594728114304*^9, 3.5835947299622583`*^9}, {
   3.583594763634069*^9, 3.5835947831460257`*^9}, {3.583595228593663*^9, 
   3.583595391154196*^9}, {3.583595687656233*^9, 3.5835957143211803`*^9}, {
   3.583595860851985*^9, 3.583596053730402*^9}, {3.583596124167262*^9, 
   3.5835961352031307`*^9}, {3.583596229181991*^9, 3.583596293850377*^9}, 
   3.584447212460146*^9, {3.584448244439622*^9, 3.584448260444366*^9}, {
   3.617877027471283*^9, 3.617877027770522*^9}, {3.6181361746972513`*^9, 
   3.61813651144776*^9}, {3.647619776670013*^9, 3.647619777238092*^9}, {
   3.712587038138937*^9, 
   3.712587057003901*^9}},ExpressionUUID->"75e5a849-9cf4-4630-bcef-\
4cc31c006379"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"randomDNA", "[", 
    RowBox[{"n_", ",", " ", "filepath_"}], "]"}], ":=", 
   RowBox[{"With", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nucleotides", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<A\>\"", ",", " ", "\"\<C\>\"", ",", " ", "\"\<G\>\"", ",", " ", 
         "\"\<T\>\""}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"output", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FileExistsQ", "[", "filepath", "]"}], ",", 
           RowBox[{"Get", "[", "filepath", "]"}], ",", "\"\<\>\""}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"output", " ", "=", " ", 
           RowBox[{"StringJoin", "[", 
            RowBox[{"output", ",", " ", 
             RowBox[{"nucleotides", "[", 
              RowBox[{"[", 
               RowBox[{"RandomInteger", "[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", " ", "4"}], "}"}], "]"}], "]"}], "]"}]}], 
            "]"}]}], ",", " ", "n"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Put", "[", 
         RowBox[{"output", ",", " ", "filepath"}], "]"}], ";", 
        "\[IndentingNewLine]", "output"}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.775831102812118*^9, 3.7758311157780647`*^9}, {
   3.7758312722743797`*^9, 3.775831317312873*^9}, {3.775831349412292*^9, 
   3.7758314081151123`*^9}, {3.775831487247326*^9, 3.7758315762686167`*^9}, {
   3.775831932086718*^9, 3.7758319596203413`*^9}, {3.775832023348021*^9, 
   3.775832123829628*^9}, {3.775832154316976*^9, 3.775832218652923*^9}, {
   3.775832573028049*^9, 3.775832577515399*^9}, {3.775832629642198*^9, 
   3.775832647156823*^9}, 3.775832684008799*^9},
 CellLabel->
  "In[258]:=",ExpressionUUID->"9fb30d2a-376f-43c0-8486-b66a1ad8976e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomDNA", "[", 
  RowBox[{
  "5", ",", " ", 
   "\"\</Users/estorrs/Documents/cse_587a/sandbox/randomDNA.txt\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.775831971269421*^9, 3.77583198325826*^9}},
 CellLabel->
  "In[259]:=",ExpressionUUID->"96b99e3f-78c7-4696-94a1-45035e1d13ab"],

Cell[BoxData["\<\"CCCTT\"\>"], "Output",
 CellChangeTimes->{3.775832710239176*^9},
 CellLabel->
  "Out[259]=",ExpressionUUID->"7ce71def-140c-46a5-9a0b-d11fe61991a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomDNA", "[", 
  RowBox[{
  "7", ",", " ", 
   "\"\</Users/estorrs/Documents/cse_587a/sandbox/randomDNA.txt\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.775832584241963*^9, 3.7758325843209057`*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"0dbe889f-6b51-40fd-95e4-f14d782d8b29"],

Cell[BoxData["\<\"CCCTTATGGACC\"\>"], "Output",
 CellChangeTimes->{3.775832713083475*^9},
 CellLabel->
  "Out[260]=",ExpressionUUID->"e2f1a0a6-b366-493a-9378-3ce7d315ddd4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Syntax Coloring", "Subsection",
 CellChangeTimes->{{3.5844525813905487`*^9, 
  3.584452583990345*^9}},ExpressionUUID->"090cab0c-69ba-43aa-8e7d-\
7dfd586b30a2"],

Cell["\<\
Mathematica\[CloseCurlyQuote]s syntax coloring can often help you spot syntax \
errors.  

Undefined variables are colored dark blue:\
\>", "Text",
 CellChangeTimes->{{3.584452593663124*^9, 3.5844526425108137`*^9}, {
  3.584452844181183*^9, 3.584452845020204*^9}, {3.7125871823228188`*^9, 
  3.712587183114316*^9}},ExpressionUUID->"494dfca7-c967-423f-af38-\
e8c08636deb0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tabel", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "10"}]}]}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"The", " ", "function"}], ",", " ", "Tabel", ",", " ", 
    RowBox[{"is", " ", "colored", " ", "blue", " ", "because", " ", "it", " ", 
     RowBox[{"undefined", ".", "  ", "Tabel"}], " ", "is", " ", "probably", 
     " ", "a", " ", 
     RowBox[{"typo", "."}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{3.584471142431849*^9},
 EmphasizeSyntaxErrors->True,
 CellLabel->
  "In[261]:=",ExpressionUUID->"157bd667-adaf-4285-afdd-9a43b2c509ec"],

Cell[TextData[{
 "(Note: This cell won\[CloseCurlyQuote]",
 StyleBox["t evaluate because the square brackets are not balanced, not \
because of the undefined variables.) Defined variables are colored black.  \
(Aside -- many of the variables in input cells in this notebook will appear \
blue even though they have been defined in previous input cells. That\
\[CloseCurlyQuote]s because cells are not evaluated by default when a \
notebook is loaded.) Once a variable is defined, ",
  FontColor->GrayLevel[0]],
 StyleBox["all",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox[" instances of the variable in the notebook will be defined and \
colored black.",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.71258713823377*^9, 3.712587188163456*^9}, {
  3.712587239734886*^9, 3.7125873114710093`*^9}, {3.712587341919736*^9, 
  3.712587342820632*^9}},ExpressionUUID->"1cf20387-08b6-46c2-b18b-\
2cc93ff1f6d5"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.584452893289674*^9, 3.584452904448132*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->
  "In[261]:=",ExpressionUUID->"d3eeab1a-b261-4069-ae94-6f89e97bbacc"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notes missing arguments with a red carrot:"
}], "Text",
 CellChangeTimes->{{3.584452931747706*^9, 3.584452954196576*^9}, {
  3.584471026443902*^9, 3.584471027620002*^9}, {3.617877676791231*^9, 
  3.617877701615237*^9}},ExpressionUUID->"0b08e300-a66b-4e9d-8042-\
f7ebde8086d2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.584452939717114*^9, 3.584452947158801*^9}},
 CellLabel->
  "In[261]:=",ExpressionUUID->"3a818f82-40cd-491f-a78b-2e6fc823fb5b"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{3.584452947748825*^9, 3.584468219665874*^9, 
  3.584468489477972*^9, 3.584471865583605*^9, 3.775832761591977*^9},
 CellLabel->
  "Out[261]=",ExpressionUUID->"971765de-3f7b-4db9-be79-9dce098be3a0"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " highlights extra arguments in red:"
}], "Text",
 CellChangeTimes->{{3.584452969228348*^9, 3.58445297393468*^9}, {
  3.584471020318222*^9, 3.584471022548151*^9}, {3.6178777090639668`*^9, 
  3.6178777162791357`*^9}},ExpressionUUID->"6e1c0722-3307-4011-bf4f-\
9013a01a105a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"x", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.584452977510995*^9, 3.584452996927787*^9}},
 CellLabel->
  "In[262]:=",ExpressionUUID->"63d6d8a0-aef2-4aff-a882-8304e12755af"],

Cell[BoxData[
 TemplateBox[{
  "Length","argx",
   "\"\\!\\(\\*RowBox[{\\\"Length\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"2\
\\\"}]\\) arguments; 1 argument is expected.\"",2,262,136,
   32239500842119901609,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.5844529976188107`*^9, 3.584468219750704*^9, 
  3.584468489524403*^9, 3.584471865635549*^9, 3.775832765921781*^9},
 CellLabel->
  "During evaluation of \
In[262]:=",ExpressionUUID->"afbefe70-c2e0-4800-ae32-15d955992729"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"x", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{3.77583276787046*^9},
 CellLabel->
  "In[263]:=",ExpressionUUID->"dd52b43a-7fa1-4d9f-b2f1-72f18dfd27d5"],

Cell[BoxData[
 TemplateBox[{
  "Length","argx",
   "\"\\!\\(\\*RowBox[{\\\"Length\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"2\
\\\"}]\\) arguments; 1 argument is expected.\"",2,263,137,
   32239500842119901609,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.775832767928668*^9},
 CellLabel->
  "During evaluation of \
In[263]:=",ExpressionUUID->"d87be726-38e2-4aaf-a661-46317dc2e3f7"],

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"x", ",", "1"}], "]"}]], "Output",
 CellChangeTimes->{3.775832767937283*^9},
 CellLabel->
  "Out[263]=",ExpressionUUID->"16c58e8f-95ac-4e36-9a0a-c15540f7f00f"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " highlights arguments of user-defined functions in green:"
}], "Text",
 CellChangeTimes->{{3.584453020932613*^9, 3.5844530332359753`*^9}, {
  3.584471063885538*^9, 3.584471064860277*^9}, {3.61787772603329*^9, 
  3.617877727654711*^9}},ExpressionUUID->"d33e0f95-3ecf-472f-840b-\
b856ee7e8bf6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", " ", 
  RowBox[{"x", "^", "2"}]}]], "Input",
 CellChangeTimes->{{3.584453034937583*^9, 3.584453040012398*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"7ae4bfcb-343e-4dff-962d-2731b9d2dd4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aborting calculations", "Subsection",
 CellChangeTimes->{{3.584452958765066*^9, 3.584452963503364*^9}, {
  3.584453162736266*^9, 
  3.584453173139114*^9}},ExpressionUUID->"047d6522-5d08-4b8f-bbb2-\
66ce926a29ce"],

Cell[TextData[{
 "To abort a calculation, on the menu select ",
 StyleBox["Evaluation -> Abort Calculation",
  FontSlant->"Italic"],
 ".  If this doesn\[CloseCurlyQuote]t work, try ",
 StyleBox["Evaluation -> Quit Kernel/Local",
  FontSlant->"Italic"],
 ".  This will stop the kernel, but it will not close your notebook.  To \
restart the kernel, evaluate a cell in the notebook.  A third option is to \
quit Mathematica; however, all unsaved changes will be lost."
}], "Text",
 CellChangeTimes->{{3.58445318156131*^9, 3.5844533254012423`*^9}, {
  3.585006023184924*^9, 
  3.5850060240873337`*^9}},ExpressionUUID->"b0eeeefd-6ee3-4436-a5dd-\
220a96ab1749"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1028, 805},
WindowMargins->{{Automatic, 10}, {Automatic, 0}},
ShowSelection->True,
CellLabelAutoDelete->False,
Magnification->1.25,
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Code"]]}, Visible -> False, FrontEndVersion -> 
  "12.0 for Mac OS X x86 (64-bit) (April 8, 2019)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3617776617-3499402"->{
  Cell[44644, 1056, 3917, 61, 198, "Print",ExpressionUUID->"a43925ff-8dc3-4f77-b056-14068c1d2298",
   CellTags->"Info3617776617-3499402"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3617776617-3499402", 180594, 4670}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 131, 3, 37, "Input",ExpressionUUID->"f4e321e7-8a3f-4112-8a72-e114f44ce6fb"],
Cell[CellGroupData[{
Cell[714, 27, 224, 7, 123, "Title",ExpressionUUID->"211e0997-10db-4dba-a9ac-db9007c81901"],
Cell[CellGroupData[{
Cell[963, 38, 177, 3, 84, "Section",ExpressionUUID->"e951116b-52c3-4fb9-8836-08d22bccf70b"],
Cell[1143, 43, 492, 9, 102, "Text",ExpressionUUID->"f2fc3daa-9c0d-4025-b38c-2c89ecc4b2d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1672, 57, 164, 3, 84, "Section",ExpressionUUID->"49f11fa7-3dbe-4560-97fc-c9b239e1bd76"],
Cell[CellGroupData[{
Cell[1861, 64, 156, 3, 67, "Subsection",ExpressionUUID->"f5620567-e392-44cc-9763-2fd139e83424"],
Cell[2020, 69, 792, 14, 188, "Text",ExpressionUUID->"3d07da31-e372-49dc-ad10-eae3ef3376d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2849, 88, 366, 9, 67, "Subsection",ExpressionUUID->"a47ab05f-f86b-4f8e-bbd9-825f8ddce9cf"],
Cell[3218, 99, 2403, 51, 246, "Text",ExpressionUUID->"d73dea62-a679-4216-b56e-6a0573061183"],
Cell[CellGroupData[{
Cell[5646, 154, 216, 6, 37, "Input",ExpressionUUID->"50a84a43-4f2c-408f-aa08-b8710ecbb95b"],
Cell[5865, 162, 288, 7, 42, "Output",ExpressionUUID->"3b079450-b54e-446a-a647-dfb35dde8b22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6190, 174, 393, 12, 37, "Input",ExpressionUUID->"4d35e9fc-03e1-4660-8a34-8aa2bef854bd"],
Cell[6586, 188, 7691, 145, 300, "Output",ExpressionUUID->"44352505-bd0e-4b9d-941a-c6f5b711a7d6"]
}, Open  ]],
Cell[14292, 336, 1252, 25, 159, "Text",ExpressionUUID->"ed2a9c1d-76c5-409e-b769-6d1eab95b646"],
Cell[CellGroupData[{
Cell[15569, 365, 253, 7, 37, "Input",ExpressionUUID->"10e403b7-f49f-4808-8e5b-8950145136a3"],
Cell[15825, 374, 249, 5, 43, "Output",ExpressionUUID->"1acf2e01-9cc5-4bb9-b1f2-41c963ab9188"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16111, 384, 246, 6, 41, "Input",ExpressionUUID->"f264a156-b090-4ec7-811e-e9b66c445421"],
Cell[16360, 392, 266, 7, 42, "Output",ExpressionUUID->"fd6dabe4-e9c5-4467-84d1-46c32e377e68"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16663, 404, 464, 8, 41, "Subsubsubsection",ExpressionUUID->"c384d41d-25d6-4b91-a177-e6d35bd71d72"],
Cell[17130, 414, 3161, 74, 332, "Text",ExpressionUUID->"917da560-9ef5-4b25-be40-0ac8945c73c9"],
Cell[CellGroupData[{
Cell[20316, 492, 299, 6, 37, "Input",ExpressionUUID->"fef238ce-88a5-4a17-a651-10829faac1eb"],
Cell[20618, 500, 264, 7, 42, "Output",ExpressionUUID->"e2bd6e60-57d3-4b3e-b949-17355946c2a7"]
}, Open  ]],
Cell[20897, 510, 274, 6, 44, "Text",ExpressionUUID->"f654b36c-f761-4a97-af18-477c113db8e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21208, 521, 482, 8, 41, "Subsubsubsection",ExpressionUUID->"f099f445-e0bd-4332-9e92-e9eccc81a9c8"],
Cell[21693, 531, 828, 15, 102, "Text",ExpressionUUID->"7c1c35fd-9053-4f22-879b-953648025da9"],
Cell[CellGroupData[{
Cell[22546, 550, 1073, 17, 172, "ItemNumbered",ExpressionUUID->"01ffee48-3d7e-4598-ad40-7489fdd17d1b"],
Cell[23622, 569, 704, 13, 67, "ItemNumbered",ExpressionUUID->"ada033ab-8a09-4707-8821-f3a36e9c9e07"],
Cell[24329, 584, 910, 18, 93, "ItemNumbered",ExpressionUUID->"8dee411b-0917-41b3-8d6a-ff1cdf105704"],
Cell[25242, 604, 650, 15, 67, "ItemNumbered",ExpressionUUID->"7b36a254-e13a-4013-8293-8eb2f65c2b19"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25953, 626, 176, 3, 67, "Subsection",ExpressionUUID->"4cf870a1-2da9-4a26-bf14-57d363afb5ee"],
Cell[26132, 631, 3501, 69, 533, "Text",ExpressionUUID->"611c0c51-096d-4ba4-b207-4933afae9811"],
Cell[CellGroupData[{
Cell[29658, 704, 380, 6, 41, "Subsubsubsection",ExpressionUUID->"6e00bed1-c212-4385-bb2d-d19c05756d06"],
Cell[30041, 712, 712, 16, 73, "Text",ExpressionUUID->"8ed6bdbe-b12b-40d3-8e59-730a870c4846"],
Cell[CellGroupData[{
Cell[30778, 732, 534, 11, 37, "Input",ExpressionUUID->"e2c11ca2-3514-4216-97be-95f11988c487"],
Cell[31315, 745, 425, 8, 42, "Output",ExpressionUUID->"d5dd4fb6-2fa1-4f7e-912c-d7debda84fc5"]
}, Open  ]],
Cell[31755, 756, 310, 4, 44, "Text",ExpressionUUID->"be488032-8e24-404a-83dd-4b163d848125"],
Cell[32068, 762, 2249, 54, 246, "Text",ExpressionUUID->"36bbd998-1d9e-45bb-862b-b8f7c18d235a"],
Cell[34320, 818, 491, 9, 131, "Text",ExpressionUUID->"6ba3a706-aa1e-4827-b010-89a3d7da1b32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34848, 832, 420, 6, 41, "Subsubsubsection",ExpressionUUID->"14aad8f5-d57c-4146-b497-db6e199674db"],
Cell[35271, 840, 461, 8, 64, "Input",ExpressionUUID->"1ff1ec24-2d97-4842-8c0a-841cb03e477b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35793, 855, 374, 9, 84, "Section",ExpressionUUID->"b14fc5f4-560e-456c-9262-1f5557a16aac"],
Cell[36170, 866, 1937, 32, 332, "Text",ExpressionUUID->"33d39dfb-32d4-4e76-874b-1c0d9771f893"],
Cell[CellGroupData[{
Cell[38132, 902, 705, 15, 93, "Item",ExpressionUUID->"0915695c-e601-44cb-87b2-0158d3af9d67"],
Cell[38840, 919, 613, 13, 93, "Item",ExpressionUUID->"2934ba54-4a6a-4e76-bdda-1e8fe1c5108b"],
Cell[39456, 934, 388, 9, 40, "Item",ExpressionUUID->"9aa6fdf6-1c02-4ebd-aff5-80c71e26ba4d"],
Cell[39847, 945, 1242, 24, 93, "Item",ExpressionUUID->"f437c261-c00c-4d1c-aba3-6816afdf01ff"],
Cell[CellGroupData[{
Cell[41114, 973, 237, 6, 34, "Subitem",ExpressionUUID->"d520828f-bcb9-4cc7-9e2e-71e8ffce098e"],
Cell[41354, 981, 739, 12, 130, "Subitem",ExpressionUUID->"5f433ade-ff44-446d-a21f-d8ed23ec1749"],
Cell[42096, 995, 508, 9, 82, "Subitem",ExpressionUUID->"d700b297-136f-4bff-9595-cb36d48a79f2"],
Cell[42607, 1006, 395, 8, 58, "Subitem",ExpressionUUID->"e4a5077b-1b36-4e61-8902-9c8675ad6a2c"],
Cell[43005, 1016, 795, 13, 155, "Subitem",ExpressionUUID->"93008e14-2abf-4f8f-9aa4-308dc1ac904b"]
}, Open  ]]
}, Open  ]],
Cell[43827, 1033, 590, 13, 73, "Text",ExpressionUUID->"47d5e4a1-50ee-4469-a3b0-c99af8c7a44e"],
Cell[CellGroupData[{
Cell[44442, 1050, 199, 4, 37, "Input",ExpressionUUID->"fdde3c59-6cf3-4eb4-962d-5971348efd91"],
Cell[44644, 1056, 3917, 61, 198, "Print",ExpressionUUID->"a43925ff-8dc3-4f77-b056-14068c1d2298",
 CellTags->"Info3617776617-3499402"]
}, Open  ]],
Cell[48576, 1120, 589, 14, 73, "Text",ExpressionUUID->"b583bd0d-c263-48ab-8d2f-6387459608dc"],
Cell[CellGroupData[{
Cell[49190, 1138, 526, 8, 41, "Subsubsubsection",ExpressionUUID->"00795f31-aad2-4152-a778-9961f2b15c45"],
Cell[49719, 1148, 310, 9, 44, "Text",ExpressionUUID->"4347baea-71fd-474c-b5eb-b0016d3e0d23"],
Cell[50032, 1159, 708, 14, 67, "ItemNumbered",ExpressionUUID->"74ced674-779d-4463-bec9-ac506e364bc1"],
Cell[50743, 1175, 268, 6, 44, "Text",ExpressionUUID->"1f9aa772-a84d-490d-bb81-ee14cda0391b"],
Cell[51014, 1183, 998, 26, 119, "ItemNumbered",ExpressionUUID->"46243fd1-de38-4f10-8f7a-ff410fcf757e"],
Cell[CellGroupData[{
Cell[52037, 1213, 325, 7, 37, "Input",ExpressionUUID->"ab2dcdcb-df42-47fb-a48a-fcf0f5b8312f"],
Cell[52365, 1222, 325, 7, 42, "Output",ExpressionUUID->"0bdac4d2-cdc6-4d16-a8c7-99e75797b366"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52727, 1234, 400, 9, 37, "Input",ExpressionUUID->"46d97f7b-3f9d-4d20-aad2-4c461cb90c41"],
Cell[53130, 1245, 347, 7, 42, "Output",ExpressionUUID->"e59fd0f2-eca2-4482-8b4f-95386be23b68"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53526, 1258, 170, 3, 67, "Subsection",ExpressionUUID->"eab71766-9229-4b15-9081-710339ac5389"],
Cell[53699, 1263, 949, 18, 188, "Text",ExpressionUUID->"fe32ca13-afb2-4482-9b93-980250bf3a60"],
Cell[54651, 1283, 601, 11, 119, "Item",ExpressionUUID->"937e2571-dab2-436f-9dbd-39b83bd0d0e8"],
Cell[CellGroupData[{
Cell[55277, 1298, 480, 7, 41, "Subsubsubsection",ExpressionUUID->"7f671825-feb8-44c0-91a6-c1882a429ab9"],
Cell[55760, 1307, 1149, 20, 217, "Text",ExpressionUUID->"20d72488-3904-4027-ba52-a5a33074c2c2"],
Cell[56912, 1329, 776, 19, 93, "ItemNumbered",ExpressionUUID->"4138b638-e9e8-4fbf-b8cc-25800c8ccc67"],
Cell[CellGroupData[{
Cell[57713, 1352, 228, 4, 37, "Input",ExpressionUUID->"4a8fb21b-918b-480f-b76b-cfee02ff180c"],
Cell[57944, 1358, 230, 5, 42, "Output",ExpressionUUID->"af734a70-f946-4864-8185-1d7d7eac7004"]
}, Open  ]],
Cell[58189, 1366, 676, 11, 67, "ItemNumbered",ExpressionUUID->"63293e7a-c57e-4cea-876b-77687ab725c5"],
Cell[CellGroupData[{
Cell[58890, 1381, 487, 11, 37, "Input",ExpressionUUID->"85d048e7-4f80-41aa-a866-1eebd0c47bf4"],
Cell[59380, 1394, 678, 18, 69, "Output",ExpressionUUID->"97617109-6a3b-475b-8cbc-38121e92e266"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60095, 1417, 210, 3, 37, "Input",ExpressionUUID->"c08d116a-568d-4438-943e-f09e0b3625be"],
Cell[60308, 1422, 761, 24, 185, "Output",ExpressionUUID->"bfc9cb68-9fec-4b38-bd2c-70278ee27a93"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61130, 1453, 267, 4, 67, "Subsection",ExpressionUUID->"bbc507b0-be6f-4f49-9d5e-2c380b42a088"],
Cell[61400, 1459, 663, 11, 159, "Text",ExpressionUUID->"aa2810f6-9a07-4930-8cdc-93002ef71688"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[62112, 1476, 173, 3, 84, "Section",ExpressionUUID->"f8d0b1d0-a789-4a34-b9a7-cf5f412f41a1"],
Cell[CellGroupData[{
Cell[62310, 1483, 156, 3, 67, "Subsection",ExpressionUUID->"f05410dc-cdbb-4fd0-874a-bb340770a3dc"],
Cell[62469, 1488, 617, 11, 102, "Text",ExpressionUUID->"d899599b-54d9-4cd8-9e58-dfa5d27902c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63123, 1504, 229, 4, 67, "Subsection",ExpressionUUID->"c2ab6080-dad7-4524-8c78-80b8201a161b"],
Cell[63355, 1510, 423, 8, 131, "Text",ExpressionUUID->"18bd1706-9cda-4be2-8ac0-0e690eba8a2a"],
Cell[CellGroupData[{
Cell[63803, 1522, 128, 2, 37, "Input",ExpressionUUID->"de4b8606-710d-4864-a969-33aec65e6244"],
Cell[63934, 1526, 150, 2, 42, "Output",ExpressionUUID->"46f9b9f2-89c7-467a-8897-2f6fc36635d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64121, 1533, 137, 2, 37, "Input",ExpressionUUID->"a4daa8f7-d33e-46e3-8f00-14126ed1f367"],
Cell[64261, 1537, 151, 2, 42, "Output",ExpressionUUID->"16a74ce5-d22c-4f04-8f0f-609f4e515080"]
}, Open  ]],
Cell[64427, 1542, 275, 6, 44, "Text",ExpressionUUID->"a6cdc6d5-ace7-44a5-b2e4-e3ebbfa28a72"],
Cell[CellGroupData[{
Cell[64727, 1552, 194, 3, 37, "Input",ExpressionUUID->"5773eee0-c78b-4197-8ff4-6fae5661206c"],
Cell[64924, 1557, 149, 2, 42, "Output",ExpressionUUID->"2f6dd5ed-78a8-4a0c-9fc4-f9c1052262b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65110, 1564, 128, 2, 37, "Input",ExpressionUUID->"82b1bce5-562a-429b-a41f-f896dcc9e58c"],
Cell[65241, 1568, 150, 2, 42, "Output",ExpressionUUID->"d2ed1617-780e-4718-b0c7-77b2c8ee60d4"]
}, Open  ]],
Cell[65406, 1573, 669, 13, 102, "Text",ExpressionUUID->"218c4047-c6d5-48c2-a78e-fce934fa1563"],
Cell[CellGroupData[{
Cell[66100, 1590, 128, 2, 37, "Input",ExpressionUUID->"7cea6d63-4b0c-48b5-a635-e6906c1435cf"],
Cell[66231, 1594, 172, 3, 42, "Output",ExpressionUUID->"ed5d4c28-5706-4d3f-8a7c-0b32b10c8a6d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66440, 1602, 210, 5, 37, "Input",ExpressionUUID->"7b0eef62-7177-4437-8a29-26e806c375f3"],
Cell[66653, 1609, 229, 5, 43, "Output",ExpressionUUID->"01678cc2-f9c5-4d21-a26a-742994b057de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66919, 1619, 336, 9, 41, "Input",ExpressionUUID->"76ec4e5f-ed89-42f4-a4f1-bfcdad6d455f"],
Cell[67258, 1630, 171, 3, 42, "Output",ExpressionUUID->"9b1e2be0-396f-42db-a281-6dff4667cfc4"]
}, Open  ]],
Cell[67444, 1636, 1383, 26, 274, "Text",ExpressionUUID->"e275c3b3-3885-42e2-b793-6ba80d65398f"],
Cell[CellGroupData[{
Cell[68852, 1666, 167, 3, 37, "Input",ExpressionUUID->"ab5812d3-f8e1-4a44-b1c2-41f5cf48e9f8"],
Cell[69022, 1671, 172, 2, 42, "Output",ExpressionUUID->"52b45f0f-2b5b-4458-9e61-2946590ffcc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69231, 1678, 274, 6, 37, "Input",ExpressionUUID->"9527246c-d979-4b21-b8ac-332ff1e13786"],
Cell[69508, 1686, 381, 8, 103, "Output",ExpressionUUID->"c4fd7b97-8d9b-475a-a98c-1970a9a00ba8"]
}, Open  ]],
Cell[69904, 1697, 649, 17, 102, "Text",ExpressionUUID->"1ec5eadd-f966-4af0-a130-961807f1408c"],
Cell[CellGroupData[{
Cell[70578, 1718, 168, 3, 37, "Input",ExpressionUUID->"160be160-dfbb-4dab-a100-e8ffe3189e51"],
Cell[70749, 1723, 155, 2, 42, "Output",ExpressionUUID->"03cd7994-d375-421a-9806-57b9d038f9e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70941, 1730, 285, 6, 37, "Input",ExpressionUUID->"0fc0d2d0-3b0f-4346-a2ac-c069f5c4471d"],
Cell[71229, 1738, 283, 6, 42, "Output",ExpressionUUID->"8b2ae676-919b-4ae7-8033-d46682f87cd0"]
}, Open  ]],
Cell[71527, 1747, 802, 16, 188, "Text",ExpressionUUID->"a8bed37a-2aaf-48e4-8c54-f024136fe022"],
Cell[CellGroupData[{
Cell[72354, 1767, 194, 4, 37, "Input",ExpressionUUID->"59831b60-7254-492a-b5cb-7602aea4b19b"],
Cell[72551, 1773, 150, 2, 42, "Output",ExpressionUUID->"cbda8c3d-77ac-498e-b93d-f511efb8ec0a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72738, 1780, 147, 2, 37, "Input",ExpressionUUID->"d9ed44d1-0e4a-4023-8879-e8cf58c72aae"],
Cell[72888, 1784, 150, 2, 42, "Output",ExpressionUUID->"8ae71f63-1846-49e1-9e46-0b8cd4307058"]
}, Open  ]],
Cell[73053, 1789, 1451, 33, 217, "Text",ExpressionUUID->"fb66ea62-8ab9-446f-b2b1-e6df5f9a9f48"],
Cell[74507, 1824, 261, 5, 37, "Input",ExpressionUUID->"fd4d4430-3192-4036-a411-f01942496e6f"],
Cell[74771, 1831, 1371, 27, 102, "Text",ExpressionUUID->"3f4c5683-29b8-43d3-a4fa-4e8fb5825e0e"],
Cell[CellGroupData[{
Cell[76167, 1862, 147, 2, 37, "Input",ExpressionUUID->"e1e49ac8-fc2f-4c24-9727-ca8648a8b67d"],
Cell[76317, 1866, 150, 2, 42, "Output",ExpressionUUID->"3b6d9d29-3c41-4d62-85fb-c3d97eddd2cd"]
}, Open  ]],
Cell[76482, 1871, 882, 14, 102, "Text",ExpressionUUID->"aeb2a3ea-215b-4be2-8aeb-1cae79f9831e"],
Cell[CellGroupData[{
Cell[77389, 1889, 183, 4, 37, "Input",ExpressionUUID->"8e1ac973-a038-4c3d-80bc-c57fd2a5dfae"],
Cell[77575, 1895, 163, 2, 42, "Output",ExpressionUUID->"283149a2-57f4-411e-bf74-776a8be90452"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77775, 1902, 214, 3, 37, "Input",ExpressionUUID->"629766e9-e86b-412e-86dc-8aa65828826e"],
Cell[77992, 1907, 161, 2, 42, "Output",ExpressionUUID->"2048e086-0d7a-493e-a7ba-71b62edec775"]
}, Open  ]],
Cell[78168, 1912, 312, 7, 73, "Text",ExpressionUUID->"26445aea-c95a-43bd-aeb5-6f0bb401b716"],
Cell[CellGroupData[{
Cell[78505, 1923, 320, 7, 37, "Input",ExpressionUUID->"da1ec615-e824-4546-84a0-ed49b8747982"],
Cell[78828, 1932, 241, 5, 42, "Output",ExpressionUUID->"b4aaec3f-300c-460c-80ca-6e82f9e3500b"]
}, Open  ]],
Cell[79084, 1940, 234, 6, 44, "Text",ExpressionUUID->"cc7edd13-fa17-415b-9f99-41854c8bd552"],
Cell[CellGroupData[{
Cell[79343, 1950, 288, 5, 37, "Input",ExpressionUUID->"648bf620-ea3e-4d1c-850b-ab389b759dc4"],
Cell[79634, 1957, 183, 2, 42, "Output",ExpressionUUID->"47e83b1b-96b7-4305-9a18-f0de5ca74ef5"]
}, Open  ]],
Cell[79832, 1962, 754, 18, 131, "Text",ExpressionUUID->"91f67c05-4094-49e5-933f-e963d1a804dc"],
Cell[CellGroupData[{
Cell[80611, 1984, 218, 3, 37, "Input",ExpressionUUID->"7cbd443b-cda1-4dbd-9593-0ed04a5269b1"],
Cell[80832, 1989, 270, 6, 42, "Output",ExpressionUUID->"bcbbf62d-cfc8-4fe1-a044-efe451dbab78"]
}, Open  ]],
Cell[81117, 1998, 723, 13, 102, "Text",ExpressionUUID->"356f4bba-8246-4cae-a858-1b67238402bb"],
Cell[CellGroupData[{
Cell[81865, 2015, 323, 7, 37, "Input",ExpressionUUID->"ff98a193-51c7-45a5-b38d-d4d88b780388",
 Evaluatable->True],
Cell[82191, 2024, 455, 10, 29, "Message",ExpressionUUID->"a079aebc-9b6d-44d7-957c-f381cd2eff0e"],
Cell[82649, 2036, 231, 4, 42, "Output",ExpressionUUID->"4d7d2f4a-76e4-436c-984a-6aa73970f02c"]
}, Open  ]],
Cell[82895, 2043, 2375, 74, 131, "Text",ExpressionUUID->"e13b3d94-f4ed-4bc1-9517-8e393f835271"],
Cell[CellGroupData[{
Cell[85295, 2121, 168, 3, 41, "Subsubsubsection",ExpressionUUID->"f0ad952f-8b2e-4634-82ef-6ce286769c4a"],
Cell[85466, 2126, 1496, 30, 217, "Text",ExpressionUUID->"6ca61cf1-537e-47fe-857a-71dee19c2751"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86999, 2161, 238, 4, 41, "Subsubsubsection",ExpressionUUID->"ff120b48-d607-4529-974a-a6ff02d5552a"],
Cell[87240, 2167, 476, 11, 44, "Text",ExpressionUUID->"1106cda2-5f2a-4b41-8c06-53d98611fd1e"],
Cell[87719, 2180, 278, 5, 37, "Input",ExpressionUUID->"f399e7ff-cd73-4a25-a651-0d00e2aa2fd8"],
Cell[88000, 2187, 471, 10, 44, "Text",ExpressionUUID->"ca03e0c8-b435-4ea7-a997-54de388dd1c7"],
Cell[88474, 2199, 246, 4, 37, "Input",ExpressionUUID->"cd7394e4-51f4-4512-b02e-eb3399b5f9b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88757, 2208, 562, 8, 41, "Subsubsubsection",ExpressionUUID->"4a868d39-558e-435e-a961-5f07fe248261"],
Cell[89322, 2218, 322, 5, 44, "Text",ExpressionUUID->"a605d789-2d0e-46e1-ba7d-f0388579e7fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89681, 2228, 579, 10, 41, "Subsubsubsection",ExpressionUUID->"6a17e8d1-d96d-45d0-8750-f264802aa63c"],
Cell[90263, 2240, 801, 19, 67, "ItemNumbered",ExpressionUUID->"c19f7089-180f-4663-a6bc-0e8c340bbd15"],
Cell[91067, 2261, 373, 8, 37, "Input",ExpressionUUID->"64a20e62-6007-4f2d-8965-30ed7a278ad9"],
Cell[CellGroupData[{
Cell[91465, 2273, 216, 3, 37, "Input",ExpressionUUID->"397f3e2d-6065-4e50-afa0-230351713e68"],
Cell[91684, 2278, 622, 15, 42, "Output",ExpressionUUID->"92327e29-aadc-44c2-a89e-ac15330f4d16"]
}, Open  ]],
Cell[92321, 2296, 599, 10, 93, "ItemNumbered",ExpressionUUID->"42fd68e4-8595-4d9b-8d8b-ae91675c2c36"],
Cell[92923, 2308, 447, 10, 37, "Input",ExpressionUUID->"0cc4f8a7-c74a-4d2b-a78d-b0bcc9a938a6"],
Cell[CellGroupData[{
Cell[93395, 2322, 251, 4, 37, "Input",ExpressionUUID->"b44486ec-b6e9-4416-9ee8-4c367cc4b752"],
Cell[93649, 2328, 270, 6, 59, "Output",ExpressionUUID->"808c587c-5696-49d5-8df5-0fff81eab39a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93980, 2341, 194, 3, 67, "Subsection",ExpressionUUID->"7c50595e-9375-434a-b82c-33ebeb3554fd"],
Cell[94177, 2346, 1565, 24, 332, "Text",ExpressionUUID->"b1d7c9ab-4f18-4df3-af75-5720840ccbf5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95779, 2375, 158, 3, 67, "Subsection",ExpressionUUID->"8bd2df6b-2f9a-4e05-823b-ddd3ee283ccc"],
Cell[95940, 2380, 406, 8, 73, "Text",ExpressionUUID->"d7c522d5-3b0d-4e87-83a8-99606a7e3b49"],
Cell[CellGroupData[{
Cell[96371, 2392, 418, 8, 37, "Input",ExpressionUUID->"a7fb8ea0-7808-4d3f-a343-8e11967286a5"],
Cell[96792, 2402, 234, 5, 42, "Output",ExpressionUUID->"129c19be-3a6e-47ea-8e1f-bfcfe29bca1b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[97075, 2413, 221, 4, 67, "Subsection",ExpressionUUID->"e02aa7d4-6300-41c7-87be-e7ab1c6fd499"],
Cell[97299, 2419, 520, 13, 44, "Text",ExpressionUUID->"a561b3fd-8535-4314-8543-35ed026205b6"],
Cell[CellGroupData[{
Cell[97844, 2436, 562, 8, 41, "Subsubsubsection",ExpressionUUID->"efbf3343-495c-4388-ac76-2656f0bd9f89"],
Cell[98409, 2446, 1477, 31, 246, "Text",ExpressionUUID->"66552d51-7198-4232-b242-a40ef9bb106b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99923, 2482, 561, 8, 41, "Subsubsubsection",ExpressionUUID->"5982435e-ba58-4e7e-ab60-315454d188d7"],
Cell[100487, 2492, 614, 14, 67, "ItemNumbered",ExpressionUUID->"a45d2811-a84b-432a-9f41-23801666d729"],
Cell[101104, 2508, 276, 5, 37, "Input",ExpressionUUID->"c8323863-235d-410c-9586-278707d5fcfc"],
Cell[CellGroupData[{
Cell[101405, 2517, 198, 3, 37, "Input",ExpressionUUID->"5d18622f-73cf-41d8-91a5-7a9e32f280a8"],
Cell[101606, 2522, 194, 4, 29, "Print",ExpressionUUID->"12fbd965-4502-4a6d-b179-e97007f58be4"]
}, Open  ]],
Cell[101815, 2529, 890, 21, 93, "ItemNumbered",ExpressionUUID->"92eba4aa-df2c-4c78-ad8e-f5870a5deb31"],
Cell[102708, 2552, 390, 8, 37, "Input",ExpressionUUID->"62df056f-f40f-4e10-b96f-d5a280bf1444"],
Cell[CellGroupData[{
Cell[103123, 2564, 504, 9, 37, "Input",ExpressionUUID->"56dcbf60-d0e8-464e-ae5f-c0b9d77d359e",
 Evaluatable->False],
Cell[103630, 2575, 370, 10, 29, "Print",ExpressionUUID->"4b4bc904-81cc-49d0-8f54-b3e0c820914c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104037, 2590, 382, 9, 37, "Input",ExpressionUUID->"4b05e2f4-4335-4c0a-8389-128ae066c9ce",
 Evaluatable->False],
Cell[104422, 2601, 355, 9, 29, "Print",ExpressionUUID->"1f64db46-5caf-44b6-8bac-d19691e8c08f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104814, 2615, 418, 9, 37, "Input",ExpressionUUID->"319631b9-0a5f-4eac-a30c-277c51c36907",
 Evaluatable->False],
Cell[105235, 2626, 369, 9, 29, "Print",ExpressionUUID->"1f8aa6c5-16b4-4a0d-81f8-6cff448778c4"]
}, Open  ]],
Cell[105619, 2638, 357, 7, 73, "Text",ExpressionUUID->"736a8c5f-24dc-47fe-83b2-ff9da6dfbc60"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106025, 2651, 196, 3, 67, "Subsection",ExpressionUUID->"f6f8cd80-ab6b-4c93-aed1-227c718525c2"],
Cell[106224, 2656, 980, 27, 159, "Text",ExpressionUUID->"ddd50e62-b474-4abc-ad98-1d3316cd461c"],
Cell[CellGroupData[{
Cell[107229, 2687, 562, 8, 41, "Subsubsubsection",ExpressionUUID->"277d5c05-71b4-456d-b4f5-1b32b8432ca8"],
Cell[CellGroupData[{
Cell[107816, 2699, 434, 7, 40, "ItemNumbered",ExpressionUUID->"803a3306-9f48-4a13-990e-cc30b5741cff"],
Cell[108253, 2708, 454, 12, 40, "ItemNumbered",ExpressionUUID->"09951a62-2149-435a-b1e6-a95750721e01"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[108756, 2726, 620, 9, 41, "Subsubsubsection",ExpressionUUID->"49022a07-69aa-43aa-a9bc-349caec00fde"],
Cell[109379, 2737, 600, 16, 73, "Text",ExpressionUUID->"cd147c10-bfa8-49cc-9353-c257249e7ac6"],
Cell[109982, 2755, 350, 8, 37, "Input",ExpressionUUID->"a46b639e-567a-490f-b617-bd888cce3a72"],
Cell[CellGroupData[{
Cell[110357, 2767, 210, 3, 37, "Input",ExpressionUUID->"2769602f-457a-4773-af96-3bb5ac475621"],
Cell[CellGroupData[{
Cell[110592, 2774, 193, 4, 29, "Print",ExpressionUUID->"0f12be27-2840-4e42-a2e6-d46ecd69b19e"],
Cell[110788, 2780, 193, 4, 29, "Print",ExpressionUUID->"9c44dadb-39f9-4f20-97c0-a0b3e3380949"],
Cell[110984, 2786, 192, 4, 29, "Print",ExpressionUUID->"b44952c1-b684-442d-88e2-eb365a10d138"],
Cell[111179, 2792, 193, 4, 29, "Print",ExpressionUUID->"5be8b748-a6de-4ed0-8d1a-12760bc7efee"],
Cell[111375, 2798, 193, 4, 29, "Print",ExpressionUUID->"e6c90dd7-daf1-4e69-8a4f-34ab66750bd2"],
Cell[111571, 2804, 192, 4, 29, "Print",ExpressionUUID->"df19717c-de60-456c-9bd3-a47b41528e8f"],
Cell[111766, 2810, 193, 4, 29, "Print",ExpressionUUID->"10623fa5-32f2-4006-b83e-d7495acf8227"],
Cell[111962, 2816, 195, 4, 29, "Print",ExpressionUUID->"8c0b0305-4945-407b-bb9a-464438cbd29e"],
Cell[112160, 2822, 193, 4, 29, "Print",ExpressionUUID->"91c50c5e-f064-4be1-b110-cda5dcf31303"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[112426, 2834, 276, 4, 67, "Subsection",ExpressionUUID->"fe6427cb-692c-4bd1-ab88-06fb140f8108"],
Cell[112705, 2840, 445, 8, 73, "Text",ExpressionUUID->"30d6803d-c6b2-4312-98de-59e8acb5c626"],
Cell[113153, 2850, 450, 9, 37, "Input",ExpressionUUID->"a2d2b84f-2b53-4f00-bc40-bbaebdf59bbf"],
Cell[CellGroupData[{
Cell[113628, 2863, 249, 4, 37, "Input",ExpressionUUID->"9ba4ff73-5488-4c16-b760-3472492cc54c"],
Cell[113880, 2869, 149, 2, 42, "Output",ExpressionUUID->"f8b28c8f-8f35-45f0-8fbd-3b94b4651345"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114066, 2876, 223, 4, 37, "Input",ExpressionUUID->"80f52e11-9e00-40f1-b2c1-8afdb7dfdf30"],
Cell[114292, 2882, 149, 2, 42, "Output",ExpressionUUID->"a7471222-a180-41a2-a812-239295766d5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114478, 2889, 172, 2, 37, "Input",ExpressionUUID->"e62ff185-da2b-49c5-a3f6-f8d8fbd8dfff"],
Cell[114653, 2893, 149, 2, 42, "Output",ExpressionUUID->"3198a586-8e74-449b-93fc-5d50464cfcc0"]
}, Open  ]],
Cell[114817, 2898, 1153, 26, 217, "Text",ExpressionUUID->"eeb5f76c-c31f-4245-9887-36b362320324"],
Cell[115973, 2926, 516, 12, 102, "Text",ExpressionUUID->"bf3bb5bc-5b98-4e2c-80cb-17496b3db6e4"],
Cell[116492, 2940, 824, 22, 90, "Input",ExpressionUUID->"15959a22-43ba-4a6c-b46b-cfab694fb1b0"],
Cell[CellGroupData[{
Cell[117341, 2966, 266, 4, 37, "Input",ExpressionUUID->"04ca98da-0e3a-4ec5-91fd-3cb1846ed9a3"],
Cell[117610, 2972, 266, 6, 42, "Output",ExpressionUUID->"321c8f1a-f7a2-4f1d-acb0-ee3cab6472fb"]
}, Open  ]],
Cell[117891, 2981, 494, 11, 73, "Text",ExpressionUUID->"f5ed3fde-9780-4e3e-99ab-cc2f5708c38b"],
Cell[118388, 2994, 789, 20, 37, "Input",ExpressionUUID->"ca1635af-05cd-411c-bcb6-1ede79f1a1fc"],
Cell[119180, 3016, 443, 11, 73, "Text",ExpressionUUID->"e24057e4-927d-435a-b3df-db1c5fc8c1f4"],
Cell[119626, 3029, 467, 13, 37, "Input",ExpressionUUID->"30e0c729-968a-4131-bd90-9bd1fd42cbbd"],
Cell[120096, 3044, 168, 3, 44, "Text",ExpressionUUID->"0ffa9866-fbb2-4c85-9598-f373ecbd80dd"],
Cell[CellGroupData[{
Cell[120289, 3051, 205, 3, 37, "Input",ExpressionUUID->"276e56db-f8f0-47e1-9472-5afb640b5ab6"],
Cell[120497, 3056, 178, 3, 42, "Output",ExpressionUUID->"d79cd933-d63e-4b13-979d-9c8321d86c5a"]
}, Open  ]],
Cell[120690, 3062, 516, 17, 73, "Text",ExpressionUUID->"e90044ed-fab0-4122-8341-642efc5ce2ea"],
Cell[121209, 3081, 692, 17, 116, "Input",ExpressionUUID->"e55d6c2b-b2f2-4f76-aade-3fcce909cb61"],
Cell[CellGroupData[{
Cell[121926, 3102, 201, 3, 37, "Input",ExpressionUUID->"bfe005bb-5eff-4792-a9e6-ce04518f9c42"],
Cell[122130, 3107, 150, 2, 42, "Output",ExpressionUUID->"49c239b3-b393-491a-8a03-3f213917fbfa"]
}, Open  ]],
Cell[122295, 3112, 380, 10, 73, "Text",ExpressionUUID->"8ccd8717-246c-4b52-9b64-07d947e6946f"],
Cell[122678, 3124, 1612, 37, 220, "Input",ExpressionUUID->"969f7740-603d-4016-9b1c-054e69a48560"],
Cell[CellGroupData[{
Cell[124315, 3165, 346, 5, 37, "Input",ExpressionUUID->"f0d3ddde-3e51-409a-885d-7d3ef4cfd478"],
Cell[124664, 3172, 148, 2, 42, "Output",ExpressionUUID->"0867024b-935d-4aa8-987e-f513394460c8"]
}, Open  ]],
Cell[124827, 3177, 1367, 37, 217, "Text",ExpressionUUID->"57fae955-08ad-48e3-abe1-2ad4b8f7711f"],
Cell[126197, 3216, 423, 14, 73, "Text",ExpressionUUID->"e8f6839f-9a4b-43df-b4d8-9f9503bb65b4"],
Cell[CellGroupData[{
Cell[126645, 3234, 562, 8, 41, "Subsubsubsection",ExpressionUUID->"27de67a4-31a5-4316-8c00-4735ba58838c"],
Cell[127210, 3244, 609, 11, 73, "Text",ExpressionUUID->"a498e512-4338-459b-b073-5db5568c345f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127856, 3260, 177, 3, 56, "Subsubsection",ExpressionUUID->"bd3b7422-1fc6-4aad-89aa-6d1683bc9435"],
Cell[128036, 3265, 306, 6, 73, "Text",ExpressionUUID->"440bdec1-166c-4527-bf85-0fa554d92591"],
Cell[CellGroupData[{
Cell[128367, 3275, 190, 3, 37, "Input",ExpressionUUID->"5a280448-264c-4402-b056-9ae06b107090"],
Cell[128560, 3280, 183, 2, 42, "Output",ExpressionUUID->"40ee01dc-7560-45cd-8e4d-8839ad3a6875"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128780, 3287, 288, 6, 37, "Input",ExpressionUUID->"951cc97f-5702-4037-a66f-ff945b5c42b5"],
Cell[129071, 3295, 208, 4, 29, "Print",ExpressionUUID->"09a23bdd-0809-4164-b8d0-e5e4ee09ed23"]
}, Open  ]],
Cell[129294, 3302, 471, 9, 102, "Text",ExpressionUUID->"a5762c1d-d4a7-4292-996d-fce57956cc65"],
Cell[129768, 3313, 669, 18, 37, "Input",ExpressionUUID->"8a0fb8b1-1411-4b85-bd44-8dd816d179b1"],
Cell[CellGroupData[{
Cell[130462, 3335, 309, 5, 37, "Input",ExpressionUUID->"daad5854-3244-4c10-90a6-b7e40390c1c8"],
Cell[130774, 3342, 150, 2, 42, "Output",ExpressionUUID->"f5800a60-bf2f-4f88-b6ce-5e7ceff66a13"]
}, Open  ]],
Cell[130939, 3347, 539, 18, 73, "Text",ExpressionUUID->"874e8585-bce7-45c4-b97f-8a7b39dfcfea"],
Cell[CellGroupData[{
Cell[131503, 3369, 743, 11, 41, "Subsubsubsection",ExpressionUUID->"48589d04-5ad5-4d5f-8b7f-7f26a6b83a37"],
Cell[132249, 3382, 2794, 72, 303, "Text",ExpressionUUID->"c5760eb0-49b0-4da3-9321-30b56faad8e0"],
Cell[135046, 3456, 1584, 38, 246, "Input",ExpressionUUID->"3a8be9e3-8319-4175-a46d-05aae0327ff4"],
Cell[CellGroupData[{
Cell[136655, 3498, 266, 5, 37, "Input",ExpressionUUID->"b1b70c97-223b-4c2a-919d-63de1ad9f219"],
Cell[136924, 3505, 490, 8, 42, "Output",ExpressionUUID->"f4e1440c-8b93-40e7-b5ab-bfa6eb0436ff"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[137487, 3521, 234, 4, 67, "Subsection",ExpressionUUID->"db8c9005-a6af-413a-b632-2d814bdf7010"],
Cell[137724, 3527, 262, 8, 44, "Text",ExpressionUUID->"f5fee483-cde0-4441-9116-817f90db1946"],
Cell[137989, 3537, 498, 11, 37, "Input",ExpressionUUID->"284d21bb-0cfd-43a2-a02e-34a61dba932b"],
Cell[CellGroupData[{
Cell[138512, 3552, 312, 6, 37, "Input",ExpressionUUID->"3b9a5ea5-5c13-478d-b657-5819d1c233fc"],
Cell[138827, 3560, 156, 3, 42, "Output",ExpressionUUID->"d093523f-9b71-4267-87dd-e77acac3711a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139020, 3568, 306, 6, 37, "Input",ExpressionUUID->"9bf8d3e3-a1e5-4683-ace9-4c116e01dff1"],
Cell[139329, 3576, 153, 3, 42, "Output",ExpressionUUID->"5f46ce5a-6ff6-4f5d-a1f9-b07c12ad267e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139519, 3584, 311, 6, 37, "Input",ExpressionUUID->"d3445918-37b0-410b-8e8b-5961d45f5495"],
Cell[139833, 3592, 160, 3, 42, "Output",ExpressionUUID->"c3027dcb-d9ce-406c-bd2a-1763dbfa5c36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140030, 3600, 400, 10, 37, "Input",ExpressionUUID->"281a241c-b36a-48dd-92f6-6b41ba095dbc"],
Cell[140433, 3612, 3893, 85, 298, "Output",ExpressionUUID->"faa2d534-1730-434c-a68d-3afd49efdae2"]
}, Open  ]],
Cell[144341, 3700, 916, 24, 159, "Text",ExpressionUUID->"fe2f94d5-8290-43ca-821a-8e7c3e4facad"],
Cell[CellGroupData[{
Cell[145282, 3728, 368, 8, 37, "Input",ExpressionUUID->"b3dda451-1a64-45b3-81ec-9da92f0eef29"],
Cell[145653, 3738, 191, 4, 29, "Print",ExpressionUUID->"37d913ad-2c7b-4494-b50b-479148a2544c"]
}, Open  ]],
Cell[145859, 3745, 517, 18, 73, "Text",ExpressionUUID->"425aef58-5832-4dd8-be6e-6aa49e0d49ed"],
Cell[CellGroupData[{
Cell[146401, 3767, 262, 6, 37, "Input",ExpressionUUID->"b2a1dca7-9202-4ad8-b8b4-26b8cc8fabc8"],
Cell[146666, 3775, 241, 6, 42, "Output",ExpressionUUID->"8eb5d395-fc9d-435d-8f3f-1ce782c015ef"]
}, Open  ]],
Cell[146922, 3784, 497, 11, 73, "Text",ExpressionUUID->"e803fa59-5295-4002-8b58-4cfafa13698e"],
Cell[CellGroupData[{
Cell[147444, 3799, 395, 9, 37, "Input",ExpressionUUID->"2307993f-fb52-4d39-b4b4-fa35cb9970ca"],
Cell[147842, 3810, 206, 4, 29, "Print",ExpressionUUID->"3aad0393-3bfb-4d4d-aaaf-3e4c594fbded"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148085, 3819, 785, 15, 41, "Subsubsubsection",ExpressionUUID->"8858ca86-db85-45f7-8d67-2d8bb17a6545"],
Cell[148873, 3836, 635, 17, 102, "Text",ExpressionUUID->"b22d2cd1-71c9-4472-86ee-d084d168476d"],
Cell[CellGroupData[{
Cell[149533, 3857, 198, 4, 37, "Input",ExpressionUUID->"ce6c9128-7045-45ca-a811-0e1960858ec8"],
Cell[149734, 3863, 12121, 295, 119, "Output",ExpressionUUID->"1a76d069-865f-45e9-8dcd-2e8ac139f468"]
}, Open  ]],
Cell[161870, 4161, 590, 13, 142, "Input",ExpressionUUID->"8389732a-6426-4d81-ae25-6cd3178b1b98"],
Cell[CellGroupData[{
Cell[162485, 4178, 226, 4, 37, "Input",ExpressionUUID->"91d73ad3-e223-4b43-a356-2f6735075a0d"],
Cell[162714, 4184, 167, 3, 42, "Output",ExpressionUUID->"d9f8d2d7-ddec-45b9-98b8-66862919e17a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162918, 4192, 220, 4, 37, "Input",ExpressionUUID->"d219e33e-625a-4e41-8acc-51df838efc88"],
Cell[163141, 4198, 201, 4, 29, "Print",ExpressionUUID->"189b6d47-3f9e-43be-a93c-17683bc66d6f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[163403, 4209, 228, 4, 67, "Subsection",ExpressionUUID->"13e3693e-d9c2-4ad3-bf18-b933f0936634"],
Cell[163634, 4215, 392, 8, 73, "Text",ExpressionUUID->"776da484-f736-4748-9cb0-db8c286d46a2"],
Cell[CellGroupData[{
Cell[164051, 4227, 562, 8, 41, "Subsubsubsection",ExpressionUUID->"338f101e-8687-4c12-8556-101b14ef854d"],
Cell[CellGroupData[{
Cell[164638, 4239, 682, 18, 93, "Item",ExpressionUUID->"21308635-4e50-411e-9a40-f4f135ce637a"],
Cell[165323, 4259, 466, 11, 93, "Item",ExpressionUUID->"e3db703f-4eb5-4a9c-a11e-5c61c1371736"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[165838, 4276, 779, 11, 41, "Subsubsubsection",ExpressionUUID->"1002f113-ad74-4dd2-b4ec-c8936038a73f"],
Cell[166620, 4289, 3344, 73, 476, "Text",ExpressionUUID->"75e5a849-9cf4-4630-bcef-4cc31c006379"],
Cell[169967, 4364, 2080, 46, 272, "Input",ExpressionUUID->"9fb30d2a-376f-43c0-8486-b66a1ad8976e"],
Cell[CellGroupData[{
Cell[172072, 4414, 310, 8, 37, "Input",ExpressionUUID->"96b99e3f-78c7-4696-94a1-45035e1d13ab"],
Cell[172385, 4424, 165, 3, 42, "Output",ExpressionUUID->"7ce71def-140c-46a5-9a0b-d11fe61991a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172587, 4432, 313, 8, 37, "Input",ExpressionUUID->"0dbe889f-6b51-40fd-95e4-f14d782d8b29"],
Cell[172903, 4442, 172, 3, 42, "Output",ExpressionUUID->"e2f1a0a6-b366-493a-9378-3ce7d315ddd4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[173136, 4452, 165, 3, 67, "Subsection",ExpressionUUID->"090cab0c-69ba-43aa-8e7d-7dfd586b30a2"],
Cell[173304, 4457, 382, 9, 102, "Text",ExpressionUUID->"494dfca7-c967-423f-af38-e8c08636deb0"],
Cell[173689, 4468, 650, 17, 64, "Input",ExpressionUUID->"157bd667-adaf-4285-afdd-9a43b2c509ec"],
Cell[174342, 4487, 932, 19, 159, "Text",ExpressionUUID->"1cf20387-08b6-46c2-b18b-2cc93ff1f6d5"],
Cell[175277, 4508, 315, 8, 37, "Input",ExpressionUUID->"d3eeab1a-b261-4069-ae94-6f89e97bbacc"],
Cell[175595, 4518, 344, 8, 44, "Text",ExpressionUUID->"0b08e300-a66b-4e9d-8042-f7ebde8086d2"],
Cell[CellGroupData[{
Cell[175964, 4530, 207, 4, 37, "Input",ExpressionUUID->"3a818f82-40cd-491f-a78b-2e6fc823fb5b"],
Cell[176174, 4536, 244, 4, 42, "Output",ExpressionUUID->"971765de-3f7b-4db9-be79-9dce098be3a0"]
}, Open  ]],
Cell[176433, 4543, 339, 8, 44, "Text",ExpressionUUID->"6e1c0722-3307-4011-bf4f-9013a01a105a"],
Cell[CellGroupData[{
Cell[176797, 4555, 231, 5, 37, "Input",ExpressionUUID->"63d6d8a0-aef2-4aff-a882-8304e12755af"],
Cell[177031, 4562, 501, 11, 29, "Message",ExpressionUUID->"afbefe70-c2e0-4800-ae32-15d955992729"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177569, 4578, 206, 5, 37, InheritFromParent,ExpressionUUID->"dd52b43a-7fa1-4d9f-b2f1-72f18dfd27d5"],
Cell[177778, 4585, 408, 10, 29, "Message",ExpressionUUID->"d87be726-38e2-4aaf-a661-46317dc2e3f7"],
Cell[178189, 4597, 208, 5, 42, "Output",ExpressionUUID->"16c58e8f-95ac-4e36-9a0a-c15540f7f00f"]
}, Open  ]],
Cell[178412, 4605, 359, 8, 44, "Text",ExpressionUUID->"d33e0f95-3ecf-472f-840b-b856ee7e8bf6"],
Cell[178774, 4615, 256, 6, 71, "Input",ExpressionUUID->"7ae4bfcb-343e-4dff-962d-2731b9d2dd4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179067, 4626, 218, 4, 67, "Subsection",ExpressionUUID->"047d6522-5d08-4b8f-bbb2-66ce926a29ce"],
Cell[179288, 4632, 656, 14, 102, "Text",ExpressionUUID->"b0eeeefd-6ee3-4436-a5dd-220a96ab1749"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

